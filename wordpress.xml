<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.9" created="2014-09-22 12:14" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>@bwgang的记录</title>
	<link>http://localhost/wp</link>
	<description>杂七杂八记一下 以后看就是回忆</description>
	<pubDate>Mon, 22 Sep 2014 12:14:37 +0000</pubDate>
	<language>zh-CN</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://localhost/wp</wp:base_site_url>
	<wp:base_blog_url>http://localhost/wp</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>bwgang</wp:author_login><wp:author_email>bwgang@163.com</wp:author_email><wp:author_display_name><![CDATA[白维刚]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

	<wp:category><wp:term_id>20</wp:term_id><wp:category_nicename>qtaf</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[QTAF接口自动化框架]]></wp:cat_name><wp:category_description><![CDATA[QTAF接口自动化框架 使用手册]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>10</wp:term_id><wp:category_nicename>lqbz</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[乱七八糟]]></wp:cat_name><wp:category_description><![CDATA[吐槽]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>14</wp:term_id><wp:category_nicename>other</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[其他类]]></wp:cat_name><wp:category_description><![CDATA[其他类]]></wp:category_description></wp:category>
	<wp:category><wp:term_id>24</wp:term_id><wp:category_nicename>%e6%80%a7%e8%83%bd%e7%9b%b8%e5%85%b3</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[性能相关]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>6</wp:term_id><wp:category_nicename>os</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[操作系统]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>4</wp:term_id><wp:category_nicename>code</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[编程语言]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>5</wp:term_id><wp:category_nicename>net</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[网络通信]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>15</wp:term_id><wp:category_nicename>%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95</wp:category_nicename><wp:category_parent></wp:category_parent><wp:cat_name><![CDATA[自动化测试]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>21</wp:term_id><wp:category_nicename>git</wp:category_nicename><wp:category_parent>other</wp:category_parent><wp:cat_name><![CDATA[Git]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>1</wp:term_id><wp:category_nicename>java</wp:category_nicename><wp:category_parent>code</wp:category_parent><wp:cat_name><![CDATA[JAVA]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>16</wp:term_id><wp:category_nicename>php</wp:category_nicename><wp:category_parent>code</wp:category_parent><wp:cat_name><![CDATA[PHP]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>23</wp:term_id><wp:category_nicename>%e4%b8%89%e6%98%9fs4</wp:category_nicename><wp:category_parent>other</wp:category_parent><wp:cat_name><![CDATA[三星S4]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>17</wp:term_id><wp:category_nicename>%e5%89%8d%e7%ab%afjshtml</wp:category_nicename><wp:category_parent>code</wp:category_parent><wp:cat_name><![CDATA[前端js/html]]></wp:cat_name></wp:category>
	<wp:category><wp:term_id>18</wp:term_id><wp:category_nicename>%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f</wp:category_nicename><wp:category_parent>java</wp:category_parent><wp:cat_name><![CDATA[设计模式]]></wp:cat_name></wp:category>
	<wp:tag><wp:term_id>22</wp:term_id><wp:tag_slug>git-%e4%bb%a3%e7%a0%81%e7%ae%a1%e7%90%86</wp:tag_slug><wp:tag_name><![CDATA[Git 代码管理]]></wp:tag_name></wp:tag>
	<wp:term><wp:term_id>13</wp:term_id><wp:term_taxonomy>nav_menu</wp:term_taxonomy><wp:term_slug>%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9</wp:term_slug><wp:term_name><![CDATA[我的站点]]></wp:term_name></wp:term>

	<generator>http://wordpress.org/?v=3.9</generator>

	<item>
				<title>Excel</title>
		<link>http://localhost/wp/?attachment_id=160</link>
		<pubDate>Fri, 26 Jul 2013 08:25:31 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/wordpress/wp-content/uploads/2013/07/Excel.png</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>160</wp:post_id>
		<wp:post_date>2013-07-26 16:25:31</wp:post_date>
		<wp:post_date_gmt>2013-07-26 08:25:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>excel</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>157</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://localhost/wp/wp-content/uploads/2013/07/Excel.png</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:5:{s:5:"width";i:1476;s:6:"height";i:342;s:4:"file";s:17:"2013/07/Excel.png";s:5:"sizes";a:3:{s:9:"thumbnail";a:4:{s:4:"file";s:17:"Excel-150x150.png";s:5:"width";i:150;s:6:"height";i:150;s:9:"mime-type";s:9:"image/png";}s:6:"medium";a:4:{s:4:"file";s:16:"Excel-300x69.png";s:5:"width";i:300;s:6:"height";i:69;s:9:"mime-type";s:9:"image/png";}s:5:"large";a:4:{s:4:"file";s:18:"Excel-1024x237.png";s:5:"width";i:1024;s:6:"height";i:237;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_attached_file</wp:meta_key>
			<wp:meta_value><![CDATA[2013/07/Excel.png]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>excel</title>
		<link>http://localhost/wp/?attachment_id=205</link>
		<pubDate>Mon, 05 Aug 2013 05:11:35 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2Fexcel.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ByVyG4Ow34uOUerDhjx5iYfL0z4%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>205</wp:post_id>
		<wp:post_date>2013-08-05 13:11:35</wp:post_date>
		<wp:post_date_gmt>2013-08-05 05:11:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>excel-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>157</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2Fexcel.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ByVyG4Ow34uOUerDhjx5iYfL0z4%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>1</title>
		<link>http://localhost/wp/?attachment_id=240</link>
		<pubDate>Thu, 26 Sep 2013 04:06:52 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:hrLsyM7MyIagIAq2uhb6VB73IAw%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>240</wp:post_id>
		<wp:post_date>2013-09-26 12:06:52</wp:post_date>
		<wp:post_date_gmt>2013-09-26 04:06:52</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>157</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:hrLsyM7MyIagIAq2uhb6VB73IAw%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>eclipsemvn1</title>
		<link>http://localhost/wp/?attachment_id=259</link>
		<pubDate>Sat, 12 Oct 2013 05:28:27 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2Feclipsemvn1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:DKOGtV4sZVwteBcE4U%2FICOCcKvw%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>259</wp:post_id>
		<wp:post_date>2013-10-12 13:28:27</wp:post_date>
		<wp:post_date_gmt>2013-10-12 05:28:27</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>eclipsemvn1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>256</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2Feclipsemvn1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:DKOGtV4sZVwteBcE4U%2FICOCcKvw%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>eclipsemvn2</title>
		<link>http://localhost/wp/?attachment_id=260</link>
		<pubDate>Sat, 12 Oct 2013 05:30:02 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2Feclipsemvn2.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ZkPbzzBJJGejqVg9EQlcx8spYc0%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>260</wp:post_id>
		<wp:post_date>2013-10-12 13:30:02</wp:post_date>
		<wp:post_date_gmt>2013-10-12 05:30:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>eclipsemvn2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>256</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2Feclipsemvn2.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ZkPbzzBJJGejqVg9EQlcx8spYc0%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>eclipsemvn3</title>
		<link>http://localhost/wp/?attachment_id=261</link>
		<pubDate>Sat, 12 Oct 2013 05:32:53 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2Feclipsemvn3.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:%2FI1aicpCDVMfWAzN95t6gAy%2FnOU%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>261</wp:post_id>
		<wp:post_date>2013-10-12 13:32:53</wp:post_date>
		<wp:post_date_gmt>2013-10-12 05:32:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>eclipsemvn3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>256</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2Feclipsemvn3.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:%2FI1aicpCDVMfWAzN95t6gAy%2FnOU%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-1</title>
		<link>http://localhost/wp/?attachment_id=287</link>
		<pubDate>Wed, 25 Dec 2013 08:08:32 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:MqwALEMY6YxFUugAdjj6oOUn%2B5E%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>287</wp:post_id>
		<wp:post_date>2013-12-25 16:08:32</wp:post_date>
		<wp:post_date_gmt>2013-12-25 08:08:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:MqwALEMY6YxFUugAdjj6oOUn%2B5E%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-2</title>
		<link>http://localhost/wp/?attachment_id=288</link>
		<pubDate>Wed, 25 Dec 2013 08:14:36 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-2.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:b9v8iPWmPEPtWiiP9EoRuk%2FMJnw%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>288</wp:post_id>
		<wp:post_date>2013-12-25 16:14:36</wp:post_date>
		<wp:post_date_gmt>2013-12-25 08:14:36</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-2.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:b9v8iPWmPEPtWiiP9EoRuk%2FMJnw%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-3</title>
		<link>http://localhost/wp/?attachment_id=289</link>
		<pubDate>Wed, 25 Dec 2013 08:21:44 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-3.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:zENiuKL%2FDDYDlZ%2B8gkopT0L%2FyXw%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>289</wp:post_id>
		<wp:post_date>2013-12-25 16:21:44</wp:post_date>
		<wp:post_date_gmt>2013-12-25 08:21:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-3.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:zENiuKL%2FDDYDlZ%2B8gkopT0L%2FyXw%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-4</title>
		<link>http://localhost/wp/?attachment_id=292</link>
		<pubDate>Wed, 25 Dec 2013 08:31:16 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-4.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:MyeOpnShnHgKNLIMDhRYYcwD07g%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>292</wp:post_id>
		<wp:post_date>2013-12-25 16:31:16</wp:post_date>
		<wp:post_date_gmt>2013-12-25 08:31:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-4.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:MyeOpnShnHgKNLIMDhRYYcwD07g%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-5</title>
		<link>http://localhost/wp/?attachment_id=293</link>
		<pubDate>Wed, 25 Dec 2013 08:31:51 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-5.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:B2tkmdygGHk%2B1fkF1AnjbE%2BX7eo%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>293</wp:post_id>
		<wp:post_date>2013-12-25 16:31:51</wp:post_date>
		<wp:post_date_gmt>2013-12-25 08:31:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-5</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-5.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:B2tkmdygGHk%2B1fkF1AnjbE%2BX7eo%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-6</title>
		<link>http://localhost/wp/?attachment_id=294</link>
		<pubDate>Wed, 25 Dec 2013 08:38:09 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-6.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:1Jpz%2FIl2fItIe3IQ%2FhHZt7QJvKA%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>294</wp:post_id>
		<wp:post_date>2013-12-25 16:38:09</wp:post_date>
		<wp:post_date_gmt>2013-12-25 08:38:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-6</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-6.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:1Jpz%2FIl2fItIe3IQ%2FhHZt7QJvKA%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-7</title>
		<link>http://localhost/wp/?attachment_id=295</link>
		<pubDate>Wed, 25 Dec 2013 09:48:13 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-7.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:yqaajk9Vf%2BOikG7BqVBHNzhlHNg%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>295</wp:post_id>
		<wp:post_date>2013-12-25 17:48:13</wp:post_date>
		<wp:post_date_gmt>2013-12-25 09:48:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-7</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-7.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:yqaajk9Vf%2BOikG7BqVBHNzhlHNg%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-8</title>
		<link>http://localhost/wp/?attachment_id=296</link>
		<pubDate>Wed, 25 Dec 2013 09:49:53 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-8.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ZV0bN3BzijnCsDerYrMfEHI%2FHMc%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>296</wp:post_id>
		<wp:post_date>2013-12-25 17:49:53</wp:post_date>
		<wp:post_date_gmt>2013-12-25 09:49:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-8</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-8.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ZV0bN3BzijnCsDerYrMfEHI%2FHMc%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-9</title>
		<link>http://localhost/wp/?attachment_id=297</link>
		<pubDate>Wed, 25 Dec 2013 09:51:41 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-9.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:5CAWXcwiVZ6xmKHWb9hZlhn6Gas%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>297</wp:post_id>
		<wp:post_date>2013-12-25 17:51:41</wp:post_date>
		<wp:post_date_gmt>2013-12-25 09:51:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-9</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-9.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:5CAWXcwiVZ6xmKHWb9hZlhn6Gas%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>2-10</title>
		<link>http://localhost/wp/?attachment_id=298</link>
		<pubDate>Wed, 25 Dec 2013 09:54:55 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F2-10.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:m4%2FfSQT5XVYfqnzs9Ugs6oEsgJ4%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>298</wp:post_id>
		<wp:post_date>2013-12-25 17:54:55</wp:post_date>
		<wp:post_date_gmt>2013-12-25 09:54:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>2-10</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>286</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F2-10.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:m4%2FfSQT5XVYfqnzs9Ugs6oEsgJ4%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>333-1</title>
		<link>http://localhost/wp/?attachment_id=345</link>
		<pubDate>Wed, 26 Feb 2014 04:04:22 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F333-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:uFQ234NMStjgr5CGv8FEfsG44Jg%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>345</wp:post_id>
		<wp:post_date>2014-02-26 12:04:22</wp:post_date>
		<wp:post_date_gmt>2014-02-26 04:04:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>333-1</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>343</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F333-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:uFQ234NMStjgr5CGv8FEfsG44Jg%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>333-1</title>
		<link>http://localhost/wp/?attachment_id=395</link>
		<pubDate>Wed, 26 Feb 2014 06:34:20 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F333-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:uFQ234NMStjgr5CGv8FEfsG44Jg%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>395</wp:post_id>
		<wp:post_date>2014-02-26 14:34:20</wp:post_date>
		<wp:post_date_gmt>2014-02-26 06:34:20</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>333-1-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>343</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F333-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:uFQ234NMStjgr5CGv8FEfsG44Jg%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>333-2</title>
		<link>http://localhost/wp/?attachment_id=397</link>
		<pubDate>Wed, 26 Feb 2014 06:36:15 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F333-2.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:BDcYxaX8Twipa355M2kXQjYVk08%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>397</wp:post_id>
		<wp:post_date>2014-02-26 14:36:15</wp:post_date>
		<wp:post_date_gmt>2014-02-26 06:36:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>333-2</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>343</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F333-2.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:BDcYxaX8Twipa355M2kXQjYVk08%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>333-3</title>
		<link>http://localhost/wp/?attachment_id=398</link>
		<pubDate>Wed, 26 Feb 2014 06:45:46 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F333-3.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:HN22tYgVJRAkMDbVa%2BsEX0eX%2Fmk%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>398</wp:post_id>
		<wp:post_date>2014-02-26 14:45:46</wp:post_date>
		<wp:post_date_gmt>2014-02-26 06:45:46</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>333-3</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>343</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F333-3.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:HN22tYgVJRAkMDbVa%2BsEX0eX%2Fmk%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Ant中批量调用TestNG的XML文件，并调用TestNgXlst生成漂亮的html测试报告</title>
		<link>http://localhost/wp/?p=43</link>
		<pubDate>Mon, 13 Aug 2012 23:30:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=43</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">1、在Ant中设置如下：</span></p>
<p><pre name="code" class="html">    &lt;target name=&quot;run_tests&quot;&gt;    
        &lt;testng classpathref=&quot;classpath.main&quot;                
                failureproperty=&quot;test.failed&quot;&gt;            
            &lt;!--此目录下的所有TestNG的XML文件，使用*号表示此目录下所有 --&gt;
            &lt;xmlfileset dir=&quot;${suite.dir}&quot;&gt;
               	&lt;include name=&quot;*.xml&quot;/&gt;
            &lt;/xmlfileset&gt;                        
        &lt;/testng&gt;
    	
    	&lt;!--TestNG执行完毕后，根据输出的testng-results.xml文件，按照testng-results.xsl的设定生成html格式的测试报告 --&gt;
    	
		&lt;echo taskname=&quot;OutputReport&quot; message=&quot;start output report&quot; /&gt;
		&lt;xslt in=&quot;${test-output.dir}/testng-results.xml&quot; style=&quot;${testNgXslt.dir}/config/testng-results.xsl&quot; out=&quot;${testNgXslt.dir}/out/${CURTIME}/index.html&quot;&gt;
			&lt;param name=&quot;testNgXslt.outputDir&quot; expression=&quot;${testNgXslt.dir}/out/${CURTIME}&quot;/&gt;
			&lt;param name=&quot;testNgXslt.showRuntimeTotals&quot; expression=&quot;true&quot;/&gt;
			&lt;classpath refid=&quot;classpath.main&quot;/&gt;
		&lt;/xslt&gt;  
    	
    &lt;/target&gt;</pre><br>
<br>
</p>
<p>在上述配置中，${testNgXslt.dir}/out/${CURTIME}表示测试报告输出的目录，${CURTIME}是根据测试执行时间标识，按照年月日时分秒&#26684;式。如下：</p>
<p><pre name="code" class="html">	&lt;tstamp&gt;   
		&lt;format property=&quot;CURTIME&quot; pattern=&quot;yyyyMMddHHmmss&quot; locale=&quot;us&quot;/&gt;   
	&lt;/tstamp&gt;   </pre><br>
<br>
<br>
</p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>43</wp:post_id>
		<wp:post_date>2012-08-14 07:30:00</wp:post_date>
		<wp:post_date_gmt>2012-08-13 23:30:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ant%e4%b8%ad%e6%89%b9%e9%87%8f%e8%b0%83%e7%94%a8testng%e7%9a%84xml%e6%96%87%e4%bb%b6%ef%bc%8c%e5%b9%b6%e8%b0%83%e7%94%a8testngxlst%e7%94%9f%e6%88%90%e6%bc%82%e4%ba%ae%e7%9a%84html%e6%b5%8b%e8%af%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>根据测试用例的java源码自动生成TestNG的XML文件</title>
		<link>http://localhost/wp/?p=44</link>
		<pubDate>Mon, 13 Aug 2012 23:17:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=44</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">1、读取当前项目目录下的所有.java文件，过滤出含有@Test标识的java源文件</span></p>
<p><span style="font-size:24px">2、读取java文件内容，解析出包名、类名、方法名。使用Vector存储，第一个元素为包名，第二个元素为类名，从第三个元素开始存储有@Test标识的方法名<br />
</span></p>
<p><br />
</p>
<p><span style="font-size:24px">3、</span><span style="font-size:24px">当前项目目录下的所有含有@Test标识的.java文件，遍历读取后单个java源文件信息存储到</span><span style="font-size:24px">Vector，使用ArrayList存储所有Vector对象</span>。</p>
<p><br />
</p>
<p><span style="font-size:24px">4、把</span><span style="font-size:24px">ArrayList中存储的信息转换成多个XML文件，并保存在指定目录下。</span></p>
<p><br />
</p>
<p><span style="font-size:24px">5、生成XML文件的部分源码如下：</span></p>
<p></p>
<pre name="code" class="java">//读取Vector中的信息，生成对应的XML文件，存储到项目目录的【/suites】目录下
</pre><pre>
	private void  CreateXml(Vector&lt;String&gt; content,String filepath) throws IOException {
		
		//创建Document实例
		Document document = DocumentHelper.createDocument();
		
		//记录test名称
		String xmltestname=new String();

		//记录class名称
		String xmlclassname=new String();
		
		//记录要保存的xml文件位置
		String xmlfilepath=new String();

		
		//获取test名称
		xmltestname=content.get(1).toString();
		
		//获取class名称
		xmlclassname=content.get(0).toString()+&quot;.&quot;+content.get(1).toString();
		
		//获取文件保存位置
		xmlfilepath=filepath+xmltestname+&quot;.xml&quot;;
		//System.out.println(filepath);
		
		//创建根节点suite，并设置name属性为xmlsuitename
		Element root = document.addElement( &quot;suite&quot; )
				.addAttribute(&quot;name&quot;, xmltestname);
		
		//创建节点test，并设置name、verbose属性
		Element test = root.addElement( &quot;test&quot; )
				
				//记录日志信息的详细程度，有0-10个级别，0是没有，10是最详细，对输出的测试报告无影响
				.addAttribute(&quot;verbose&quot;, &quot;2&quot;)
				
				//控制@Test标识的测试用例执行顺序，默认是false，在节点下面的所有方法的执行顺序是无序的
				//把它设为true以后就能保证在节点下的方法是按照顺序执行的。
				.addAttribute(&quot;preserve-order&quot;, &quot;true&quot;)
				.addAttribute(&quot;name&quot;, xmltestname);
		
		//创建节点classes，无属性
		Element classes = test.addElement( &quot;classes&quot; );
				
		//创建节点classs，并设置name属性
		Element classs= classes.addElement( &quot;class&quot; )
				.addAttribute(&quot;name&quot;, xmlclassname);
		//创建节点methods，无属性
		Element methods = classs.addElement( &quot;methods&quot; );
				
		//创建节点classs，并设置name属性
		for (int i = 2; i &lt; content.size(); i++){
			@SuppressWarnings(&quot;unused&quot;)
			Element include= methods.addElement( &quot;include&quot; )
					.addAttribute(&quot;name&quot;, content.get(i).toString());
		}	
		
			//设置DocType
			//第一个参数：名称	
			//第二个参数：PUBLIC URI
			//第三个参数：SYSTEM URI
			document.addDocType(&quot;suite&quot;, null,&quot;http://testng.org/testng-1.0.dtd&quot;);
	       
			//输出格式设置
	        OutputFormat format = OutputFormat.createPrettyPrint(); 
	        format = OutputFormat.createCompactFormat();
	        
	        //设置输出编码
	        format.setEncoding(&quot;UTF-8&quot;);
	        
	        
	        //创建XML文件
	        XMLWriter writer= new XMLWriter(new OutputStreamWriter(new FileOutputStream(xmlfilepath),format.getEncoding()),format); 
	        writer.write( document ); 
	        writer.close();
	        document=null;
	        
	        //记录xml文件路径
	        setxmlpath(xmlfilepath);
	}

	//读取ArrayList中的信息，批量生成对应的XML文件，存储到项目目录的【/suites】目录下
	public void CreateAllXml(ArrayList&lt;Vector&lt;String&gt;&gt; contentall,String filepath) throws IOException {
		
		//创建Vector
		Vector&lt;String&gt; content=new Vector&lt;String&gt;();
		for (int i = 0; i &lt; contentall.size(); i++) {
			content=contentall.get(i);
			//根据content的信息，生成对应XML文件
			CreateXml(content,filepath);
		}
		
		
		
	}</pre>
<p></p>
<p>6、生成XML文件调用执行部分源码</p>
<p></p>
<pre name="code" class="java">public static void main(String[] args) {
		
		ReadJavaFile readjavafiles=new ReadJavaFile();
		WriteTestngXml writexmlfiles=new WriteTestngXml();
		
		String curpath =System.getProperty(&quot;user.dir&quot;);
		
		try {
			writexmlfiles.CreateAllXml(readjavafiles.ReadContentAll(curpath),curpath+&quot;\suites\&quot;) ;
		} catch (IOException e) {
			System.out.println(&quot;生成XML文件失败&quot;);
		}
		
		System.out.println(&quot;生成的XML文件如下：&quot;);
		for (int i = 0; i &lt; writexmlfiles.getxmlpath().size(); i++) {
			System.out.println(writexmlfiles.getxmlpath().get(i));
			
		}</pre><br />
<br />
<p></p>
<p><br />
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>44</wp:post_id>
		<wp:post_date>2012-08-14 07:17:00</wp:post_date>
		<wp:post_date_gmt>2012-08-13 23:17:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%a0%b9%e6%8d%ae%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b%e7%9a%84java%e6%ba%90%e7%a0%81%e8%87%aa%e5%8a%a8%e7%94%9f%e6%88%90testng%e7%9a%84xml%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>TestNG设置输出测试报告的内容级别和设置测试用例按顺序执行</title>
		<link>http://localhost/wp/?p=45</link>
		<pubDate>Mon, 13 Aug 2012 22:53:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=45</guid>
		<description></description>
		<content:encoded><![CDATA[<p></p>
<pre name="code" class="html">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE suite SYSTEM &quot;http://testng.org/testng-1.0.dtd&quot;&gt;
&lt;suite name=&quot;TestDebug&quot;&gt;
&lt;test verbose=&quot;2&quot; preserve-order=&quot;true&quot; name=&quot;TestDebug&quot;&gt;
&lt;classes&gt;&lt;class name=&quot;ruijie.riil.test.debug.TestDebug&quot;&gt;
&lt;methods&gt;
&lt;include name=&quot;测试用例执行顺序001&quot;/&gt;
&lt;include name=&quot;测试用例执行顺序002&quot;/&gt;
&lt;include name=&quot;c测试用例执行顺序003&quot;/&gt;
&lt;include name=&quot;a测试用例执行顺序004&quot;/&gt;
&lt;/methods&gt;
&lt;/class&gt;
&lt;/classes&gt;
&lt;/test&gt;
&lt;/suite&gt;</pre><br>
在TestNG的XML文件中，其中 verbose=&quot;2&quot; 标识的就是记录的日志级别，共有0-10的级别，其中0表示无，10表示最详细
<p></p>
<p><br>
</p>
<p></p>
preserve-order=&quot;true&quot;，的preserve-order控制@Test标识的测试用例执行顺序，默认是false，在节点下面的所有方法的执行顺序是无序的。把它设为true以后就能保证在节点下的方法是按照顺序执行的。
<p></p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>45</wp:post_id>
		<wp:post_date>2012-08-14 06:53:00</wp:post_date>
		<wp:post_date_gmt>2012-08-13 22:53:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>testng%e8%ae%be%e7%bd%ae%e8%be%93%e5%87%ba%e6%b5%8b%e8%af%95%e6%8a%a5%e5%91%8a%e7%9a%84%e5%86%85%e5%ae%b9%e7%ba%a7%e5%88%ab%e5%92%8c%e8%ae%be%e7%bd%ae%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b%e6%8c%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>我的微博</title>
		<link>http://localhost/wp/?page_id=51</link>
		<pubDate>Wed, 06 Mar 2013 15:09:09 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?page_id=51</guid>
		<description></description>
		<content:encoded><![CDATA[<iframe src="http://widget.weibo.com/weiboshow/index.php?language=&amp;width=0&amp;height=550&amp;fansRow=2&amp;ptype=1&amp;speed=0&amp;skin=1&amp;isTitle=1&amp;noborder=1&amp;isWeibo=1&amp;isFans=1&amp;uid=76939&amp;verifier=a1405918&amp;dpc=1" height="550" width="100%" frameborder="0" scrolling="no"></iframe>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>51</wp:post_id>
		<wp:post_date>2013-03-06 23:09:09</wp:post_date>
		<wp:post_date_gmt>2013-03-06 15:09:09</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%91%e7%9a%84%e5%be%ae%e5%8d%9a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>当前状态</title>
		<link>http://localhost/wp/?page_id=56</link>
		<pubDate>Wed, 06 Mar 2013 16:26:29 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?page_id=56</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2013-03-07 00:26:29</wp:post_date>
		<wp:post_date_gmt>2013-03-06 16:26:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%9d%82%e7%b1%bb%e4%b9%b1%e5%86%99</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>戒烟进行中。。</title>
		<link>http://localhost/wp/?page_id=57</link>
		<pubDate>Wed, 06 Mar 2013 16:27:15 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?page_id=57</guid>
		<description></description>
		<content:encoded><![CDATA[忍了快100小时了，继续坚持住啊 不能前功尽弃


[caption width="1024" align="alignleft"]<img src="http://pic17.nipic.com/20111115/8744144_081619202165_2.jpg" width="1024" height="1024" class /> 哈哈001[/caption]

[caption width="1024" align="alignright"]<img src="http://pic18.nipic.com/20111208/8825922_230009829000_2.jpg" width="1024" height="724" class /> 哈002[/caption]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2013-03-07 00:27:15</wp:post_date>
		<wp:post_date_gmt>2013-03-06 16:27:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e6%88%92%e7%83%9f%e8%bf%9b%e8%a1%8c%e4%b8%ad%e3%80%82%e3%80%82</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>56</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>收藏的书籍</title>
		<link>http://localhost/wp/?page_id=85</link>
		<pubDate>Thu, 20 Jun 2013 08:10:38 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?page_id=85</guid>
		<description></description>
		<content:encoded><![CDATA[<ol>
	<li>
<h2><span style="color: #0000ff;"><span style="color: #0000ff;"><a title="十年外汇风暴史" href="http://baiweigang.cn/book/001" target="_blank">十年外汇风暴史--李纪钢</a>    <span style="color: #999999;">（适合手机阅读）</span></span></span></h2>
</li>
</ol>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2013-06-20 16:10:38</wp:post_date>
		<wp:post_date_gmt>2013-06-20 08:10:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%94%b6%e8%97%8f%e7%9a%84%e4%b9%a6%e7%b1%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>常用手册入口</title>
		<link>http://localhost/wp/?page_id=88</link>
		<pubDate>Sat, 22 Jun 2013 07:00:38 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?page_id=88</guid>
		<description></description>
		<content:encoded><![CDATA[<h1>1、<a title="PHP中文手册" href="http://www.php100.com/manual/php/" target="_blank">PHP中文手册 </a></h1>
&nbsp;
<h1>2、<a title="Apache2中文手册" href="http://www.php100.com/manual/apache2/" target="_blank">Apache2中文手册</a></h1>
&nbsp;
<h1>3、<a title="MySql5中文手册" href="http://www.php100.com/manual/MySQL/" target="_blank">MySql5中文手册</a></h1>
&nbsp;
<h1>4、<a title="JavaScript中文手册" href="http://www.php100.com/manual/javascript.html" target="_blank">JavaScript中文手册</a></h1>
&nbsp;
<h1>5、<a title="正则表达式手册" href="http://www.php100.com/manual/unze.html" target="_blank">正则表达式手册</a></h1>
&nbsp;
<h1>6、<a title="JQuery中文手册" href="http://www.php100.com/manual/jquery/" target="_blank">JQuery中文手册</a></h1>
&nbsp;
<h1>7、<a title="PHP100站点" href="http://www.php100.com" target="_blank">PHP100站点</a></h1>
&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>88</wp:post_id>
		<wp:post_date>2013-06-22 15:00:38</wp:post_date>
		<wp:post_date_gmt>2013-06-22 07:00:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%b8%b8%e7%94%a8%e6%89%8b%e5%86%8c%e5%85%a5%e5%8f%a3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>测试内容</title>
		<link>http://localhost/wp/?page_id=90</link>
		<pubDate>Sat, 22 Jun 2013 16:13:40 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?page_id=90</guid>
		<description></description>
		<content:encoded><![CDATA[准备后续微信推送到此页面下]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>90</wp:post_id>
		<wp:post_date>2013-06-23 00:13:40</wp:post_date>
		<wp:post_date_gmt>2013-06-22 16:13:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%b5%8b%e8%af%95%e5%86%85%e5%ae%b9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>page</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_page_template</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>首页</title>
		<link>http://localhost/wp/?p=107</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%a6%96%e9%a1%b5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>1</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://baiweigang.cn/]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[107]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=108</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>108</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>4</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[88]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=112</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>112</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>5</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[post_type]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[85]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[page]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=114</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=114</guid>
		<description></description>
		<content:encoded><![CDATA[吐槽]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>114</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>114</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>6</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[10]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=117</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=117</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>117</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>117</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>7</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[6]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=118</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=118</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>118</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>118</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>8</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[4]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=119</link>
		<pubDate>Thu, 27 Jun 2013 04:11:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=119</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>119</wp:post_id>
		<wp:post_date>2013-06-27 12:11:11</wp:post_date>
		<wp:post_date_gmt>2013-06-27 04:11:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>119</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>10</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[5]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>记录成长的声音</title>
		<link>http://localhost/wp/?p=233</link>
		<pubDate>Thu, 05 Sep 2013 03:24:08 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2013-09-05 11:24:08</wp:post_date>
		<wp:post_date_gmt>2013-09-05 03:24:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%ae%b0%e5%bd%95%e6%88%90%e9%95%bf%e7%9a%84%e5%a3%b0%e9%9f%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>11</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[233]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[custom]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[http://www.newtomato.me]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=312</link>
		<pubDate>Mon, 13 Jan 2014 07:26:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=312</guid>
		<description></description>
		<content:encoded><![CDATA[ ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>312</wp:post_id>
		<wp:post_date>2014-01-13 15:26:11</wp:post_date>
		<wp:post_date_gmt>2014-01-13 07:26:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>312</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>2</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[15]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[0]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title></title>
		<link>http://localhost/wp/?p=313</link>
		<pubDate>Mon, 13 Jan 2014 07:26:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=313</guid>
		<description></description>
		<content:encoded><![CDATA[QTAF接口自动化框架 使用手册]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>313</wp:post_id>
		<wp:post_date>2014-01-13 15:26:11</wp:post_date>
		<wp:post_date_gmt>2014-01-13 07:26:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>313</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>15</wp:post_parent>
		<wp:menu_order>3</wp:menu_order>
		<wp:post_type>nav_menu_item</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="nav_menu" nicename="%e6%88%91%e7%9a%84%e7%ab%99%e7%82%b9"><![CDATA[我的站点]]></category>
		<wp:postmeta>
			<wp:meta_key>_menu_item_type</wp:meta_key>
			<wp:meta_value><![CDATA[taxonomy]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_menu_item_parent</wp:meta_key>
			<wp:meta_value><![CDATA[312]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object_id</wp:meta_key>
			<wp:meta_value><![CDATA[20]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_object</wp:meta_key>
			<wp:meta_value><![CDATA[category]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_target</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_classes</wp:meta_key>
			<wp:meta_value><![CDATA[a:1:{i:0;s:0:"";}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_xfn</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_menu_item_url</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>333-4</title>
		<link>http://localhost/wp/?attachment_id=399</link>
		<pubDate>Wed, 26 Feb 2014 06:53:40 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://bcs.duapp.com/bwgang/%2F333-4.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:%2BzoHvREkn4D9CeasGy0%2BYsTTGNA%3D</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>399</wp:post_id>
		<wp:post_date>2014-02-26 14:53:40</wp:post_date>
		<wp:post_date_gmt>2014-02-26 06:53:40</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>333-4</wp:post_name>
		<wp:status>inherit</wp:status>
		<wp:post_parent>343</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>attachment</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:attachment_url>http://bcs.duapp.com/bwgang/%2F333-4.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:%2BzoHvREkn4D9CeasGy0%2BYsTTGNA%3D</wp:attachment_url>
		<wp:postmeta>
			<wp:meta_key>_wp_attachment_metadata</wp:meta_key>
			<wp:meta_value><![CDATA[a:0:{}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：LDAP概述</title>
		<link>http://localhost/wp/?p=23</link>
		<pubDate>Sat, 22 Sep 2012 22:51:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=23</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="summary">
<p>转自：<a href="http://www.hudong.com/wiki/LDAP">http://www.hudong.com/wiki/LDAP</a></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-size:18px">LDAP的英文全称是Lightweight Directory Access Protocol，一般都简称为LDAP。</span></p>
<p><span style="font-size:18px"></span>&nbsp;</p>
<p><span style="font-family:Microsoft YaHei; font-size:18px">它是基于X.500标准的，但是简单多了并且可以根据需要定制。与X.500不同，LDAP支持TCP/IP，这对访问Internet是必须的。LDAP的核心规范在RFC中都有定义，所有与LDAP相关的RFC都可以在LDAPman RFC网页中找到。现在LDAP技术不仅发展得很快而且也是激动人心的。在企业范围内实现LDAP可以让运行在几乎所有计算机平台上的所有的应用程序从 LDAP目录中获取信息。LDAP目录中可以存储各种类型的数据：电子邮件地址、邮件路由信息、人力资源数据、公用密匙、联系人列表，等等。通过把
 LDAP目录作为系统集成中的一个重要环节，可以简化员工在企业内部查询信息的步骤，甚至连主要的数据源都可以放在任何地方。</span></p>
</div>
<div id="content">
<p>&nbsp;</p>
<div class="content_h2">
<h2 class="mar-t10">LDAP - 主要特点</h2>
</div>
<p><strong>跨平台</strong></p>
<p>　　可以在任何计算机平台上，用很容易获得的而且数目不断增加的LDAP的客户端程序访问LDAP目录。而且也很容易定制应用程序为它加上LDAP的支持。</p>
<p>　　LDAP协议是跨平台的和标准的协议，因此应用程序就不用为LDAP目录放在什么样的服务器上操心了。实际上，LDAP得到了业界的广泛认可，因为它是Internet的标准。产商都很愿意在产品中加入对LDAP的支持，因为他们根本不用考虑另一端（客户端或服务端）是怎么样的。LDAP服务器可以是任何一个开发源代码或商用的LDAP目录服务器（或者还可能是具有LDAP界面的关系型数据库），因为可以用同样的协议、客户端连接软件包和查询命令与LDAP服务器进行交互。与LDAP不同的是，如果软件产商想在软件产品中集成对DBMS的支持，那么通常都要对每一个数据库服务器单独定制。</p>
<p>　<strong>　费用低、维护简单</strong></p>
<p>　　不象很多商用的关系型数据库，用户不必为LDAP的每一个客户端连接或许可协议付费。大多数的LDAP服务器安装起来很简单，也容易维护和优化。</p>
<p><strong>　　复制技术</strong></p>
<p>　　LDAP服务器可以用“推”或“拉”的方法复制部分或全部数据，例如：可以把数据“推”到远程的办公室，以增加数据的安全性。复制技术是内置在LDAP服务器中的而且很容易配置。如果要在DBMS中使用相同的复制功能，数据库产商就会要求支付额外的费用，而且也很难管理。</p>
<p><strong>　　允许使用ACL</strong></p>
<p>　　LDAP允许根据需要使用ACL（访问控制列表）控制对数据读和写的权限。例如，设备管理员可以有权改变员工的工作地点和办公室号码，但是不允许改变记录中其它的域。ACL可以根据谁访问数据、访问什么数据、数据存在什么地方以及其它对数据进行访问控制。因为这些都是由LDAP目录服务器完成的，所以不用担心在客户端的应用程序上是否要进行安全检查。<br>
</p>
<p>&nbsp;</p>
<div class="content_h2">
<h2 class="mar-t10">LDAP - 存储数据</h2>
</div>
<p>LDAP存储什么数据</p>
<p>　　LDAP对于数据需要从不同的地点读取，但是不需要经常更新，这些信息存储在LDAP目录中是十分有效的，例如：</p>
<p>　　公司员工的电话号码簿和组织结构图</p>
<p>　　客户的联系信息</p>
<p>　　计算机管理需要的信息，包括NIS映射/、email/名称等</p>
<p>　　软件包的配置信息</p>
<p>　　公用证书和安全密匙</p>
<p>　　什么时候用LDAP存储数据</p>
<p>　　大多数的LDAP服务器都为读密集型的操作进行专门的优化。因此，当从LDAP服务器中读取数据的时候会比从专门为OLTP优化的关系型数据库中读取数据快一个数量级。也是因为专门为读的性能进行优化，大多数的LDAP目录服务器并不适合存储需要经常改变的数据。例如，用LDAP服务器来存储电话号码是一个很好的选择，但是它不能作为电子商务站点的数据库服务器。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<div class="content_h2">
<h2 class="mar-t10">LDAP - 基本模型</h2>
</div>
<p>信息模型：描述LDAP的信息表示方式</p>
<p>　　在LDAP中信息以树状方式组织，在树状信息中的基本数据单元是条目，而每个条目由属性构成，属性中存储有属性&#20540;；LDAP中的信息模式，类&#20284;于面向对象的概念，在LDAP中每个条目必须属于某个或多个对象类（Object Class），每个Object Class由多个属性类型组成，每个属性类型有所对应的语法和匹配规则；对象类和属性类型的定义均可以使用继承的概念。每个条目创建时，必须定义所属的对象类，必须提供对象类中的必选属性类型的属性&#20540;，在LDAP中一个属性类型可以对应多个&#20540;。</p>
<p>　　在LDAP中把对象类、属性类型、语法和匹配规则统称为Schema，在LDAP中有许多系统对象类、属性类型、语法和匹配规则，这些系统Schema在LDAP标准中进行了规定，同时不同的应用领域也定义了自己的Schema，同时用户在应用时，也可以根据需要自定义Schema。这有些类&#20284;于XML，除了XML标准中的XML定义外，每个行业都有自己标准的DTD或DOM定义，用户也可以自扩展；也如同XML，在LDAP中也鼓励用户尽量使用标准的Schema，以增强信息的互联互通。</p>
<p>　　在Schema中最难理解的是匹配规则，这是LDAP中为了加快查询的速度，针对不同的数据类型，可以提供不同的匹配方法，如针对字符串类型的相等、模糊、大于小于均提供自己的匹配规则。</p>
<p>　　命名模型：描述LDAP中的数据如何组织 </p>
<p>　　LDAP中的命名模型，也即LDAP中的条目定位方式。在LDAP中每个条目均有自己的DN和RDN。DN是该条目在整个树中的唯一名称标识，RDN是条目在父节点下的唯一名称标识，如同文件系统中，带路径的文件名就是DN，文件名就是RDN。</p>
<p>　　功能模型：描述LDAP中的数据操作访问 </p>
<p>　　在LDAP中共有四类10种操作：查询类操作，如搜索、比较；更新类操作，如添加条目、删除条目、修改条目、修改条目名；认证类操作，如绑定、解绑定；其它操作，如放弃和扩展操作。除了扩展操作，另外9种是LDAP的标准操作；扩展操作是LDAP中为了增加新的功能，提供的一种标准的扩展框架，当前已经成为LDAP标准的扩展操作，有修改密码和StartTLS扩展，在新的RFC标准和草案中正在增加一些新的扩展操作，不同的LDAP厂商也均定义了自己的扩展操作。</p>
<p>　　安全模型：描述LDAP中的安全机制 </p>
<p>　　LDAP中的安全模型主要通过身份认证、安全通道和访问控制来实现。 </p>
<p>　　1.身份认证</p>
<p>　　在LDAP中提供三种认证机制，即匿名、基本认证和SASL（Simple Authentication and Secure Layer）认证。匿名认证即不对用户进行认证，该方法仅对完全公开的方式适用；基本认证均是通过用户名和密码进行身份识别，又分为简单密码和摘要密码认证；SASL认证即LDAP提供的在SSL和TLS安全通道基础上进行的身份认证，包括数字证书的认证。</p>
<p>　　2.通讯安全</p>
<p>　　在LDAP中提供了基于SSL/TLS的通讯安全保障。SSL/TLS是基于PKI信息安全技术，是目前Internet上广泛采用的安全服务。LDAP通过StartTLS方式启动TLS服务，可以提供通讯中的数据保密性、完整性保护；通过强制客户端证书认证的TLS服务，同时可以实现对客户端身份和服务器端身份的双向验证。</p>
<p>　　3.访问控制</p>
<p>　　虽然LDAP目前并无访问控制的标准，但从一些草案中或是事实上LDAP产品的访问控制情况，我们不难看出：LDAP访问控制异常的灵活和丰富，在LDAP中是基于访问控制策略语句来实现访问控制的，这不同于现有的关系型数据库系统和应用系统，它是通过基于访问控制列表来实现的，无论是基于组模式或角色模式，都摆脱不了这种限制。</p>
<p>　　在使用关系型数据库系统开发应用时，往往是通过几个固定的数据库用户名访问数据库。对于应用系统本身的访问控制，通常是需要建立专门的用户表，在应用系统内开发针对不同用户的访问控制授权代码，这样一旦访问控制策略变更时，往往需要代码进行变更。总之一句话，关系型数据库的应用中用户数据管理和数据库访问标识是分离的，复杂的数据访问控制需要通过应用来实现。而对于LDAP，用户数据管理和访问标识是一体的，应用不需要关心访问控制的实现。这是由于在LDAP中的访问控制语句是基于策略语句来实现的，无论是访问控制的数据对象，还是访问控制的主体对象，均是与这些对象在树中的位置和对象本身的数据特征相关。</p>
<p>　　在LDAP中，可以把整个目录、目录的子树、制定条目、特定条目属性集或符合某过滤条件的条目作为控制对象进行授权；可以把特定用户、属于特定组或所有目录用户作为授权主体进行授权；最后，还可以定义对特定位置（例如IP地址或DNS名称）的访问权。</p>
<div class="content_h2">
<h2 class="mar-t10">&nbsp;</h2>
<h2 class="mar-t10">LDAP - 数据结构</h2>
</div>
<p>　　LDAP是实现了指定的数据结构的存贮，它包括以下可以用关系数据库实现的结构要求：树状组织、条目认证、类型定义、许可树形记录拷贝。</p>
<p>　　树状组织</p>
<p>　　无论是X500还是LDAP都是采用树状方式进行记录。每一个树目录都有一个树根的入口条目，子记录全部是这一根条目的子孙。这是目录与关系数据类型最大的区别（关系数据库的应用结构也可实现树状记录）。因此，把目录看作是更高级的树状数据库也未尝不可，只不过除此外，它不能实现关系存贮的重要功能。</p>
<p>　　条目和条目认证</p>
<p>　　LDAP是以条目作为认证的根据。ROOT的权限认证与目录本身无关，但除此外所有条目的认证权限由条目本身的密码进行认证。LDAP可以配置成各种各样不同的父子条目权限继承方式。</p>
<p>　　每一个条目相当于一个单一的平面文本记录，由条目自身或指定的条目认证进行访问控制。因此，LDAP定义的存贮结构等同于一批树状组织的平面数据库，并提供相应的访问控制。</p>
<p>　　条目中的记录以名-&#20540;对的形式存在，每一个名&#20540;对必须由数据样式schema预定义。因此，LDAP可以看作是以规定的&#20540;类型以名&#20540;对形式存贮在一系列以树状组织的平面数据库的记录的集合。</p>
<p>　　数据样式</p>
<p>　　数据样式schema是针对不同的应用，由用户指定（设计）类和属性类型预定义，条目中的类(objectclass)和属性必须在在LDAP服务器启动时载入内存的schema已有定义。因此，AD活动目录中的条目记录就必须符合Active Directory的schema中。如果已提供的schema中的定义不够用，用户可以自行定义新的schema。</p>
<p>　　对象类型</p>
<p>　　因为LDAP目录可以定制成存储任何文本或二进制数据，到底存什么要由用户自己决定。LDAP目录用对象类型（objectclass）的概念来定义运行哪一类的对象使用什么属性。在几乎所有的LDAP服务器中，都要根据自己的需要扩展基本的LDAP目录的功能，创建新的对象类型或者扩展现存的对象类型。</p>
<p>条目中的记录通过objectclass实现分类，objectClass是一个继承性的类定义，每一个类定义指定必须具备的属性。如某一条目指定必须符合某个类型，则它必须具备超类所指定的属性。</p>
<p>　　通过objectclass分类，分散的条目中的记录就实际上建立了一个索引结构，为高速的读查询打下了基础。Objectclass也是过滤器的主要查询对象。</p>
<p>　　过滤器和语法</p>
<p>　　LDAP是一个查询为主的记录结构，无论是何种查询方式，最终都由过滤器缺点查询的条件。过滤器相当于SQL中的WHERE子句。任何LDAP的类过滤和字符串都必须放在括号内，如（objectclass=*）,指列出所有类型的记录。</p>
<p>基本 LDAP 语法</p>
<p>　　• =（等于）</p>
<p>　　此 LDAP 参数表明某个属性等于某个&#20540;的条件得到满足。例如，如果希望查找“名“属性为“John”的所有对象，可以使用：</p>
<p>　　(givenName=John)</p>
<p>　　这会返回“名”属性为“John”的所有对象。圆括号是必需的，以便强调 LDAP 语句的开始和结束。</p>
<p>　　• &amp;（逻辑与）</p>
<p>　　如果具有多个条件并且希望全部条件都得到满足，则可使用此语法。例如，如果希望查找居住在 Dallas 并且“名”为“John”的所有人员，可以使用：</p>
<p>　　(&amp;(givenName=John)(l=Dallas))</p>
<p>　　请注意，每个参数都被属于其自己的圆括号括起来。整个 LDAP 语句必须包括在一对主圆括号中。操作符 &amp; 表明，只有每个参数都为真，才会将此筛选条件应用到要查询的对象。</p>
<p>　　• !（逻辑非）</p>
<p>　　此操作符用来排除具有特定属性的对象。假定需要查找“名”为“John”的对象以外的所有对象。则应使用如下语句：</p>
<p>　　(!givenName=John)</p>
<p>　　此语句将查找“名”不为“John”的所有对象。请注意：! 操作符紧邻参数的前面，并且位于参数的圆括号内。由于本语句只有一个参数，因此使用圆括号将其括起以示说明。</p>
<p>　　• *（通配符）</p>
<p>　　可使用通配符表示&#20540;可以等于任何&#20540;。使用它的情况可能是：希望查找具有职务头衔的所有对象。为此，可以使用：</p>
<p>　　(title=*)</p>
<p>　　这会返回“title”属性包含内容的所有对象。另一个例子是：知道某个对象的“名”属性的开头两个字母是“Jo”。那么，可以使用如下语法进行查找：</p>
<p>　　(givenName=Jo*)</p>
<p>　　这会返回“名”以“Jo”开头的所有对象。</p>
<div class="content_h2">
<h2 class="mar-t10">&nbsp;</h2>
<h2 class="mar-t10">LDAP - 典型应用</h2>
</div>
<p>由于LDAP所具有的查询效率高、树状的信息管理模式、分布式的部署框架以及灵活而细腻的访问控制，使LDAP广泛地应用于基础性、关键性信息的管理，如用户信息、网络资源信息等。LDAP的应用主要涉及几种类型。</p>
<p>　　信息安全类：数字证书管理、授权管理、单点登录；</p>
<p>　　科学计算类：DCE (Distributed Computing Envirionment，分布式计算环境)、UDDI （Universal Description，Discovery and Integration, 统一描述、发现和集成协议）；</p>
<p>　　网络资源管理类：MAIL系统、DNS系统、网络用户管理、电话号码簿；电子政务</p>
<p>　　资源管理类：内网组织信息服务、电子政务目录体系、人口基础库、法人基础库。</p>
<p>　　LDAP提供很复杂的不同层次的访问控制或者ACI。因这些访问可以在服务器端控制，这比用客户端的软件保证数据的安全可安全多了。例如使用用LDAP的ACL，可以完成：</p>
<p>　　1.　给予用户改变他们自己的电话号码和家庭地址的权限，但是限制他们对其它数据（如，职务名称，登录名等）只有“只读”权限。 </p>
<p>　　2.　给予“HR-admins”组中的所有人权限以改变下面这些用户的信息：经理、工作名称、员工号、部门名称和部门号。但是对其它域没有写权限。 </p>
<p>　　3.　禁止任何人查询LDAP服务器上的用户口令，但是可以允许用户改变他自己的口令。 </p>
<p>　　4.　给予经理访问他们上级的家庭电话的只读权限，但是禁止其他人有这个权限。 </p>
<p>　　5.　给予“host-admins”组中的任何人创建、删除和编辑所有保存在LDAP服务器中的与计算机主机有关的信息 </p>
<p>　　6.　通过Web，允许“foobar-sales”组中的成员有选择地给予或禁止他们自己读取一部分客户联系数据的读权限。这将允许他们把客户联系信息下载到本地的笔记本电脑或个人数字助理（PDA）上。</p>
<p>　　7.　通过Web，允许组的所有者删除或添加他们拥有的组的成员。例如：可以允许销售经理给予或禁止销售人员改变Web 页的权限。也可以允许邮件别名（mail aliase）的所有者不经过IT技术人员就直接从邮件别名中删除或添加用户。</p>
<p>　　8.　“公用”的邮件列表应该允许用户从邮件假名中添加或删除自己（但是只能是自己）。也可以对IP地址或主机名加以限制。例如，某些域只允许用户IP地址以192.168.200.*开头的有读的权限，或者用户反向查找DNS得到的主机名必须为*.foobar.com。</p>
<p>&nbsp;</p>
<div class="content_h2">
<h2 class="mar-t10">LDAP - 与X.500的比较</h2>
</div>
<p>　　从目录服务技术的发展来看，LDAP标准实际上是在X.500标准基础上产生的一个简化版本，两者之间的关系与那种为解决同一个问题出现的两个独立发展的技术有很大的不同之处，因此需要在此基础上对这两个标准进行理解和分析。</p>
<p>　　首先，作为IETF（Internet Engineering Task Force）一个正式的标准，LDAP是X.500标准中的目录访问协议DAP的一个子集，可用于建立X.500目录。因此这两个目录服务技术标准有着许多的共同之处，即在平台上，都实现了一个通用的平台结构，提供了一个操作系统和应用程序需要的信息服务类型，可以被许多平台和应用程序接收和实现；在信息模型上，都使用了项、对象类、属性等概念和模式来描述信息；在命名空间方面，都使用了目录信息树结构和层次命名模型；在功能模型上，都使用了相&#20284;的操作命令来管理目录信息；在认证框架方面，都可以实现用户名称和密码，或者基于安全加密方式的认证机制；在灵活性上，它们的目录规模都可大可小，大到全球目录树，小到只有一台目录服务器；在分布性方面，目录信息都可以分布在多个目录服务器中，这些服务器可以由各组织管理，既保证了目录信息总体结构一致性，又满足了分级管理的需要。</p>
<p>　　LDAP与X.500的DAP相同之处是，LDAP也是被设计用来从分层目录中提取信息。但与之不同的是，为保持网络的带宽， LDAP对来自X.500目录询问的应答次数加以限制。最初LDAP只是一种访问X.500目录的简单方法，是X.500的功能子集，但随着它的成熟和独立发展，已经增加了许多在X.500中没有的新特性。现在的LDAP既可以为X.500目录服务提供一个轻型前端，也可以实现一个独立的目录服务。</p>
<p>　　LDAP的独特之处主要表现在如下几个方面：</p>
<p>　　1. AP（Access Protocol）既是一个X.500的访问协议，又是一个灵活的可以独立实现的目录系统。 </p>
<p>　　2. DAP（Directory Access Protocol）基于Internet协议，X.500基于OSI（开放式系统互联）协议：建立在应用层上的X.500 目录访问协议DAP，需要在OSI会话层和表示层上进行许多的建立连接和包处理的任务，需要特殊的网络软件实现对网络的访问；LDAP则直接运行在更简单和更通用的TCP/IP或其它可靠的传输协议层上，避免了在OSI会话和表示层的开销，使连接的建立和包的处理更简单、更快，对于互联网和企业网应用更理想。</p>
<p>　　3. LDAP协议更为简单：LDAP继承了X.500最好的特性，同时去掉了它的复杂性。LDAP通过使用查找操作实现列表操作和读操作，另一方面省去了X.500中深奥的和很少使用的服务控制和安全特性，只保留常用的特性，简化了LDAP的实现。</p>
<p>　　4. LDAP通过引用机制实现分布式访问：X.500 DSA通过服务器之间的链操作实现分布式的访问，这样查询的压力集中于服务器端；而LDAP通过客户端API实现分布式操作（对于应用透明）平衡了负载；</p>
<p>　　5. LDAP实现具有低费用、易配置和易管理的特点。经过性能测试，LDAP比X.500具有更少的响应时间；LDAP提供了满足应用程序对目录服务所需求的特性。</p>
<div class="content_h2">
<h2 class="mar-t10">&nbsp;</h2>
<h2 class="mar-t10">LDAP - 优势</h2>
</div>
<p>LDAP目录的优势<br>
<br>
如果需要开发一种提供公共信息查询的系统一般的设计方法可能是采用基于WEB的数据库设计方式，即前端使用浏览器而后端使用WEB服务器加上关系数据库。后端在Windows的典型实现可能是Windows NT &#43; IIS &#43; Acess数据库或者是SQL服务器，IIS和数据库之间通过ASP技术使用ODBC进行连接，达到通过填写表单查询数据的功能；<br>
<br>
后端在Linux系统的典型实现可能是Linux&#43; Apache &#43; postgresql，Apache 和数据库之间通过PHP3提供的函数进行连接。使用上述方法的缺点是后端关系数据库的引入导致系统整体的性能降低和系统的管理比较繁琐，因为需要不断的进行数据类型的验证和事务的完整性的确认；并且前端用户对数据的控制不够灵活，用户权限的设置一般只能是设置在表一级而不是设置在记录一级。<br>
<br>
目录服务的推出主要是解决上述数据库中存在的问题。目录与关系数据库相&#20284;，是指具有描述性的基于属性的记录集合，但它的数据类型主要是字符型，为了检索的需要添加了BIN （二进制数据）、CIS（忽略大小写）、CES（大小写敏感）、TEL（电话型）等语法（Syntax），而不是关系数据库提供的整数、浮点数、日期、货币等类型，同样也不提供象关系数据库中普遍包含的大量的函数，它主要面向数据的查询服务（查询和修改操作比一般是大于10:1），不提供事务的回滚（rollback）机制，它的数据修改使用简单的锁定机制实现All-or-Nothing，它的目标是快速响应和大容量查询并且提供多目录服务器的信息复制功能。<br>
<br>
现在该说说LDAP目录到底有些什么优势了。现在LDAP的流行是很多因数共同作用的结果。可能LDAP最大的优势是：可以在任何计算机平台上，用很容易获得的而且数目不断增加的LDAP的客户端程序访问LDAP目录。而且也很容易定制应用程序为它加上LDAP的支持。<br>
<br>
LDAP协议是跨平台的和标准的协议，因此应用程序就不用为LDAP目录放在什么样的服务器上操心了。实际上，LDAP得到了业界的广泛认可，因为它是Internet的标准。产商都很愿意在产品中加入对LDAP的支持，因为他们根本不用考虑另一端（客户端或服务端）是怎么样的。LDAP服务器可以是任何一个开发源代码或商用的LDAP目录服务器（或者还可能是具有LDAP界面的关系型数据库），因为可以用同样的协议、客户端连接软件包和查询命令与LDAP服务器进行交互。与LDAP不同的是，如果软件产商想在软件产品中集成对DBMS的支持，那么通常都要对每一个数据库服务器单独定制。不象很多商用的关系型数据库，你不必为LDAP的每一个客户端连接或许可协议付费
 大多数的LDAP服务器安装起来很简单，也容易维护和优化。<br>
<br>
LDAP服务器可以用“推”或“拉”的方法复制部分或全部数据，例如：可以把数据“推”到远程的办公室，以增加数据的安全性。复制技术是内置在LDAP服务器中的而且很容易配置。如果要在DBMS中使用相同的复制功能，数据库产商就会要你支付额外的费用，而且也很难管理。<br>
<br>
LDAP允许你根据需要使用ACI（一般都称为ACL或者访问控制列表）控制对数据读和写的权限。例如，设备管理员可以有权改变员工的工作地点和办公室号码，但是不允许改变记录中其它的域。ACI可以根据谁访问数据、访问什么数据、数据存在什么地方以及其它对数据进行访问控制。因为这些都是由LDAP目录服务器完成的，所以不用担心在客户端的应用程序上是否要进行安全检查。<br>
<br>
LDAP（Lightweight Directory Acess Protocol）是目录服务在TCP/IP上的实现（RFC 1777 V2版和RFC 2251<br>
<br>
V3版）。它是对X500的目录协议的移植，但是简化了实现方法，所以称为轻量级的目录服务。在LDAP中目录是按照树型结构组织，目录由条目（Entry）组成，条目相当于关系数据库中表的记录；条目是具有区别名DN（Distinguished<br>
<br>
Name）的属性（Attribute）集合，DN相当于关系数据库表中的关键字（Primary<br>
<br>
Key）；属性由类型（Type）和多个&#20540;（Values）组成，相当于关系数据库中的域（Field）由域名和数据类型组成，只是为了方便检索的需要，LDAP中的Type可以有多个Value，而不是关系数据库中为降低数据的冗余性要求实现的各个域必须是不相关的。LDAP中条目的组织一般按照地理位置和组织关系进行组织，非常的直观。LDAP把数据存放在文件中，为提高效率可以使用基于索引的文件数据库，而不是关系数据库。LDAP协议集还规定了DN的命名方法、存取控制方法、搜索&#26684;式、复制方法、URL&#26684;式、开发接口等<br>
<br>
LDAP对于这样存储这样的信息最为有用，也就是数据需要从不同的地点读取，但是不需要经常更新。<br>
<br>
例如，这些信息存储在LDAP目录中是十分有效的：<br>
<br>
l 公司员工的电话号码簿和组织结构图<br>
<br>
l 客户的联系信息<br>
<br>
l 计算机管理需要的信息，包括NIS映射、email假名，等等<br>
<br>
l 软件包的配置信息<br>
<br>
l 公用证书和安全密匙<br>
<br>
什么时候该用LDAP存储数据<br>
<br>
大多数的LDAP服务器都为读密集型的操作进行专门的优化。因此，当从LDAP服务器中读取数据的时候会比从专门为OLTP优化的关系型数据库中读取数据快一个数量级。也是因为专门为读的性能进行优化，大多数的LDAP目录服务器并不适合存储需要需要经常改变的数据。例如，用LDAP服务器来存储电话号码是一个很好的选择，但是它不能作为电子商务站点的数据库服务器。<br>
<br>
如果下面每一个问题的答案都是“是”，那么把数据存在LDAP中就是一个好主意。<br>
<br>
l 需要在任何平台上都能读取数据吗？<br>
<br>
l 每一个单独的记录项是不是每一天都只有很少的改变？<br>
<br>
l 可以把数据存在平面数据库（flat database）而不是关系型数据库中吗？换句话来说，也就是不管什么范式不范式的，把所有东西都存在一个记录中（差不多只要满足第一范式）。<br>
<br>
最后一个问题可能会唬住一些人，其实用平面数据库去存储一些关系型的数据也是很一般的。例如，一条公司员工的记录就可以包含经理的登录名。用LDAP来存储这类信息是很方便的。一个简单的判断方法：如果可以把保数据存在一张张的卡片里，就可以很容易地把它存在LDAP目录里。<br>
<br>
安全和访问控制<br>
<br>
LDAP提供很复杂的不同层次的访问控制或者ACI。因这些访问可以在服务器端控制，这比用客户端的软件保证数据的安全可安全多了。<br>
<br>
用LDAP的ACI，可以完成：<br>
<br>
l 给予用户改变他们自己的电话号码和家庭地址的权限，但是限制他们对其它数据（如，职务名称，经理的登录名，等等）只有“只读”权限。<br>
<br>
l 给予“HR-admins&quot;组中的所有人权限以改变下面这些用户的信息：经理、工作名称、员工号、部门名称和部门号。但是对其它域没有写权限。<br>
<br>
l 禁止任何人查询LDAP服务器上的用户口令，但是可以允许用户改变他或她自己的口令。<br>
<br>
l 给予经理访问他们上级的家庭电话的只读权限，但是禁止其他人有这个权限。<br>
<br>
l 给予“host-admins&quot;组中的任何人创建、删除和编辑所有保存在LDAP服务器中的与计算机主机有关的信息<br>
<br>
l 通过Web，允许“foobar-sales&quot;组中的成员有选择地给予或禁止他们自己读取一部分客户联系数据的读权限。这将允许他们把客户联系信息下载到本地的笔记本电脑或个人数字助理（PDA）上。（如果销售人员的软件都支持LDAP，这将非常有用）<br>
<br>
l 通过Web，允许组的所有者删除或添加他们拥有的组的成员。例如：可以允许销售经理给予或禁止销售人员改变Web页的权限。也可以允许邮件假名（mail aliase）的所有者不经过IT技术人员就直接从邮件假名中删除或添加用户。“公用”的邮件列表应该允许用户从邮件假名中添加或删除自己（但是只能是自己）。也可以对IP地址或主机名加以限制。例如，某些域只允许用户IP地址以192.168.200.*开头的有读的权限，或者用户反向查找DNS得到的主机名必须为*.foobar.com。<br>
<br>
</p>
<div class="content_h2">
<h2 class="mar-t10">LDAP - 结构</h2>
</div>
<p>LDAP目录树的结构<br>
<br>
LDAP目录以树状的层次结构来存储数据。如果你对自顶向下的DNS树或UNIX文件的目录树比较熟悉，也就很容易掌握LDAP目录树这个概念了。就象DNS的主机名那样，LDAP目录记录的标识名（Distinguished Name，简称DN）是用来读取单个记录，以及回溯到树的顶部。后面会做详细地介绍。<br>
<br>
为什么要用层次结构来组织数据呢？原因是多方面的。下面是可能遇到的一些情况：<br>
<br>
l 如果你想把所有的美国客户的联系信息都“推”到位于到西雅图办公室（负责营销）的LDAP服务器上，但是你不想把公司的资产管理信息“推”到那里。<br>
<br>
l 你可能想根据目录树的结构给予不同的员工组不同的权限。在下面的例子里，资产管理组对“asset-mgmt&quot;部分有完全的访问权限，但是不能访问其它地方。<br>
<br>
l 把LDAP存储和复制功能结合起来，可以定制目录树的结构以降低对WAN带宽的要求。位于西雅图的营销办公室需要每分钟更新的美国销售状况的信息，但是欧洲的销售情况就只要每小时更新一次就行了。<br>
<br>
刨根问底：基准DN<br>
<br>
LDAP目录树的最顶部就是根，也就是所谓的“基准DN&quot;。基准DN通常使用下面列出的三种&#26684;式之一。假定我在名为FooBar的电子商务公司工作，这家公司在Internet上的名字是foobar.com。<br>
<br>
o=&quot;FooBar, Inc.&quot;, c=US<br>
<br>
（以X.500&#26684;式表示的基准DN）<br>
<br>
在这个例子中，o=FooBar, Inc. 表示组织名，在这里就是公司名的同义词。c=US 表示公司的总部在美国。以前，一般都用这种方式来表示基准DN。但是事物总是在不断变化的，现在所有的公司都已经（或计划）上Internet上。随着 Internet的全球化，在基准DN中使用国家代码很容易让人产生混淆。现在，X.500&#26684;式发展成下面列出的两种&#26684;式。<br>
<br>
o=foobar.com<br>
<br>
（用公司的Internet地址表示的基准DN）<br>
<br>
这种&#26684;式很直观，用公司的域名作为基准DN。这也是现在最常用的&#26684;式。<br>
<br>
dc=foobar, dc=com<br>
<br>
（用DNS域名的不同部分组成的基准DN）<br>
<br>
就象上面那一种&#26684;式，这种&#26684;式也是以DNS域名为基础的，但是上面那种&#26684;式不改变域名（也就更易读），而这种&#26684;式把域名： foobar.com分成两部分 dc=foobar, dc=com。在理论上，这种&#26684;式可能会更灵活一点，但是对于最终用户来说也更难记忆一点。考虑一下foobar.com这个例子。当 foobar.com和gizmo.com合并之后，可以简单的把“dc=com&quot;当作基准DN。把新的记录放到已经存在的dc=gizmo, dc=com目录下，这样就简化了很多工作（当然，如果foobar.com和wocket.edu合并，这个方法就不能用了）。如果LDAP服务器是新安装的，我建议你使用这种&#26684;式。再请注意一下，如果你打算使用活动目录（Actrive
 Directory），Microsoft已经限制你必须使用这种&#26684;式。<br>
<br>
更上一层楼：在目录树中怎么组织数据<br>
<br>
在UNIX文件系统中，最顶层是根目录（root）。在根目录的下面有很多的文件和目录。象上面介绍的那样，LDAP目录也是用同样的方法组织起来的。<br>
<br>
在根目录下，要把数据从逻辑上区分开。因为历史上（X.500）的原因，大多数LDAP目录用OU从逻辑上把数据分开来。OU表示 “Organization Unit&quot;，在X.500协议中是用来表示公司内部的机构：销售部、财务部，等等。现在LDAP还保留ou=这样的命名规则，但是扩展了分类的范围，可以分类为：ou=people, ou=groups, ou=devices，等等。更低一级的OU有时用来做更细的归类。例如：LDAP目录树（不包括单独的记录）可能会是这样的：<br>
<br>
dc=foobar, dc=com<br>
<br>
ou=customers<br>
<br>
ou=asia<br>
<br>
ou=europe<br>
<br>
ou=usa<br>
<br>
ou=employees<br>
<br>
ou=rooms<br>
<br>
ou=groups<br>
<br>
ou=assets-mgmt<br>
<br>
ou=nisgroups<br>
<br>
ou=recipes<br>
<br>
单独的LDAP记录<br>
<br>
DN是LDAP记录项的名字<br>
<br>
在LDAP目录中的所有记录项都有一个唯一的“Distinguished Name&quot;，也就是DN。每一个LDAP记录项的DN是由两个部分组成的：相对DN（RDN）和记录在LDAP目录中的位置。<br>
<br>
RDN是DN中与目录树的结构无关的部分。在LDAP目录中存储的记录项都要有一个名字，这个名字通常存在cn（Common Name）这个属性里。因为几乎所有的东西都有一个名字，在LDAP中存储的对象都用它们的cn&#20540;作为RDN的基础。如果我把最喜欢的吃燕麦粥食谱存为一个记录，我就会用cn=Oatmeal Deluxe作为记录项的RDN。<br>
<br>
l 我的LDAP目录的基准DN是dc=foobar,dc=com<br>
<br>
l 我把自己的食谱作为LDAP的记录项存在ou=recipes<br>
<br>
l 我的LDAP记录项的RDN设为cn=Oatmeal Deluxe<br>
<br>
上面这些构成了燕麦粥食谱的LDAP记录的完整DN。记住，DN的读法和DNS主机名类&#20284;。下面就是完整的DN：<br>
<br>
cn=Oatmeal Deluxe,ou=recipes,dc=foobar,dc=com<br>
<br>
举一个实际的例子来说明DN<br>
<br>
现在为公司的员工设置一个DN。可以用基于cn或uid（User ID），作为典型的用户帐号。例如，FooBar的员工Fran Smith（登录名：fsmith）的DN可以为下面两种&#26684;式：<br>
<br>
uid=fsmith,ou=employees,dc=foobar,dc=com<br>
<br>
（基于登录名）<br>
<br>
LDAP（以及X.500）用uid表示“User ID&quot;，不要把它和UNIX的uid号混淆了。大多数公司都会给每一个员工唯一的登录名，因此用这个办法可以很好地保存员工的信息。你不用担心以后还会有一个叫Fran Smith的加入公司，如果Fran改变了她的名字（结婚？离婚？或宗教原因？），也用不着改变LDAP记录项的DN。<br>
<br>
cn=Fran Smith,ou=employees,dc=foobar,dc=com<br>
<br>
（基于姓名）<br>
<br>
可以看到这种&#26684;式使用了Common Name（CN）。可以把Common Name当成一个人的全名。这种&#26684;式有一个很明显的缺点就是：如果名字改变了，LDAP的记录就要从一个DN转移到另一个DN。但是，我们应该尽可能地避免改变一个记录项的DN。<br>
<br>
定制目录的对象类型<br>
<br>
你可以用LDAP存储各种类型的数据对象，只要这些对象可以用属性来表示，下面这些是可以在LDAP中存储的一些信息：<br>
<br>
l 员工信息：员工的姓名、登录名、口令、员工号、他的经理的登录名，邮件服务器，等等。<br>
<br>
l 物品跟踪信息：计算机名、IP地址、标签、型号、所在位置，等等。<br>
<br>
l 客户联系列表：客户的公司名、主要联系人的电话、传真和电子邮件，等等。<br>
<br>
l 会议厅信息：会议厅的名字、位置、可以坐多少人、电话号码、是否有投影机。<br>
<br>
l 食谱信息：菜的名字、配料、烹调方法以及准备方法。<br>
<br>
因为LDAP目录可以定制成存储任何文本或二进制数据，到底存什么要由你自己决定。LDAP目录用对象类型（object classes）的概念来定义运行哪一类的对象使用什么属性。在几乎所有的LDAP服务器中，你都要根据自己的需要扩展基本的LDAP目录的功能，创建新的对象类型或者扩展现存的对象类型。<br>
<br>
LDAP目录以一系列“属性对”的形式来存储记录项，每一个记录项包括属性类型和属性&#20540;（这与关系型数据库用行和列来存取数据有根本的不同）。下面是我存在LDAP目录中的一部分食谱记录：<br>
<br>
dn: cn=Oatmeal Deluxe, ou=recipes, dc=foobar, dc=com<br>
<br>
cn: Instant Oatmeal Deluxe<br>
<br>
recipeCuisine: breakfast<br>
<br>
recipeIngredient: 1 packet instant oatmeal<br>
<br>
recipeIngredient: 1 cup water<br>
<br>
recipeIngredient: 1 pinch salt<br>
<br>
recipeIngredient: 1 tsp brown sugar<br>
<br>
recipeIngredient: 1/4 apple, any type<br>
<br>
请注意上面每一种配料都作为属性recipeIngredient&#20540;。LDAP目录被设计成象上面那样为一个属性保存多个&#20540;的，而不是在每一个属性的后面用逗号把一系列&#20540;分开。<br>
<br>
因为用这样的方式存储数据，所以数据库就有很大的灵活性，不必为加入一些新的数据就重新创建表和索引。更重要的是，LDAP目录不必花费内存或硬盘空间处理“空”域，也就是说，实际上不使用可选择的域也不会花费你任何资源。<br>
<br>
作为例子的一个单独的数据项<br>
<br>
让我们看看下面这个例子。我们用Foobar, Inc.的员工Fran Smith的LDAP记录。这个记录项的&#26684;式是LDIF，用来导入和导出LDAP目录的记录项。<br>
<br>
dn: uid=fsmith, ou=employees, dc=foobar, dc=com<br>
<br>
objectclass: person<br>
<br>
objectclass: organizationalPerson<br>
<br>
objectclass: inetOrgPerson<br>
<br>
objectclass: foobarPerson<br>
<br>
uid: fsmith<br>
<br>
givenname: Fran<br>
<br>
sn: Smith<br>
<br>
cn: Fran Smith<br>
<br>
cn: Frances Smith<br>
<br>
telephonenumber: 510-555-1234<br>
<br>
roomnumber: 122G<br>
<br>
o: Foobar, Inc.<br>
<br>
mailRoutingAddress: fsmith@foobar.commailhost: mail.foobar.com<br>
<br>
userpassword: 3x1231v76T89N<br>
<br>
uidnumber: 1234<br>
<br>
gidnumber: 1200<br>
<br>
homedirectory: /home/fsmith<br>
<br>
loginshell: /usr/local/bin/bash<br>
<br>
属性的&#20540;在保存的时候是保留大小写的，但是在默认情况下搜索的时候是不区分大小写的。某些特殊的属性（例如，password）在搜索的时候需要区分大小写。<br>
<br>
让我们一点一点地分析上面的记录项。<br>
<br>
dn: uid=fsmith, ou=employees, dc=foobar, dc=com<br>
<br>
这是Fran的LDAP记录项的完整DN，包括在目录树中的完整路径。LDAP（和X.500）使用uid（User ID），不要把它和UNIX的uid号混淆了。<br>
<br>
objectclass: person<br>
<br>
objectclass: organizationalPerson<br>
<br>
objectclass: inetOrgPerson<br>
<br>
objectclass: foobarPerson<br>
<br>
可以为任何一个对象根据需要分配多个对象类型。person对象类型要求cn（common name）和sn（surname）这两个域不能为空。persion对象类型允许有其它的可选域，包括givenname、 telephonenumber，等等。organizational Person给person加入更多的可选域，inetOrgPerson又加入更多的可选域（包括电子邮件信息）。最后，foobarPerson是为 Foobar定制的对象类型，加入了很多定制的属性。<br>
<br>
uid: fsmith<br>
<br>
givenname: Fran<br>
<br>
sn: Smith<br>
<br>
cn: Fran Smith<br>
<br>
cn: Frances Smith<br>
<br>
telephonenumber: 510-555-1234<br>
<br>
roomnumber: 122G<br>
<br>
o: Foobar, Inc.<br>
<br>
以前说过了，uid表示User ID。当看到uid的时候，就在脑袋里想一想“login&quot;。<br>
<br>
请注意CN有多个&#20540;。就象上面介绍的，LDAP允许某些属性有多个&#20540;。为什么允许有多个&#20540;呢？假定你在用公司的LDAP服务器查找Fran 的电话号码。你可能只知道她的名字叫Fran，但是对人力资源处的人来说她的正式名字叫做Frances。因为保存了她的两个名字，所以用任何一个名字检索都可以找到Fran的电话号码、电子邮件和办公房间号，等等。<br>
<br>
mailRoutingAddress: fsmith@foobar.commailhost: mail.foobar.com<br>
<br>
就象现在大多数的公司都上网了，Foobar用Sendmail发送邮件和处理外部邮件路由信息。Foobar把所有用户的邮件信息都存在LDAP中。最新版本的Sendmail支持这项<a class="innerlink" title="功能" href="http://www.hudong.com/wiki/%E5%8A%9F%E8%83%BD">功能</a>。<br>
<br>
Userpassword: 3x1231v76T89N<br>
<br>
uidnumber: 1234<br>
<br>
gidnumber: 1200<br>
<br>
gecos: Frances Smith<br>
<br>
homedirectory: /home/fsmith<br>
<br>
loginshell: /usr/local/bin/bash<br>
<br>
</p>
<div class="content_h2">
<h2 class="mar-t10">LDAP -</h2>
</div>
<p>Foobar的系统管理员把所有用户的口令映射信息也都存在LDAP中。FoobarPerson类型的对象具有这种能力。再注意一下，用户口令是用UNIX的口令加密&#26684;式存储的。UNIX的uid在这里为uidnumber。提醒你一下，关于如何在LDAP中保存NIS信息，有完整的一份RFC。在以后的文章中我会谈一谈NIS的集成。<br>
<br>
LDAP复制<br>
<br>
LDAP服务器可以使用基于“推”或者“拉”的技术，用简单或基于安全证书的安全验证，复制一部分或者所有的数据。<br>
<br>
例如，Foobar有一个“公用的”LDAP服务器，地址为ldap.foobar.com，端口为389。Netscape Communicator的电子邮件查询功能、UNIX的“ph&quot;命令要用到这个服务器，用户也可以在任何地方查询这个服务器上的员工和客户联系信息。公司的主LDAP服务器运行在相同的计算机上，不过端口号是1389。<br>
<br>
你可能即不想让员工查询资产管理或食谱的信息，又不想让信息技术人员看到整个公司的LDAP目录。为了解决这个问题，Foobar有选择地把子目录树从主LDAP服务器复制到“公用”LDAP服务器上，不复制需要隐藏的信息。为了保持数据始终是最新的，主目录服务器被设置成即时“推”同步。这些种方法主要是为了方便，而不是安全，因为如果有权限的用户想查询所有的数据，可以用另一个LDAP端口。<br>
<br>
假定Foobar通过从奥克兰到欧洲的低带宽数据的连接用LDAP管理客户联系信息。可以建立从ldap.foobar.com:1389到munich-ldap.foobar.com:389的数据复制，象下面这样：<br>
<br>
periodic pull: ou=asia,ou=customers,o=sendmail.com<br>
<br>
periodic pull: ou=us,ou=customers,o=sendmail.com<br>
<br>
immediate push: ou=europe,ou=customers,o=sendmail.com<br>
<br>
“拉”连接每15分钟同步一次，在上面假定的情况下足够了。“推”连接保证任何欧洲的联系信息发生了变化就立即被“推”到Munich。<br>
<br>
用上面的复制模式，用户为了访问数据需要连接到哪一台服务器呢？在Munich的用户可以简单地连接到本地服务器。如果他们改变了数据，本地的LDAP服务器就会把这些变化传到主LDAP服务器。然后，主LDAP服务器把这些变化“推”回本地的“公用”LDAP服务器保持数据的同步。这对本地的用户有很大的好处，因为所有的查询（大多数是读）都在本地的服务器上进行，速度非常快。当需要改变信息的时候，最终用户不需要重新配置客户端的软件，因为LDAP目录服务器为他们完成了所有的数据交换工作。</p>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>23</wp:post_id>
		<wp:post_date>2012-09-23 06:51:00</wp:post_date>
		<wp:post_date_gmt>2012-09-22 22:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9aldap%e6%a6%82%e8%bf%b0</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>http数据包概要记录</title>
		<link>http://localhost/wp/?p=24</link>
		<pubDate>Tue, 18 Sep 2012 01:58:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=24</guid>
		<description></description>
		<content:encoded><![CDATA[HTTP协议也就是超文本传输协议在通讯时，由客户端发出请求连接，服务端建立连接；然后，客户端发出HTTP请求（Request），服务端返回响应信息（Respond），由此完成一个HTTP操作。<br>
<br>
<pre name="code" class="plain">Connecting to go2.163.com ... 　  //连接服务器
Connected to go2.163.com [61.129.65.148]  //解析IP地址
GET /~minift/epretty/pretty.zip HTTP/1.1 //请求行（Request Line），表示使用GET方式取得文件，使用HTTP/1.1协议

//以下为请求头部（Request Head）
Connection: close 　　　 //表示非持
Host: go2.163.com 　　　//主机名称
Accept: */* 　　　　     //接受的数据类型
Pragma: no-cache 　　//参数（与以前的服务器兼容）
Cache-Control: no-cache 　//不使用缓存
Referer: http://go2.163.com/~minift/epretty　　//从该网址转来
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)　//客户端标识
Cookie: AdId=ACDDAAAAAAA //Cookie信息

//以下为Respond
HTTP/1.0 200 OK 　　//响应行（Respond Line)，服务器使用HTTP/1.0协议，状态值（Status Code）为200，状态为OK，表示文件可以读取
Date: Sat, 26 May 2001 08:15:54 GMT 　　　　　　//现在的时间，用格林威治时间表示
Server: Apache/1.3.14 (Unix) mod_layout/2.9.9 　//服务器类型
Last-Modified: Fri, 04 May 2001 02:42:56 GMT 　　//文件最后更新时间

Accept-Ranges: bytes 　　　　　　　　　　　　//接受的范围单位
Content-Length: 227685 　　　　　　　　　　　　//文件长度
Content-Type: application/zip 　　　　　　　　　//MIME类型
X-Cache: MISS from shca8
X-Cache-Lookup: MISS from shca8:80
Connection: close 　　　　　　　　　　　　　　　//表示文件传输完毕就关闭连接。
/以下为文件传输
Data transfer started </pre><br>
<br>
<br>
<br>
使用的&#26684;式（LRCF=@13@10，表示回车，SP=SPACE，表示空&#26684;）<br>
<br>
Request：<br>
协议方式 SP 文件URI SP 协议版本 LRCF （请求行）<br>
（以下为头部）<br>
头部类型 : 头部&#20540; LRCF<br>
头部类型 : 头部&#20540; LRCF<br>
头部类型 : 头部&#20540; LRCF<br>
...... <br>
LRCF 表示头部结束<br>
(如果有体部，以下为体部）<br>
<br>
<br>
Respond：<br>
协议版本 SP 状态&#20540; SP 状态描述 LRCF （响应行）<br>
（以下为头部）<br>
头部类型 : 头部&#20540; LRCF<br>
头部类型 : 头部&#20540; LRCF<br>
头部类型 : 头部&#20540; LRCF<br>
...... <br>
LRCF 表示头部结束<br>
(如果有体部，以下为体部）<br>
<br>
<br>
响应行中的状态&#20540;含义<br>
<br>
判断协议是否进行成功，在HTTP中是根据响应状态&#20540;来确定的<br>
&nbsp;<br>
200 OK <br>
这是最普遍的吧，也就是表示协议一切正常，凡是2开头的代码表示的都是成功进行中。<br>
<br>
404 Not Found <br>
这也是最普遍的吧，其实大多数错误就是所要求的资源无法得到，通常表示文件不存在<br>
。 <br>
403 Forbidden <br>
表示服务器无法满足现在的请求，有可能是现在连接数太多等原因。 <br>
401 Unauthorized <br>
未认证的请求，通常浏览器接受到这个状态&#20540;，就会弹出一个对话框，要求你输入密码。 <br>
500 Internal Server Error <br>
服务器内部错误，一般的原因是因为所执行的程序有错误，无法返回正确应答。 <br>
206 Partial Content <br>
部分的内容，这个状态码表示下面传递的是部分的内容，也是断点续传的标准返回码。 <br>
<br>
<br>
有时服务器生成HTTP回应是无法确定消息大小的，这时用Content-Length就无法事先写入长度，而需要实时生成消息长度，这时服务器一般采用Chunked编码。<br>
　　<br>
<br>
<br>
<br>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2012-09-18 09:58:00</wp:post_date>
		<wp:post_date_gmt>2012-09-18 01:58:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>http%e6%95%b0%e6%8d%ae%e5%8c%85%e6%a6%82%e8%a6%81%e8%ae%b0%e5%bd%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：HTTP协议格式详细说明</title>
		<link>http://localhost/wp/?p=25</link>
		<pubDate>Tue, 18 Sep 2012 01:34:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=25</guid>
		<description></description>
		<content:encoded><![CDATA[<p align="left"><span style="color:black"></span>转：HTTP协议&#26684;式详细说明 &nbsp;<a target="_blank" href="http://ishare.iask.sina.com.cn/f/19620502.html">http://ishare.iask.sina.com.cn/f/19620502.html</a><span style="color:black"></span></p>
<table border="0" cellpadding="0" cellspacing="0" width="100%">
<tbody>
<tr>
<td>
<p align="center"><strong><span style="color:#336699">HTTP</span><span style="color:#336699">协议&#26684;式简单说明</span></strong></p>
</td>
</tr>
<tr>
<td>
<p align="left"><span style="color:black">前言</span></p>
<p align="left"><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HTTP</span><span style="color:black">消息由客户端到服务器的请求和服务器到客户端的响应组成。请求消息和响应消息都是由开始行（对于请求消息，开始行就是请求行，对于响应消息，开始行就是状态行），消息报头，空行（只有</span><span style="color:black">CRLF</span><span style="color:black">的行），消息正文（可选）组成。</span></p>
<p align="left"><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HTTP</span><span style="color:black">消息报头包括通用报头、请求报头、响应报头、实体报头。每一个报头域都是由名字</span><span style="color:black">&#43;“</span><span style="color:black">：</span><span style="color:black">”&#43;</span><span style="color:black">空&#26684;</span><span style="color:black">&#43;</span><span style="color:black">&#20540;组成，消息报头域的名字是大小写无关的。</span></p>
<p align="left"><span style="color:black">1</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">请求消息&#26684;式</span></p>
<p align="left"><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; HTTP</span><span style="color:black">请求内容由三部分组成：请求行、消息头（报头）、可选的请求正文（信息体）</span></p>
<p align="left"><span style="color:black">1.1</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">请求行&#26684;式：</span></p>
<p align="left"><span style="color:black">请求行必须是放在所有内容的最前面，并且必须以换行回车符结束，&#26684;式如下：</span></p>
<p align="left"><span style="color:black">Method&lt;</span><span style="color:black">空&#26684;</span><span style="color:black">&gt;Request-URI&lt;</span><span style="color:black">空&#26684;</span><span style="color:black">&gt;HTTP/Version&lt;</span><span style="color:black">换行回车符</span><span style="color:black">&gt;</span></p>
<p align="left"><span style="color:black">1.2</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Method</span><span style="color:black">：</span></p>
<p align="left"><span style="color:black">表示对于</span><span style="color:black">Request-URI</span><span style="color:black">完成的方法，这个字段是大小写敏感的，有</span><span style="color:blue">OPTIONS</span><span style="color:blue">、</span><span style="color:blue">GET</span><span style="color:blue">、</span><span style="color:blue">HEAD</span><span style="color:blue">、</span><span style="color:blue">POST</span><span style="color:blue">、</span><span style="color:blue">PUT</span><span style="color:blue">、</span><span style="color:blue">DELETE</span><span style="color:blue">、</span><span style="color:blue">
 TRACE</span><span style="color:black">。方法</span><span style="color:black">GET</span><span style="color:black">和</span><span style="color:black">HEAD</span><span style="color:black">应该被所有的通用</span><span style="color:black">WEB</span><span style="color:black">服务器支持，其他所有方法的实现是可选的。</span><span style="color:black">GET</span><span style="color:black">方法取回由</span><span style="color:black">Request-URI</span><span style="color:black">标识的信息。</span><span style="color:black">
 HEAD</span><span style="color:black">方法也是取回由</span><span style="color:black">Request-URI</span><span style="color:black">标识的信息，只是可以在响应时，不返回消息体。</span><span style="color:black">POST</span><span style="color:black">方法可以请求服务器接收包含在请求中的实体信息，可以用于提交表单，发送消息等</span></p>
<p align="left"><span style="color:black">1.3</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Request-URI</span><span style="color:black">：</span></p>
<p align="left"><span style="color:black">遵循</span><span style="color:black">URI</span><span style="color:black">&#26684;式，在此字段为星号（</span><span style="color:black">*</span><span style="color:black">）时，说明请求并不用于某个特定的资源地址，而是用于服务器本身</span></p>
<p align="left"><span style="color:black">1.4</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">HTTP/Version</span></p>
<p align="left"><span style="color:black">表示支持的</span><span style="color:black">HTTP</span><span style="color:black">版本，例如为</span><span style="color:blue">HTTP/1.1</span><span style="color:black">。</span><span style="color:black">CRLF</span><span style="color:black">表示换行回车符。</span></p>
<p align="left"><strong><span style="color:black">2</span></strong><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">响应消息&#26684;式</span></p>
<p align="left"><span style="color:black">HTTP</span><span style="color:black">响应内容也是由三个部分组成：响应</span><span style="color:black">(</span><span style="color:black">状态</span><span style="color:black">)</span><span style="color:black">行、消息报头、响应正文，响应行必须是放在所有内容的最前面，并且必须以换行回车符结束</span></p>
<p align="left"><span style="color:black">2.1</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">响应行&#26684;式：</span></p>
<p align="left"><span style="color:black">HTTP/Version&lt;</span><span style="color:black">空&#26684;</span><span style="color:black">&gt;Status-Code&lt;</span><span style="color:black">空&#26684;</span><span style="color:black">&gt;Reason-Phrase&lt;</span><span style="color:black">换行回车符</span><span style="color:black">&gt;</span></p>
<p align="left"><span style="color:black">2.2</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">HTTP/Version</span></p>
<p align="left"><span style="color:black">表示支持的</span><span style="color:black">HTTP</span><span style="color:black">版本，例如为</span><span style="color:black">HTTP/1.1</span><span style="color:black">。</span></p>
<p align="left"><span style="color:black">2.3</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Status- Code</span></p>
<p align="left"><span style="color:black">是一个三位数字组成的结果代码（状态码）。</span><span style="color:black">Status-Code</span><span style="color:black">的第一个数字定义响应的类别，后两个数字没有分类的作用。第一个数字可能取</span><span style="color:black">5</span><span style="color:black">个不同的&#20540;：</span></p>
<p align="left"><span style="color:black">1xx</span><span style="color:black">：信息响应类，表示接收到请求并且继续处理</span></p>
<p align="left"><span style="color:black">2xx</span><span style="color:black">：处理成功响应类，表示动作被成功接收、理解和接受</span></p>
<p align="left"><span style="color:black">3xx</span><span style="color:black">：重定向响应类，为了完成指定的动作，必须接受进一步处理</span></p>
<p align="left"><span style="color:black">4xx</span><span style="color:black">：客户端错误，客户请求包含语法错误或者是不能正确执行</span></p>
<p align="left"><span style="color:black">5xx</span><span style="color:black">：服务端错误，服务器不能正确执行一个正常的请求</span></p>
<p align="left"><span style="color:black">&nbsp; </span></p>
<p align="left"><span style="color:black">常见状态代码、状态描述、说明：</span></p>
<p align="left"><span style="color:black">200 OK&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //</span><span style="color:black">客户端请求成功</span></p>
<p align="left"><span style="color:black">400 Bad Request&nbsp;&nbsp; //</span><span style="color:black">客户端请求有语法错误，不能被服务器所理解</span></p>
<p align="left"><span style="color:black">401 Unauthorized //</span><span style="color:black">请求未经授权，这个状态代码必须和</span><span style="color:black">WWW-Authenticate</span><span style="color:black">报</span><span style="color:black">&nbsp;</span><span style="color:black">头域一起使用</span></p>
<p align="left"><span style="color:black">403 Forbidden&nbsp;&nbsp; //</span><span style="color:black">服务器收到请求，但是拒绝提供服务</span></p>
<p align="left"><span style="color:black">404 Not Found&nbsp;&nbsp; //</span><span style="color:black">请求资源不存在，</span><span style="color:black">eg</span><span style="color:black">：输入了错误的</span><span style="color:black">URL
</span></p>
<p align="left"><span style="color:black">500 Internal Server Error //</span><span style="color:black">服务器发生不可预期的错误</span></p>
<p align="left"><span style="color:black">503 Server Unavailable&nbsp;&nbsp; //</span><span style="color:black">服务器当前不能处理客户端的请求，一段时间后，可能恢复正常</span></p>
<p align="left"><span style="color:black">2.4</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Reason-Phrase</span></p>
<p align="left"><span style="color:black">状态描述，主要用于帮助用户理解。</span></p>
<p align="left"><strong><span style="color:black">3</span></strong><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">通用头域</span></strong></p>
<p align="left"><span style="color:black">通用头域包含请求和响应消息都支持的头域，通用头域包含</span><span style="color:blue">Cache-Control</span><span style="color:blue">、</span><span style="color:blue"> Connection</span><span style="color:blue">、</span><span style="color:blue">Date</span><span style="color:blue">、</span><span style="color:blue">Pragma</span><span style="color:blue">、</span><span style="color:blue">Transfer-Encoding</span><span style="color:blue">、</span><span style="color:blue">Upgrade</span><span style="color:blue">、</span><span style="color:blue">Via</span><span style="color:black">。对通用头域的扩展要求通讯双方都支持此扩展，如果存在不支持的通用头域，一般将会作为实体头域处理。</span></p>
<p align="left"><span style="color:black">3.1</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">Cache-Control</span><span style="color:black">头域</span></strong></p>
<p align="left"><span style="color:black">Cache -Control</span><span style="color:black">指定请求和响应遵循的</span><span style="color:black"><a href="http://www.qqread.com/tag/1456/index.html" target="_blank"><span style="color:windowtext">缓存</span></a></span><span style="color:black">机制。在请求消息或响应消息中设置</span><span style="color:black">
 Cache-Control</span><span style="color:black">并不会修改另一个消息处理过程中的缓存处理过程。请求时的缓存指令</span><span style="color:black">(</span><span style="color:black">&#20540;</span><span style="color:black">)</span><span style="color:black">包括</span><span style="color:blue">no-cache</span><span style="color:blue">、</span><span style="color:blue">no-store</span><span style="color:blue">、</span><span style="color:blue">max-age</span><span style="color:blue">、</span><span style="color:blue">
 max-stale</span><span style="color:blue">、</span><span style="color:blue">min-fresh</span><span style="color:blue">、</span><span style="color:blue">only-if-cached</span><span style="color:black">，响应消息中的指令包括</span><span style="color:blue">public</span><span style="color:blue">、</span><span style="color:blue">private</span><span style="color:blue">、</span><span style="color:blue">no-cache</span><span style="color:blue">、</span><span style="color:blue">no-
 store</span><span style="color:blue">、</span><span style="color:blue">no-transform</span><span style="color:blue">、</span><span style="color:blue">must-revalidate</span><span style="color:blue">、</span><span style="color:blue">proxy-revalidate</span><span style="color:blue">、</span><span style="color:blue">max-age</span><span style="color:black">。各个消息中的指令含义如下：</span></p>
<p align="left"><span style="color:black">Public</span><span style="color:black">：指示响应可被任何缓存区缓存。</span></p>
<p align="left"><span style="color:black">Private</span><span style="color:black">：指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效。</span></p>
<p align="left"><span style="color:black">no-cache</span><span style="color:black">：指示请求或响应消息不能缓存</span></p>
<p align="left"><span style="color:black">no-store</span><span style="color:black">：用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存。</span></p>
<p align="left"><span style="color:black">max-age</span><span style="color:black">：指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应。</span></p>
<p align="left"><span style="color:black">min-fresh</span><span style="color:black">：指示客户机可以接收响应时间小于当前时间加上指定时间的响应。</span></p>
<p align="left"><span style="color:black">max-stale</span><span style="color:black">：指示客户机可以接收超出超时期间的响应消息。如果指定</span><span style="color:black">max-stale</span><span style="color:black">消息的&#20540;，那么客户机可以接收超出超时期指定&#20540;之内的响应消息。</span></p>
<p align="left"><span style="color:black">3.2</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">Date</span><span style="color:black">头域</span></strong></p>
<p align="left"><span style="color:black">Date</span><span style="color:black">头域表示消息发送的时间，时间的描述&#26684;式由</span><span style="color:black">rfc822</span><span style="color:black">定义。例如，</span><span style="color:black">Date:Mon,31Dec200104:25:57GMT</span><span style="color:black">。</span><span style="color:black">Date</span><span style="color:black">描述的时间表示世界标准时，如果换算成本地时间，需要知道用户所在的时区。</span></p>
<p align="left"><strong><span style="color:black">3.3</span></strong><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">Pragma</span><span style="color:black">头域</span></strong></p>
<p align="left"><span style="color:black">Pragma</span><span style="color:black">头域用来包含实现特定的指令，最常用的是</span><span style="color:black">Pragma:no-cache</span><span style="color:black">。在</span><span style="color:black">HTTP/1.1</span><span style="color:black">协议中，它的含义和</span><span style="color:black">Cache-
 Control:no-cache</span><span style="color:black">相同。</span></p>
<p align="left"><span style="color:black">3.4</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Range</span><span style="color:black">头域</span></p>
<p align="left"><span style="color:black">Range</span><span style="color:black">头域可以请求实体的一个或者多个子范围。例如：</span></p>
<p align="left"><span style="color:black">表示头</span><span style="color:black">500</span><span style="color:black">个字节：</span><span style="color:black">bytes=0-499
</span></p>
<p align="left"><span style="color:black">表示第二个</span><span style="color:black">500</span><span style="color:black">字节：</span><span style="color:black">bytes=500-999
</span></p>
<p align="left"><span style="color:black">表示最后</span><span style="color:black">500</span><span style="color:black">个字节：</span><span style="color:black">bytes= -500
</span></p>
<p align="left"><span style="color:black">表示</span><span style="color:black">500</span><span style="color:black">字节以后的范围：</span><span style="color:black">bytes=500-
</span></p>
<p align="left"><span style="color:black">第一个和最后一个字节：</span><span style="color:black">bytes=0-0,-1
</span></p>
<p align="left"><span style="color:black">同时指定几个范围：</span><span style="color:black">bytes=500-600,601-999
</span></p>
<p align="left"><span style="color:black">但是服务器可以忽略此请求头，如果无条件</span><span style="color:black">GET</span><span style="color:black">包含</span><span style="color:black">Range</span><span style="color:black">请求头，响应会以状态码</span><span style="color:black">206</span><span style="color:black">（</span><span style="color:black">PartialContent</span><span style="color:black">）返回而不是以</span><span style="color:black">200
</span><span style="color:black">（</span><span style="color:black">OK</span><span style="color:black">）。</span></p>
<p align="left"><span style="color:black">4</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">请求头域：</span></p>
<p align="left"><span style="color:black">允许客户端向服务器传递关于请求或者关于客户机的附加。请求头域可能包含下列字段</span><span style="color:blue">Accept</span><span style="color:blue">、</span><span style="color:blue">Accept-Charset</span><span style="color:blue">、</span><span style="color:blue">Accept-
 Encoding</span><span style="color:blue">、</span><span style="color:blue">Accept-Language</span><span style="color:blue">、</span><span style="color:blue">Authorization</span><span style="color:blue">、</span><span style="color:blue">From</span><span style="color:blue">、</span><span style="color:blue">Host</span><span style="color:blue">、</span><span style="color:blue">If-Modified-Since</span><span style="color:blue">、</span><span style="color:blue">If-
 Match</span><span style="color:blue">、</span><span style="color:blue">If-None-Match</span><span style="color:blue">、</span><span style="color:blue">If-Range</span><span style="color:blue">、</span><span style="color:blue">If-Range</span><span style="color:blue">、</span><span style="color:blue">If-Unmodified-Since</span><span style="color:blue">、</span><span style="color:blue">Max-Forwards</span><span style="color:blue">、</span><span style="color:blue">
 Proxy-Authorization</span><span style="color:blue">、</span><span style="color:blue">Range</span><span style="color:blue">、</span><span style="color:blue">Referer</span><span style="color:blue">、</span><span style="color:blue">User-Agent</span><span style="color:black">。对请求头域的扩展，要求通讯双方都支持，如果存在不支持的请求头域，一般将会作为实体头域处理。</span></p>
<p align="left"><span style="color:black">4.1</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">Host</span></strong><span style="color:black">头域</span></p>
<p align="left"><span style="color:black">Host</span><span style="color:black">头域指定请求资源的</span><span style="color:black">Intenet</span><span style="color:black">主机和端口号，必须表示请求</span><span style="color:black">url</span><span style="color:black">的原始服务器或网关的位置。</span><span style="color:black">HTTP/1.1</span><span style="color:black">请求必须包含主机头域，否则系统会以</span><span style="color:black">400</span><span style="color:black">状态码返回。</span></p>
<p align="left"><span style="color:black">4.2</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">Referer</span></strong><span style="color:black">头域</span></p>
<p align="left"><span style="color:black">Referer </span><span style="color:black">头域允许客户端指定请求</span><span style="color:black">uri</span><span style="color:black">的源资源地址，这可以允许服务器生成回退链表，可用来登陆、优化</span><span style="color:black">cache</span><span style="color:black">等。也允许废除的或错误的连接由于维护的目的被追踪。如果请求的</span><span style="color:black">uri</span><span style="color:black">没有自己的</span><span style="color:black">uri</span><span style="color:black">地址，</span><span style="color:black">Referer</span><span style="color:black">不能被发送。如果指定的是部分</span><span style="color:black">uri</span><span style="color:black">地址，则此地址应该是一个相对地址。</span></p>
<p align="left"><strong><span style="color:black">4.3</span></strong><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">User-Agent</span><span style="color:black">头域</span></p>
<p align="left"><span style="color:black">User-Agent</span><span style="color:black">头域的内容包含发出请求的用户信息。</span></p>
<p align="left"><span style="color:black">5</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><strong><span style="color:black">请求消息头示例：</span></strong></p>
<p align="left"><span style="color:black">GET http://www.ebdoor.com:80/ HTTP/1.0 </span>
</p>
<p align="left"><span style="color:green">Host: www.ebdoor.com </span></p>
<p align="left"><span style="color:green">Accept:*/* </span></p>
<p align="left"><span style="color:blue">Pragma: no-cache </span></p>
<p align="left"><span style="color:blue">Cache-Control: no-cache</span></p>
<p align="left"><span style="color:green">Referer: http://www.ebdoor.com/ </span>
</p>
<p align="left"><span style="color:green">User-Agent:Mozilla/4.0(…) </span></p>
<p align="left"><span style="color:green">Range:bytes=554554-</span></p>
<p align="left"><span style="color:black">&nbsp;</span></p>
<p align="left"><span style="color:black">消息体</span><span style="color:black">….</span></p>
<p align="left"><span style="color:black">&nbsp;</span></p>
<p align="left"><span style="color:black">上例第一行表示</span><span style="color:black">HTTP</span><span style="color:black">客户端（可能是浏览器、下载程序）通过</span><span style="color:black">GET</span><span style="color:black">方法获得指定</span><span style="color:black">URL</span><span style="color:black">下的文件。绿色的部分表示请求头域的信息，兰色的部分表示通用头部分。</span></p>
<p align="left"><span style="color:black">6</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">响应头域</span></p>
<p align="left"><span style="color:black">响应头域允许服务器传递不能放在状态行的附加信息，这些域主要描述服务器的信息和</span><span style="color:black"> Request-URI</span><span style="color:black">进一步的信息。响应头域包含</span><span style="color:blue">Age</span><span style="color:blue">、</span><span style="color:blue">Location</span><span style="color:blue">、</span><span style="color:blue">Proxy-Authenticate</span><span style="color:blue">、</span><span style="color:blue">Public</span><span style="color:blue">、</span><span style="color:blue">Retry-
 After</span><span style="color:blue">、</span><span style="color:blue">Server</span><span style="color:blue">、</span><span style="color:blue">Vary</span><span style="color:blue">、</span><span style="color:blue">Warning</span><span style="color:blue">、</span><span style="color:blue">WWW-Authenticate</span><span style="color:black">。对响应头域的扩展要求通讯双方都支持，如果存在不支持的响应头域，一般将会作为实体头域处理。</span></p>
<p align="left"><span style="color:black">6.1</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Location</span><span style="color:black">响应头域</span></p>
<p align="left"><span style="color:black">Location</span><span style="color:black">响应头用于重定向接收者到一个新</span><span style="color:black">URI</span><span style="color:black">地址。</span></p>
<p align="left"><span style="color:black">6.2</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Server</span><span style="color:black">响应头域</span></p>
<p align="left"><span style="color:black">Server</span><span style="color:black">响应头包含处理请求的原始服务器的软件信息。此域能包含多个产品标识和注释，产品标识一般按照重要性排序。</span></p>
<p align="left"><span style="color:black">7</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">实体内容</span></p>
<p align="left"><span style="color:black">指在</span><span style="color:blue">头域结束空行</span><span style="color:black">后的所有内容，请求消息和响应消息都可以包含实体信息，实体可以是一个经过编码的字节流，它的编码方式由实体头域中的</span><span style="color:blue">Content-Encoding</span><span style="color:black">或</span><span style="color:blue">Content-Type</span><span style="color:black">定</span><span style="color:black">义，它的长度由</span><span style="color:blue">Content-Length</span><span style="color:black">或</span><span style="color:blue">Content-Range</span><span style="color:black">定义。</span></p>
<p align="left"><span style="color:black">8</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">实体头域</span></p>
<p align="left"><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style="color:black">实体头域描述实体的信息，实体头包括</span><span style="color:blue">Allow</span><span style="color:blue">、</span><span style="color:blue">Content- Base</span><span style="color:blue">、</span><span style="color:blue">Content-Encoding</span><span style="color:blue">、</span><span style="color:blue">Content-Language</span><span style="color:blue">、</span><span style="color:blue">
 Content-Length</span><span style="color:blue">、</span><span style="color:blue">Content-Location</span><span style="color:blue">、</span><span style="color:blue">Content-MD5</span><span style="color:blue">、</span><span style="color:blue">Content-Range</span><span style="color:blue">、</span><span style="color:blue">Content-Type</span><span style="color:blue">、</span><span style="color:blue">
 Etag</span><span style="color:blue">、</span><span style="color:blue">Expires</span><span style="color:blue">、</span><span style="color:blue">Last-Modified</span><span style="color:blue">、</span><span style="color:blue">extension-header</span><span style="color:blue">。</span><span style="color:blue">extension-header</span><span style="color:black">，允许客户端定义新的实体头，但是这些域可能无法被接受方识别。</span></p>
<p align="left"><span style="color:black">8.1</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Content-Type</span><span style="color:black">实体头</span></p>
<p align="left"><span style="color:black">Content-Type</span><span style="color:black">实体头用于向接收方指示实体的介质类型，指定</span><span style="color:blue">HEAD</span><span style="color:black">方法送到接收方的实体介质类型，或</span><span style="color:blue">GET</span><span style="color:black">方法发送的请求介质类型</span><span style="color:blue">Content-Range</span><span style="color:black">实体头</span></p>
<p align="left"><span style="color:black">8.2</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Content-Range</span></p>
<p align="left"><span style="color:black">指示了整个实体的长度。在服务器向客户返回一个部分响应，它必须描述响应覆盖的范围和整个实体长度。一般&#26684;式：</span></p>
<p align="left"><span style="color:black">Content-Range:bytes-unit&lt;</span><span style="color:black">空&#26684;</span><span style="color:black">&gt;first-byte-pos-last-byte-pos/entity-legth
</span></p>
<p align="left"><span style="color:black">　例如，传送头</span><span style="color:black">500</span><span style="color:black">个字节次字段的形式：</span><span style="color:black">Content-Range:bytes0- 499/1234</span><span style="color:black">如果一个</span><span style="color:black">http</span><span style="color:black">消息包含此节（例如，对范围请求的响应或对一系列范围的重叠请求），</span><span style="color:black">Content-Range</span><span style="color:black">表示传送的范围，</span></p>
<p align="left"><span style="color:black">8.3</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Content-Length</span></p>
<p align="left"><span style="color:black">表示实际传送的字节数。只有当浏览器使用持久</span><span style="color:black">HTTP</span><span style="color:black">连接时才需要这个数据。如果你想要利用持久连接的优势，可以把输出文档写入</span><span style="color:black"> ByteArrayOutputStram</span><span style="color:black">，完成后查看其大小，然后把该&#20540;放入</span><span style="color:black">Content-Length</span><span style="color:black">头，最后通过</span><span style="color:black">
 byteArrayStream.writeTo(response.getOutputStream()</span><span style="color:black">发送内容。</span></p>
<p align="left"><span style="color:black">8.4</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Allow</span></p>
<p align="left"><span style="color:black">服务器支持哪些请求方法（如</span><span style="color:black">GET</span><span style="color:black">、</span><span style="color:black">POST</span><span style="color:black">等）。</span></p>
<p align="left"><span style="color:black">8.5</span><span style="color:black">&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Content-Encoding</span></p>
<p align="left"><span style="color:black">文档的编码（</span><span style="color:black">Encode</span><span style="color:black">）方法。只有在解码之后才可以得到</span><span style="color:black">Content-Type</span><span style="color:black">头指定的内容类型。利用</span><span style="color:black">gzip</span><span style="color:black">压缩文档能够显着地减少</span><span style="color:black">HTML</span><span style="color:black">文档的</span><span style="color:black">下载时间。</span><span style="color:black">Java</span><span style="color:black">的</span><span style="color:black">GZIPOutputStream</span><span style="color:black">可以很方便地进行</span><span style="color:black">gzip</span><span style="color:black">压缩，但只有</span><span style="color:black">Unix</span><span style="color:black">上的</span><span style="color:black">Netscape</span><span style="color:black">和</span><span style="color:black">Windows</span><span style="color:black">上的</span><span style="color:black">IE
 4</span><span style="color:black">、</span><span style="color:black">IE 5</span><span style="color:black">才支持它。因此，</span><span style="color:black">Servlet</span><span style="color:black">应该通过查看</span><span style="color:black">Accept-Encoding</span><span style="color:black">头（即</span><span style="color:black">request.getHeader(&quot;Accept-
 Encoding&quot;)</span><span style="color:black">）检查浏览器是否支持</span><span style="color:black">gzip</span><span style="color:black">，为支持</span><span style="color:black">gzip</span><span style="color:black">的浏览器返回经</span><span style="color:black">gzip</span><span style="color:black">压缩的</span><span style="color:black">HTML</span><span style="color:black">页面，为其他浏览器返回普通页面。</span></p>
<p align="left"><span style="color:black">8.6</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">Expires</span></p>
<p align="left"><span style="color:black">一个条件</span><span style="color:black">GET</span><span style="color:black">，只有改动时间迟于指定时间的文档才会返回，否则返回一个</span><span style="color:black">304</span><span style="color:black">（</span><span style="color:black">Not Modified</span><span style="color:black">）状态。应该在什么时候认为文档已经过期，从而不再缓存它。</span></p>
<p align="left"><span style="color:black">9</span><span style="color:black">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span style="color:black">响应消息示例：</span></p>
<p align="left"><span style="color:black">HTTP/1.0 200 OK </span></p>
<p align="left"><span style="color:blue">Date:Mon,31Dec200104:25:57GMT </span></p>
<p align="left"><span style="color:green">Server:Apache/1.3.14(Unix) </span></p>
<p align="left"><span style="color:red">Content-type:text/html </span></p>
<p align="left"><span style="color:red">Last-modified:Tue,17Apr200106:46:28GMT </span>
</p>
<p align="left"><span style="color:red">Content-length:4359 </span></p>
<p align="left"><span style="color:red">Content-range:bytes554554-40279979/40279980
</span></p>
<p align="left"><span style="color:black">&nbsp;</span></p>
<p align="left"><span style="color:black">响应消息体…</span></p>
<p align="left"><span style="color:black">&nbsp;</span></p>
<p align="left"><span style="color:black">上例第一行表示</span><span style="color:black">HTTP</span><span style="color:black">服务端响应一个</span><span style="color:black">GET</span><span style="color:black">方法。绿色的部分表示响应头域的信息，兰色的部分表示通用头部分，红色的部分表示实体头域的信息</span></p>
</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>25</wp:post_id>
		<wp:post_date>2012-09-18 09:34:00</wp:post_date>
		<wp:post_date_gmt>2012-09-18 01:34:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ahttp%e5%8d%8f%e8%ae%ae%e6%a0%bc%e5%bc%8f%e8%af%a6%e7%bb%86%e8%af%b4%e6%98%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：简单了解HTTP消息头</title>
		<link>http://localhost/wp/?p=26</link>
		<pubDate>Tue, 18 Sep 2012 01:31:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=26</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:18px; color:#3366FF">转：简单了解HTTP消息头&nbsp;<a target="_blank" href="http://murray.cn/index.php/2008/09/what-is-http-header/">http://murray.cn/index.php/2008/09/what-is-http-header/</a><br>
</span></p>
<p><span style="font-size:18px; color:#3366FF"><br>
</span></p>
<p><span style="font-size:18px; color:#3366FF"><br>
</span></p>
<p><span style="font-size:18px; color:#3366FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 当我们设计一个通信协议时，“消息头/消息体”的分割方式是很常用的，消息头告诉对方这个消息是干什么的，消息体告诉对方 怎么干。HTTP传输的消息也是这样规定的，每一个HTTP包都分为HTTP头和HTTP体两部分，后者是可选的，而前者是必须的。每当我们打开一个网 页，在上面点击右键，选择“查看源<span style="text-decoration:underline"><strong><span style="font-weight:normal"><span style="text-decoration:none">文件</span></span></strong></span>”，这时看到的HTML代码就是HTTP的消息体，那么消息头又在哪呢？IE浏览器不让我们看到这部分，但我们可以
 通过截取数据包等方法看到它。</span></p>
<span style="font-size:18px; color:#3366FF">下面就来看一个简单的例子：<br>
</span>
<p><span style="font-size:18px; color:#3366FF">首先制作一个非常简单的网页，它的内容只有一行：</span></p>
<p><br>
<span style="font-size:18px; color:#3366FF"></span></p>
<p><span style="font-size:18px; color:#3366FF"></span><br>
</p>
<span style="font-size:18px; color:#3366FF"></span><pre name="code" class="html">&lt;html&gt;&lt;body&gt;hello world&lt;/body&gt;&lt;/html&gt;</pre><br>
<br>
把它放到WEB服务器上，比如IIS，然后用IE浏览器请求这个页面（http://localhost:8080/simple.htm），当我们请求这个页面时，浏览器实际做了以下四项工作：<br>
1 解析我们输入的地址，从中分解出协议名、主机名、端口、对象路径等部分，对于我们的这个地址，解析得到的结果如下：<br>
协议名：http<br>
主机名：localhost<br>
端口：8080<br>
对象路径：/simple.htm<br>
2 把以上部分结合本机自己的信息，封装成一个HTTP请求数据包<br>
3 使用TCP协议连接到主机的指定端口（localhost, 8080），并发送已封装好的数据包<br>
4 等待服务器返回数据，并解析返回数据，最后显示出来<br>
由截取到的数据包我们不难发现浏览器生成的HTTP数据包的内容如下：<br>
<pre name="code" class="html">GET /simple.htm HTTP/1.1&lt;CR&gt;
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/x-shockwave-flash, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*&lt;CR&gt;
Accept-Language: zh-cn&lt;CR&gt;
Accept-Encoding: gzip, deflate&lt;CR&gt;
User-Agent: Mozilla/4.0 (compatible; MSIE 6.0;?Windows?NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)&lt;CR&gt;
Host: localhost:8080&lt;CR&gt;
Connection: Keep-Alive&lt;CR&gt;
&lt; CR&gt;</pre><br>
<br>
为了显示清楚我把所有的回车的地方都加上了“&lt;CR&gt;”，注意最后还有一个空行加一个回车，这个空行正是HTTP规定的消息头和消息体的分界线，第一个空行以下的内容就是消息体，这个请求数据包是没有消息体的。<br>
消 息的第一行“GET”表示我们所使用的HTTP动作，其他可能的还有“POST”等，GET的消息没有消息体，而POST消息是有消息体的，消息体的内容 就是要POST的数据。后面/simple.htm就是我们要请求的对象，之后HTTP1.1表示使用的是HTTP1.1协议。<br>
第二行表示我们所用的浏览器能接受的Content-type，三四两行则是语言和编码信息，第五行显示出本机的相关系信息，包括浏览器类型、操作<span style="text-decoration:underline"><strong><span style="font-weight:normal"><span style="text-decoration:none">系统</span></span></strong></span>信息等，很多<span style="text-decoration:underline"><strong><span style="font-weight:normal"><span style="text-decoration:none">网站</span></span></strong></span>可以显示出你所使用的浏览器和操作系统版本，就是因为可以从这里获取到这些信息。<br>
第六行表示我们所请求的主机和端口，第七行表示使用Keep-Alive方式，即数据传递完并不立即关闭连接。<br>
服务器接收到这样的数据包以后会根据其内容做相应的处理，例如查找有没有“/simple.htm”这个对象，如果有，根据服务器的设置来决定如何处理，如果是HTM，则不需要什么复杂的处理，直接返回其内容即可。但在直接返回之前，还需要加上HTTP消息头。<br>
服务器发回的完整HTTP消息如下：<br>
<span style="font-family:Verdana,Geneva,Arial,sans-serif"></span><pre name="code" class="html">HTTP/1.1 200 OK&lt;CR&gt;
Server: Microsoft-IIS/5.1&lt;CR&gt;
X-Powered-By:?ASP.NET&lt;CR&gt;
Date: Fri, 03 Mar 2006 06:34:03 GMT&lt;CR&gt;
Content-Type: text/html&lt;CR&gt;
Accept-Ranges: bytes&lt;CR&gt;
Last-Modified: Fri, 03 Mar 2006 06:33:18 GMT&lt;CR&gt;
ETag: “5ca4f75b8c3ec61:9ee”&lt;CR&gt;
Content-Length: 37&lt;CR&gt;
&lt; CR&gt;
&lt; html&gt;&lt;body&gt;hello world&lt;/body&gt;&lt;/html&gt;</pre><br>
<br>
同样，我用“&lt;CR&gt;”来表示回车。可以看到，这个消息也是用空行切分成消息头和消息体两部分，消息体的部分正是我们前面写好的HTML代码。<br>
消息头第一行“HTTP/1.1”也是表示所使用的协议，后面的“200 OK”是HTTP返回代码，200就表示操作成功，还有其他常见的如404表示对象未找到，500表示服务器错误，403表示不能浏览目录等等。<br>
第 二行表示这个服务器使用的WEB服务器软件，这里是IIS 5.1。第三行是ASP.Net的一个附加提示，没什么实际用处。第四行是处理此请求的时间。第五行就是所返回的消息的content-type，浏览器 会根据它来决定如何处理消息体里面的内容，例如这里是text/html，那么浏览器就会启用HTML解析器来处理它，如果是image/jpeg，那么 就会使用JPEG的解码器来处理。<br>
消息头最后一行“Content-Length”表示消息体的长度，从空行以后的内容算起，以字节为单位，浏览器接收到它所指定的字节数的内容以后就会认为这个消息已经被完整接收了。<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>26</wp:post_id>
		<wp:post_date>2012-09-18 09:31:00</wp:post_date>
		<wp:post_date_gmt>2012-09-18 01:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9a%e7%ae%80%e5%8d%95%e4%ba%86%e8%a7%a3http%e6%b6%88%e6%81%af%e5%a4%b4</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>京郊周末可爬山地点对比</title>
		<link>http://localhost/wp/?p=27</link>
		<pubDate>Wed, 12 Sep 2012 08:31:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=27</guid>
		<description></description>
		<content:encoded><![CDATA[<table border="1" cellpadding="1" cellspacing="1" height="237" width="589">
<caption>京郊周末可爬山地点对比</caption>
<tbody>
<tr>
<th scope="col" align="center">名称</th>
<th scope="col" align="center">海拔高度</th>
<th scope="col" align="center">距天安门公共交通距离</th>
<th scope="col" align="center">预估总花费时间</th>
<th scope="col" align="center">备注</th>
</tr>
</tbody>
<tbody>
<tr>
<td><strong>雾灵山</strong></td>
<td>2118米</td>
<td><span id="blDis_0" class="km">164.1公里</span></td>
<td>1.5天</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>百花山</strong></td>
<td>1991米</td>
<td><span id="blDis_0" class="km">113.3公里</span></td>
<td>1.5天</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>云蒙山</strong></td>
<td>1414米</td>
<td><span id="blDis_0" class="km">90.9公里</span></td>
<td>1.5天</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>妙峰山</strong></td>
<td>1291米</td>
<td>50公里&#43; 无公共交通工具到达</td>
<td>×××</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>上方山</strong></td>
<td>860米</td>
<td><span id="blDis_0" class="km">80.4公里</span></td>
<td>1.5天</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>红螺寺</strong></td>
<td>812.9米</td>
<td><span id="blDis_0" class="km">69.2公里</span></td>
<td>1天</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>香山</strong></td>
<td>557米</td>
<td><span id="blDis_0" class="km">27.2公里</span></td>
<td>1天</td>
<td>&nbsp;</td>
</tr>
<tr>
<td><strong>景山公园</strong></td>
<td>88.7米</td>
<td><span id="blDis_0" class="km">3.0公里</span></td>
<td>0.5天</td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<p><br>
</p>
<p>附网络上详细介绍资料：</p>
<p></p>
<pre name="code" class="plain">北京附近爬山攻略

■雾灵山

　　难度指数：★★★★，东北方向，燕山山脉主峰，海拔2118米。

　　环境综合：每当云雾涌起时，云铺成路，人行在天，如入仙境。可来此穿越、宿营、探险。不过

在山中听不到鸟叫，不能不说有点遗憾。

　　交通指南：沿着京密公路，行车一个小时，过密云，在巨各庄右拐，还有69公里。海拔1000至

2000米

■百花山

　　难度指数：★★★，海拔1991米，山势险峻秀丽。

　　环境综合：这里夏季可见白云在山巅缭绕，山间数十里的缓坡，绿草如茵，各色野花姹紫嫣红。

　　空气状况：山区小气候，雨水丰沛。山间植物生长茂盛且品种繁多，据统计达700余种，因而又

有“天然植物园”之称，空气极佳。

　　交通指南：乘地铁至苹果园站下车，换326路汽车至河滩，那里有许多小公共汽车可送您到百花

山。

■云蒙山

　　难度指数：★★★，云蒙山位于京北燕山山脉，海拔1414米，距离北京约80公里，是目前距北京

最近的国家森林保护区。

　　环境综合：险、秀、奇、雄皆佳。山中水流终年不断，溪流在高山峡谷中急驰轰鸣，加上溪边片

片芦苇，造就出北国江南韵味，令人更觉秀美。

　　空气状况：气候凉爽宜人，空气中负氧离子含量极高，山中植被覆盖率达90%以上。云蒙山最炎

热的7月，平均温度为20℃，比避暑山庄还低。

　　交通指南：汽车出东直门走酒仙桥到牛栏山环岛，一直向北过怀柔县城，经西庄、河防口再向北

便是云蒙山。全程均为国道，行路甚易。

■妙峰山

　　难度指数：★★★，妙峰山为北京著名的“八顶”之一，主峰海拔1291米，距市中心55公里，为

距京城最近的千米高山。

　　环境综合：妙峰山是京郊一处集宗教朝圣、山地度假为一体的旅游胜地。山脚下的涧沟村是我国

的玫瑰之乡，培育千余亩妙峰玫瑰。海拔1000米以下

■上方山

　　难度指数：★★，位于房山区岳各庄乡距京70公里的上方山，有山峰12座，中天之柱是上方山最

高山峰，海拔860米，亦称“摘星索”。

　　环境综合：上方山有“南有苏杭，北有上方”的美誉。九大洞穴景观奇特，最著名的是“云水洞

”，洞中有108个自然景观。

　　交通指南：天桥乘917路到房山，转乘到上方山的车

■红螺寺

　　难度指数：★★，红螺山顶海拔812.9米，山前坡较为平缓，便于爬山游玩，而后坡陡峭，更适

于攀登探险。

　　环境综合：自然景观十分秀美。从山顶远望，但见一望无垠的华北大平原万里烟波，南望首都北

京的依稀可辨，密云水库浩瀚无垠，万里长城蜿蜒起伏，登临纵目，心旷神怡。

　　空气状况：约90万株各类树木，空气清新湿润，十分有益健康。

　　交通指南：东直门乘坐916路公共汽车至怀柔；宣武门乘坐游6路、游16路旅游专线车，或在前门

汽车站乘“怀柔一日游”旅游专线车直达。自驾车可从三元桥沿着京顺路行驶到怀柔县城，然后再顺

着怀丰公路北行，见到一座铁路桥左拐即可到达。

■香山

　　难度指数：★，鬼见愁是香山的主峰，又叫香炉峰，海拔557米，因山势陡峭、攀登不易而称鬼

见愁。

　　环境综合：香山都快被北京人爬烂了。每到周末，山脚下就停满了私家车，来这里爬山锻炼的人

多得要命。此地重峦叠嶂，清泉潺潺，共成28景，“西山晴雪”为燕京八景之一。

　　交通指南：在北京海淀区，东南距市中心20余公里。从积水潭地铁换乘331路终点站下，或在西

直门乘904路直达香山。

■景山公园

　　难度指数：★，景山中峰高44.6米(海拔高度为88.7米)，花不了多长时间就能登顶。

　　环境综合：到这里登山不如说是去体会一下北京的旧景。位于故宫的后面，原是明、清两朝皇宫

的一部分，是旧北京内城的中心，也是当时最高的地方。

　　乘车路线：5路景街下，58、60、111路景街下车，111、819路景山下车，101、103、103快、109

、812、814路故宫下车。京郊采摘周末开放大巴京郊游双休日重开。</pre><br>
<br>
<p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>27</wp:post_id>
		<wp:post_date>2012-09-12 16:31:00</wp:post_date>
		<wp:post_date_gmt>2012-09-12 08:31:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e4%ba%ac%e9%83%8a%e5%91%a8%e6%9c%ab%e5%8f%af%e7%88%ac%e5%b1%b1%e5%9c%b0%e7%82%b9%e5%af%b9%e6%af%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>Tomcat手动配置简述【查询留存】</title>
		<link>http://localhost/wp/?p=28</link>
		<pubDate>Wed, 12 Sep 2012 02:59:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=28</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一、设置JAVA的环境变量JAVA_HOME</p>
<p>略</p>
<p>二、设置Tomcat的环境变量</p>
<p>一次性全配置了</p>
<p>Tomcat的根目录，例如【E:tomcat-6.0.35】</p>
<p>创建下列环境变量：</p>
<p>CATALINA_HOME: E:tomcat-6.0.35<br>
CATALINA_BASE: E:tomcat-6.0.35<br>
TOMCAT_HOME: E:tomcat-6.0.35</p>
<p><br>
然后修改环境变量中的CLASSPATH，把tomat安装目录下的commonlib下的servlet.jar追加到classpath中去<br>
l如：CATALINA_HOME%commonlibservlet.jar;</p>
<p>三、注册为系统服务<br>
在命令行里进入到下载的免安装版的tomcat目录下的bin目录 <br>
在此bin目录下运行 <br>
<span style="color:#0800">service.bat install </span><br>
此时就能把免安装版的tomcat注册为系统服务，</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2012-09-12 10:59:00</wp:post_date>
		<wp:post_date_gmt>2012-09-12 02:59:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>tomcat%e6%89%8b%e5%8a%a8%e9%85%8d%e7%bd%ae%e7%ae%80%e8%bf%b0%e3%80%90%e6%9f%a5%e8%af%a2%e7%95%99%e5%ad%98%e3%80%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>windows7系统，在【我的电脑】上右键【管理】项不可用的解决方法</title>
		<link>http://localhost/wp/?p=29</link>
		<pubDate>Mon, 10 Sep 2012 19:10:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=29</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px; color:#3366ff">转自：</span><a href="http://zhidao.baidu.com/question/170464392.html"><span style="font-size:24px; color:#3366ff">http://zhidao.baidu.com/question/170464392.html</span></a></p>
<p><span style="font-size:24px; color:#3366ff">windows7系统，在【我的电脑】上右键【管理】项不可用的解决方法</span></p>
<p><span style="font-size:24px; color:#3366ff">复制下面内容，放入记事本，另存为（**.reg)文件，双击导入即可。</span></p>
<pre class="plain" name="code">Windows Registry Editor Version 5.00
[HKEY_CLASSES_ROOTCLSID{20D04FE0-3AEA-1069-A2D8-08002B30309D}shellManage]
@=hex(2):40,00,25,00,73,00,79,00,73,00,74,00,65,00,6d,00,72,00,6f,00,6f,00,74,
  00,25,00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,
  79,00,63,00,6f,00,6d,00,70,00,75,00,74,00,2e,00,64,00,6c,00,6c,00,2c,00,2d,
  00,34,00,30,00,30,00,00,00
&quot;MUIVerb&quot;=hex(2):40,00,25,00,73,00,79,00,73,00,74,00,65,00,6d,00,72,00,6f,00,
  6f,00,74,00,25,00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,
  00,6d,00,79,00,63,00,6f,00,6d,00,70,00,75,00,74,00,2e,00,64,00,6c,00,6c,00,
  2c,00,2d,00,34,00,30,00,30,00,00,00
&quot;SuppressionPolicy&quot;=dword:4000003c
&quot;HasLUAShield&quot;=&quot;&quot;
[HKEY_CLASSES_ROOTCLSID{20D04FE0-3AEA-1069-A2D8-08002B30309D}shellManagecommand]
@=hex(2):25,00,77,00,69,00,6e,00,64,00,69,00,72,00,25,00,5c,00,73,00,79,00,73,
  00,74,00,65,00,6d,00,33,00,32,00,5c,00,6d,00,6d,00,63,00,2e,00,65,00,78,00,
  65,00,20,00,2f,00,73,00,20,00,25,00,77,00,69,00,6e,00,64,00,69,00,72,00,25,
  00,5c,00,73,00,79,00,73,00,74,00,65,00,6d,00,33,00,32,00,5c,00,63,00,6f,00,
  6d,00,70,00,6d,00,67,00,6d,00,74,00,2e,00,6d,00,73,00,63,00,00,00</pre>
<p><br>
&nbsp;</p>
<p>&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>29</wp:post_id>
		<wp:post_date>2012-09-11 03:10:00</wp:post_date>
		<wp:post_date_gmt>2012-09-10 19:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows7%e7%b3%bb%e7%bb%9f%ef%bc%8c%e5%9c%a8%e3%80%90%e6%88%91%e7%9a%84%e7%94%b5%e8%84%91%e3%80%91%e4%b8%8a%e5%8f%b3%e9%94%ae%e3%80%90%e7%ae%a1%e7%90%86%e3%80%91%e9%a1%b9%e4%b8%8d%e5%8f%af%e7%94%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>.java文件的ANSI编码转换为UTF-8编码</title>
		<link>http://localhost/wp/?p=30</link>
		<pubDate>Fri, 07 Sep 2012 01:07:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=30</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px; color:#3333ff">.java文件的ANSI编码转换为UTF-8编码，如下：</span></p>
<p>&nbsp;</p>
<pre class="java" name="code">/*
 * 创建于：2012-09-07
 * 
 * 功能：转换ANSI【JAVA中GBK编码】编码的.java源文件为UTF-8格式，未处理异常，运行前确认目录存在，且原编码格式为ANSI
 * 
 * @author bwgang
 */
package bwgang;


import java.io.*;
import java.util.Vector;


public class AnsiToUtf8 {


	public static void main(String[] args) throws UnsupportedEncodingException, IOException {
		
		ReadFileName tmp=new ReadFileName();
		Vector&lt;String&gt; vec=tmp.FileNameOftype(&quot;E:\workspace\Interface_JAVA\src&quot;, &quot;.java&quot;);
		
		for (int i=0;i&lt;vec.size(); i++){
			System.out.println(vec.get(i));
			change(vec.get(i));
		}

	}
	
	
	public static void change(String filepath) throws UnsupportedEncodingException, IOException{
		BufferedReader buf = null;
		OutputStreamWriter pw=null;		
		String str = null;
		String allstr=&quot;&quot;;
		
		//用于输入换行符的字节码
		byte[] c=new byte[2];
        c[0]=0x0d;
        c[1]=0x0a;
        String t=new String(c);
        
        buf=new BufferedReader(new InputStreamReader(new FileInputStream(filepath), &quot;GBK&quot;));
		while((str = buf.readLine()) != null){
			allstr=allstr+str+t;
		}
		
		buf.close();		

		pw =new OutputStreamWriter(new FileOutputStream(filepath),&quot;UTF-8&quot;);
		pw.write(allstr); 
		pw.close();
	}
	
}







class ReadFileName {

	//存储遍历获取的所有文件名
	private  Vector&lt;String&gt; filelist = new Vector&lt;String&gt;(); 
	
	
		//遍历指定路径下的所有文件
		//以ArrayList存储于filelist中	
		private  void RefreshFileList(String strpath) { 
	        File dir = new File(strpath); 
	        File[] files = dir.listFiles(); 
	        
	        
	        if (files == null) 
	            return; 
	        for (int i = 0; i &lt; files.length; i++) { 
	            if (files[i].isDirectory()) { 
	                RefreshFileList(files[i].getAbsolutePath()); 
	            } else { 
	                //String strFileName = files[i].getAbsolutePath().toLowerCase();	             
	                filelist.add(files[i].getAbsolutePath());                    
	            }     
	        }      
}
  
	    //过滤当前目录下的指定后缀名的文件
	     //返回Vector
	    public  Vector&lt;String&gt; FileNameOftype(String strpath2,String filetype){
	    		String strfilename=new String();
	    		Vector&lt;String&gt; filelistofjava= new Vector&lt;String&gt;(); 
		    		
	    		//读取指定路径下的所有文件
	    		RefreshFileList(strpath2);		

	    		for (int i = 0; i &lt; filelist.size(); i++) {
	    			strfilename=filelist.get(i).toString();
	    			strfilename=strfilename.substring(strfilename.length()-5, strfilename.length());
	    			
		    			if (strfilename.equals(filetype)) {
		    				filelistofjava.add(filelist.get(i));	    					    				
		    			}		    			
	    			}
	    		return filelistofjava;
	    	}

}
	
	
</pre>
<p><br>
&nbsp;</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>30</wp:post_id>
		<wp:post_date>2012-09-07 09:07:00</wp:post_date>
		<wp:post_date_gmt>2012-09-07 01:07:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e6%96%87%e4%bb%b6%e7%9a%84ansi%e7%bc%96%e7%a0%81%e8%bd%ac%e6%8d%a2%e4%b8%bautf-8%e7%bc%96%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：Selenium rc基本用法部分</title>
		<link>http://localhost/wp/?p=31</link>
		<pubDate>Tue, 28 Aug 2012 02:01:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=31</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自网络，以前网上找的资料，记录的。忘记出处了。</p>
<span style="font-size:18px; color:#3333FF">一.文本框Textbox<br>
<br>
　　1.向文本框中填写信息<br>
<br>
　　type<br>
<br>
　　eg.selenium.type;<br>
<br>
　　2.取出某个文本框中已经填写的信息<br>
<br>
　　java.lang.StringgetValue<br>
<br>
　　eg.selenium.getValue;<br>
<br>
　　3.判断某文本框是否可编辑<br>
<br>
　　booleanisEditable<br>
<br>
　　eg.selenium.isEditable;<br>
<br>
　　二．下拉框Dropdownlist<br>
<br>
　　1.向下拉框中选&#20540;<br>
<br>
　　select<br>
<br>
　　eg.selenium.select;<br>
<br>
　　2.取出某个下拉框中已经选择的&#20540;<br>
<br>
　　java.lang.StringgetSelectedLabel<br>
<br>
　　eg.selenium.getSelectedLabel<br>
<br>
　　3.取出某个下拉框中所有的选项<br>
<br>
　　java.lang.String[]getSelectOptionsgetSelectOptionsgetSelectOptions<br>
<br>
　　eg.selenium.getSelectOptions<br>
<br>
　　三．按钮或链接Button&amp;Link<br>
<br>
　　单击<br>
<br>
　　click<br>
<br>
　　eg.selenium.click;<br>
<br>
　　selenium.click;<br>
<br>
　　四．单选框或多选框RadioBox&amp;CheckBox<br>
<br>
　　1.选择<br>
<br>
　　check<br>
<br>
　　eg.selenium.check;<br>
<br>
　　1.不选<br>
<br>
　　uncheck<br>
<br>
　　eg.selenium.uncheck;<br>
<br>
　　2.判断是否选择<br>
<br>
　　booleanisChecked<br>
<br>
　　eg.selenium.isChecked;<br>
<br>
　　五．表&#26684;Table<br>
<br>
　　1.取出表中某个单元&#26684;的&#20540;,下标从0开始<br>
<br>
　　java.lang.StringgetTable<br>
<br>
　　eg.selenium.getTable;<br>
<br>
　　六．其他其他其他其他others<br>
<br>
　　1.取某个元素的特定属性&#20540;<br>
<br>
　　java.lang.StringgetAttribute<br>
<br>
　　eg.selenium.getAttribute<br>
<br>
　　2．取某元素的text&#20540;<br>
<br>
　　java.lang.StringgetText<br>
<br>
　　eg.selenium.getText<br>
<br>
　　3.取当前页面的Title<br>
<br>
　　java.lang.StringgetTitle<br>
<br>
　　eg.selenium.getTitle<br>
<br>
　　4.判断页面是否有特定的元素<br>
<br>
　　booleanisElementPresent<br>
<br>
　　eg.booleanisElementPresent<br>
<br>
　　5.判断页面是否有特定文字<br>
<br>
　　booleanisTextPresent<br>
<br>
　　eg.selenium.isTextPresent<br>
<br>
　　eg.selenium.isVisible<br>
<br>
　　7.模拟Keyup事件<br>
<br>
　　keyUp<br>
<br>
　　eg.selenium.keyUp;<br>
<br>
　　8.打开一个url,相对或绝对<br>
<br>
　　open<br>
<br>
　　eg.selenium.open;<br>
<br>
　　9.刷新页面<br>
<br>
　　refresh<br>
<br>
　　eg.selenium.refresh;<br>
<br>
　　10.控制每步操作间隔的时间，milliseconds<br>
<br>
　　setSpeed<br>
<br>
　　eg.selenium.setSpeed;<br>
<br>
　　11.开始一个Seleniumsession<br>
<br>
　　start<br>
<br>
　　eg.selenium.start;<br>
<br>
　　12.结束测试测试测试测试Session<br>
<br>
　　stop<br>
<br>
　　eg.selenium.stop;<br>
<br>
　　13.等待新页面加载<br>
<br>
　　waitForPageToLoad<br>
<br>
　　selenium.waitForPageToLoad;<br>
<br>
　　14.页面最大化<br>
<br>
　　windowMaximize<br>
<br>
　　eg.selenium.windowMaximize;</span><br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>31</wp:post_id>
		<wp:post_date>2012-08-28 10:01:00</wp:post_date>
		<wp:post_date_gmt>2012-08-28 02:01:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9aselenium-rc%e5%9f%ba%e6%9c%ac%e7%94%a8%e6%b3%95%e9%83%a8%e5%88%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>【转】Selenium WebDriver的简单操作说明</title>
		<link>http://localhost/wp/?p=32</link>
		<pubDate>Thu, 23 Aug 2012 17:39:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=32</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">转自网络</span>:</p>
<p></p>
<h4>1.打开一个测试浏览器</h4>
<p></p>
<p>对浏览器进行操作首先需要打开一个浏览器，接下来才能对浏览器进行操作。</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p><a name="OLE_LINK20"></a><a name="OLE_LINK19">import java.io.File;</a></p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxBinary;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>importorg.openqa.selenium.ie.InternetExplorerDriver;</p>
<p>&nbsp;</p>
<p>public class OpenBrowsers {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //打开默认路径的firefox</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver diver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //打开指定路径的firefox,方法1</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\MozillaFirefox\firefox.exe&quot;);
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver dr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //打开指定路径的firefox,方法2</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File pathToFirefoxBinary = newFile(&quot;D:\Program Files\Mozilla Firefox\firefox.exe&quot;);&nbsp;
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FirefoxBinary firefoxbin = newFirefoxBinary(pathToFirefoxBinary);&nbsp;
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver driver1 = newFirefoxDriver(firefoxbin,null);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //打开ie</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver ie_driver = new InternetExplorerDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //打开chrome</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.chrome.driver&quot;,&quot;D:\chromedriver.exe&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.chrome.bin&quot;,</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;C:\Documents and Settings\gongjf\Local Settings&quot;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&#43;&quot;\ApplicationData\Google\Chrome\Application\chrome.exe&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<h4>2.打开1个具体的url</h4>
<p>打开一个浏览器后，我们需要跳转到特定的url下，看下面代码：</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class OpenUrl {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String []args){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;http://www.51.com&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdriver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用get方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.get(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用navigate方法，然后再调用to方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.navigate().to(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>&nbsp;</p>
<h4>3.如何关闭浏览器</h4>
<p>测试完成后，需要关闭浏览器</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class CloseBrowser {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String []args){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;http://www.51.com&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdriver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.get(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用quit方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.quit();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //用close方法&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.close();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>&nbsp;</p>
<h4>4.如何返回当前页面的url和title</h4>
<p>有时候我们需要返回当前页面的url或者title做一些验证性的操作等。代码如下：</p>
<p><strong>Java代码</strong></p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class GetUrlAndTitle {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String []args){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;http://www.google.com&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdriver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.get(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //得到title</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringtitle = driver.getTitle();</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //得到当前页面url</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringcurrentUrl = driver.getCurrentUrl();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //输出title和currenturl</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(title&#43;&quot;n&quot;&#43;currentUrl);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>&nbsp;</p>
<h4>5.其他方法</h4>
<p>getWindowHandle() &nbsp;&nbsp; 返回当前的浏览器的窗口句柄</p>
<p>getWindowHandles()&nbsp; 返回当前的浏览器的所有窗口句柄</p>
<p>getPageSource()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;返回当前页面的源码</p>
<p>&nbsp;</p>
<p>从上面代码可以看出操作浏览器的主要方法都来自org.openqa.selenium.WebDriver这个接口中。看了一下源代码这些方法都是在org.openqa.selenium.remote.RemoteWebDriver这个类中实现的，然后不同浏览的driver类继承RemoteWebDriver。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>C&nbsp; 定位页面元素</h1>
<p>selenium-webdriver提供了强大的元素定位方法，支持以下三种方法。</p>
<p>单个对象的定位方法</p>
<p>多个对象的定位方法</p>
<p>层级定位&nbsp;</p>
<p>定位单个元素</p>
<p>在定位单个元素时,selenium-webdriver提示了如下一些方法对元素进行定位。</p>
<p>&nbsp;</p>
<p>&nbsp;By.className(className))&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;By.cssSelector(selector)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;By.id(id)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;By.linkText(linkText)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;By.name(name)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;By.partialLinkText(linkText) </p>
<p>&nbsp;By.tagName(name)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;By.xpath(xpathExpression)&nbsp;&nbsp; </p>
<p>&nbsp;</p>
<p>注意：selenium-webdriver通过findElement()findElements()等find方法调用&quot;By&quot;对象来定位 和查询元素。By类只是提供查询的方式进行分类。findElement返回一个元素对象否则抛出异常，findElements返回符合条件的元素 List，如果不存在符合条件的就返回一个空的list。</p>
<h4>1.使用className进行定位</h4>
<p>当所定位的元素具有class属性的时候我们可以通过classname来定位该元素。</p>
<p>下面的例子定位了51.com首页上class为&quot;username&quot;的li。</p>
<p><strong>Java代码</strong></p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.By;</p>
<p>&nbsp;</p>
<p>public class ByClassName {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;public static void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WebDriver driver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WebElement element =driver.findElement(By.className(&quot;username&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(element.getTagName());</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>输出结果：</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>Li</p>
<h4>2.使用id属性定位</h4>
<p>51.com首页的帐号输入框的html代码如下：</p>
<p><strong>Java代码</strong></p>
<p>&lt;input id=&quot;passport_51_user&quot;type=&quot;text&quot; value=&quot;&quot; tabindex=&quot;1&quot; title=&quot;用户名/彩虹号/邮箱&quot;
</p>
<p>name=&quot;passport_51_user&quot;&gt;</p>
<p>&nbsp;</p>
<p>在下面的例子中用id定位这个输入框，并输出其title,借此也可以验证代码是否工作正常。</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class ByUserId {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @param args</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //TODO Auto-generated method stub</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElementelement = dr.findElement(By.id(&quot;passport_51_user&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(element.getAttribute(&quot;title&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p><a name="OLE_LINK4"></a><a name="OLE_LINK3">输出结果：</a></p>
<p>&nbsp;<strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>用户名/彩虹号/邮箱</p>
<p>&nbsp;</p>
<h4>3.使用name属性定位</h4>
<p>51.com首页的帐号输入框的html代码如下：</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p>&lt;input id=&quot;passport_51_user&quot;type=&quot;text&quot; value=&quot;&quot; tabindex=&quot;1&quot; title=&quot;用户名/彩虹号/邮箱&quot;
</p>
<p>name=&quot;passport_51_user&quot;&gt;</p>
<p>&nbsp;</p>
<p>使用name定位</p>
<p><strong>&nbsp;</strong></p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class ByUserId {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @param args</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //TODO Auto-generated method stub</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElemente = dr.findElement(By.name(&quot;passport_51_user&quot;));&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(element.getAttribute(&quot;title&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>输出结果：</p>
<p>&nbsp;<strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>用户名/彩虹号/邮箱</p>
<p>&nbsp;</p>
<h4>4.使用css属性定位</h4>
<p>51.com首页的帐号输入框的html代码如下：</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>&lt;input id=&quot;passport_51_user&quot;type=&quot;text&quot; value=&quot;&quot; tabindex=&quot;1&quot; title=&quot;用户名/彩虹号/邮箱&quot;
</p>
<p>name=&quot;passport_51_user&quot;&gt;</p>
<p>&nbsp;</p>
<p>使用css定位</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>WebElement e1 =dr.findElement(By.cssSelector(&quot;#passport_51_user&quot;));</p>
<p>&nbsp;</p>
<h4>5.使用 XPATH定位</h4>
<p>51.com首页的帐号输入框的html代码如下：</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>&lt;input id=&quot;passport_51_user&quot;type=&quot;text&quot; value=&quot;&quot; tabindex=&quot;1&quot; title=&quot;用户名/彩虹号/邮箱&quot;
</p>
<p>name=&quot;passport_51_user&quot;&gt;</p>
<p>&nbsp;</p>
<p>通过xpath查找：</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>WebElement element=driver.findElement(By.xpath(&quot;//input[@id=' passport_51_user ']&quot;));</p>
<p>&nbsp;</p>
<h4>6.使用其他方式定位</h4>
<p>在定位link元素的时候，可以使用link和link_text属性；</p>
<p>另外还可以使用tag_name属性定位任意元素；</p>
<h4>7.定位多个元素</h4>
<p>上面提到findElements()方法可以返回一个符合条件的元素List组。看下面例子。</p>
<p><strong>Java代码</strong></p>
<p>import java.io.File;</p>
<p>import java.util.List;</p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.firefox.FirefoxBinary;</p>
<p>import org.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class FindElementsStudy {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver&nbsp; driver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //定位到所有&lt;input&gt;标签的元素，然后输出他们的id</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;WebElement&gt;element = driver.findElements(By.tagName(&quot;input&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(WebElement e : element){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(e.getAttribute(&quot;id&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.quit();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>&nbsp;</p>
<p>输出结果：</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>passport_cookie_login</p>
<p>gourl</p>
<p>passport_login_from</p>
<p>passport_51_user</p>
<p>passport_51_password</p>
<p>passport_qq_login_2</p>
<p>btn_reg</p>
<p>passport_51_ishidden</p>
<p>passport_auto_login</p>
<p>&nbsp;</p>
<p>上面的代码返回页面上所有input对象</p>
<p>&nbsp;</p>
<h4>8.层级定位</h4>
<p>层级定位的思想是先定位父元素，然后再从父元素中精确定位出其我们需要选取的子元素。</p>
<p>层级定位一般的应用场景是无法直接定位到需要选取的元素，但是其父元素比较容易定位，通过定位父元素再遍历其子元素选择需要的目标元素，或者需要定位某个元素下所有的子元素。</p>
<p>下面的代码演示了如何使用层级定位class为&quot;login&quot;的div，然后再取得它下面的所有label，并打印出他们的文本</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p><a name="OLE_LINK5">import java.io.File;</a></p>
<p>importjava.util.List;</p>
<p>importorg.openqa.selenium.By;</p>
<p>importorg.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.firefox.FirefoxBinary;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>publicclass LayerLocator {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public static void main(String[] args){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver&nbsp; driver = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //定位class为&quot;login&quot;的div，然后再取得它下面的所有label，并打印出他们的&#20540;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElement element =driver.findElement(By.className(&quot;login&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;List&lt;WebElement&gt; el =element.findElements(By.tagName(&quot;label&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;for(WebElement e : el)</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(e.getText());</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p>}</p>
<p>输出结果：</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>帐号：</p>
<p>密码：</p>
<p>隐身</p>
<p>&nbsp;</p>
<h1>&nbsp;D&nbsp;&nbsp;如何对页面元素进行操作</h1>
<p>找到页面元素后，怎样对页面进行操作呢？我们可以根据不同的类型的元素来进行一一说明。</p>
<h4>1. 输入框（text field or textarea）</h4>
<p>&nbsp;找到输入框元素：</p>
<p>WebElement element =driver.findElement(By.id(&quot;passwd-id&quot;));</p>
<p>在输入框中输入内容：</p>
<p>element.sendKeys(“test”);</p>
<p>将输入框清空：</p>
<p>element.clear();</p>
<p>获取输入框的文本内容：</p>
<p>element.getText();</p>
<p>&nbsp;</p>
<h4>2. 下拉选择框(Select)</h4>
<p>找到下拉选择框的元素：</p>
<p>Select select = newSelect(driver.findElement(By.id(&quot;select&quot;)));</p>
<p>&nbsp;</p>
<p>选择对应的选择项：</p>
<p>select.selectByVisibleText(“mediaAgencyA”);</p>
<p>或</p>
<p>select.selectByValue(“MA_ID_001”);</p>
<p>&nbsp;</p>
<p>不选择对应的选择项：</p>
<p>select.deselectAll();</p>
<p>select.deselectByValue(“MA_ID_001”);</p>
<p>select.deselectByVisibleText(“mediaAgencyA”);</p>
<p>或者获取选择项的&#20540;：</p>
<p>select.getAllSelectedOptions();</p>
<p>select.getFirstSelectedOption();</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>对下拉框进行操作时首先要定位到这个下拉框，new 一个Selcet对象，然后对它进行操作&nbsp;</p>
<h4>3. 单选项(Radio Button)</h4>
<p>找到单选框元素：</p>
<p>WebElement bookMode =driver.findElement(By.id(&quot;BookMode&quot;));</p>
<p>选择某个单选项：</p>
<p>bookMode.click();</p>
<p>清空某个单选项：</p>
<p>bookMode.clear();</p>
<p>判断某个单选项是否已经被选择：</p>
<p>bookMode.isSelected();</p>
<h4>4. 多选项(checkbox)</h4>
<p>多选项的操作和单选的差不多：</p>
<p>WebElement checkbox=driver.findElement(By.id(&quot;myCheckbox.&quot;));</p>
<p>checkbox.click(); </p>
<p>checkbox.clear();</p>
<p>checkbox.isSelected();</p>
<p>checkbox.isEnabled();</p>
<h4>5. 按钮(button)</h4>
<p>找到按钮元素：</p>
<p>WebElement saveButton =driver.findElement(By.id(&quot;save&quot;));</p>
<p>点击按钮：</p>
<p>saveButton.click();</p>
<p>判断按钮是否enable:</p>
<p>&nbsp;</p>
<p>saveButton.isEnabled ();</p>
<h4>6. 左右选择框</h4>
<p>也就是左边是可供选择项，选择后移动到右边的框中，反之亦然。例如：</p>
<p>Select lang = new Select(driver.findElement(By.id(&quot;languages&quot;)));</p>
<p>lang.selectByVisibleText(“English”);</p>
<p>WebElement addLanguage=driver.findElement(By.id(&quot;addButton&quot;));</p>
<p>addLanguage.click();</p>
<h4>7. 弹出对话框(Popup dialogs)</h4>
<p>Alert alert = driver.switchTo().alert();</p>
<p>alert.accept();</p>
<p>alert.dismiss();</p>
<p>alert.getText();</p>
<p>&nbsp;</p>
<p>后面有具体的例子解释~</p>
<h4>8. 表单(Form)</h4>
<p>Form中的元素的操作和其它的元素操作一样，对元素操作完成后对表单的提交可以：</p>
<p>WebElement approve =driver.findElement(By.id(&quot;approve&quot;));</p>
<p>approve.click();</p>
<p>或</p>
<p>approve.submit();//只适合于表单的提交</p>
<h4>9. 上传文件 (Upload File)</h4>
<p>上传文件的元素操作：</p>
<p>WebElement adFileUpload = driver.findElement(By.id(&quot;WAP-upload&quot;));</p>
<p>String filePath =&quot;C:test\uploadfile\media_ads\test.jpg&quot;;</p>
<p>adFileUpload.sendKeys(filePath);</p>
<h4>10.拖拉(Drag andDrop)</h4>
<p>WebElement element=driver.findElement(By.name(&quot;source&quot;));</p>
<p>WebElement target = driver.findElement(By.name(&quot;target&quot;));</p>
<p>&nbsp;</p>
<p>(new Actions(driver)).dragAndDrop(element,target).perform();</p>
<p>&nbsp;</p>
<h4>11.导航 (Navigationand History)</h4>
<p>打开一个新的页面：</p>
<p>&nbsp;driver.navigate().to(&quot;http://www.example.com&quot;);</p>
<p>&nbsp;</p>
<p>通过历史导航返回原页面：</p>
<p>driver.navigate().forward();</p>
<p>driver.navigate().back();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<h1>E&nbsp; iframe的处理</h1>
<p>有时候我们在定位一个页面元素的时候发现一直定位不了，反复检查自己写的定位器没有任何问题，代码也没有任何问题。这时你就要看一下这个页面元素是否在一个iframe中，这可能就是找不到的原因之一。如果你在一个default content中查找一个在iframe中的元素，那肯定是找不到的。反之你在一个iframe中查找另一个iframe元素或default content中的元素，那必然也定位不到。</p>
<p>selenium webdriver中提供了进入一个iframe的方法：</p>
<p>WebDriverorg.openqa.selenium.WebDriver.TargetLocator.frame(String nameOrId)</p>
<p>也提供了一个返回default content的方法：</p>
<p>WebDriver org.openqa.selenium.WebDriver.TargetLocator.defaultContent()</p>
<p>这样使我们面对iframe时可以轻松应对。</p>
<p>以下面的html代码为例，我们看一下处现iframe。</p>
<p>&nbsp;</p>
<p><strong>Html代码</strong></p>
<p>&nbsp;</p>
<p>main.html</p>
<p>&nbsp;</p>
<p>&lt;html&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;head&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;FrameTest&lt;/title&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/head&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;body&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;divid = &quot;id1&quot;&gt;this is a div!&lt;/div&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;iframe id = &quot;frame&quot;&nbsp;frameborder=&quot;0&quot; scrolling=&quot;no&quot;style=&quot;left:0;position:absolute;&quot; src =&quot;frame.html&quot;&gt;&lt;/iframe&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>frame.html</p>
<p>&nbsp;</p>
<p>&lt;html&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;head&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;this is a frame!&lt;/title&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/head&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;body&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;divid = &quot;div1&quot;&gt;this is a div，too!&lt;/div&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;label&gt;input:&lt;/label&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;inputid = &quot;input1&quot;&gt;&lt;/input&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class FameStudy {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;\Your\Path\to\main.html&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(url);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //在defaultcontent定位id=&quot;id1&quot;的div</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;id1&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //此时，没有进入到id=&quot;frame&quot;的frame中时，以下两句会报错</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;div1&quot;));//报错</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;input1&quot;));//报错</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //进入id=&quot;frame&quot;的frame中，定位id=&quot;div1&quot;的div和id=&quot;input1&quot;的输入框。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.switchTo().frame(&quot;frame&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;div1&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;input1&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //此时，没有跳出frame，如果定位defaultcontent中的元素也会报错。</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;id1&quot;));//报错</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //跳出frame,进入defaultcontent;重新定位id=&quot;id1&quot;的div</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.switchTo().defaultContent();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;id1&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>小结：</strong></p>
<p><strong>switch_to</strong>方法会new1个TargetLocator对象，使用该对象的frame方法可以将当前识别的”主体”移动到需要定位的frame上去。&nbsp;
</p>
<h1>F 如何得到弹出窗口</h1>
<p>在selenium 1.X里面得到弹出窗口是一件比较麻烦的事，特别是新开窗口没有id、name的时候。在selenium webdriver中得到新开窗口相对简单的多，它无关新开窗口的id、name等属性。以下面的html为例：</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>Html代码</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;span style=&quot;white-space: normal;background-color: #ffffff;&quot;&gt;test.html&lt;/span&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;head&gt;&lt;title&gt;Test Popup Window&lt;/title&gt;&lt;/head&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;body&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;a id = &quot;51&quot; href = &quot;http://www.51.com/&quot; target =&quot;_blank&quot;&gt;Let's go!&lt;/a&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/body&gt;</p>
<p>&nbsp;</p>
<p>&lt;/html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>下面的代码演示了如何去得到弹出的新窗口</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>import java.util.Iterator;</p>
<p>import java.util.Set;</p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class PopupWindowTest {</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\Mozilla Firefox\firefox.exe&quot;);&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl =&quot;\Your\Path\to\main.html&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(url);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;51&quot;)).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //得到当前窗口的句柄</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; StringcurrentWindow = dr.getWindowHandle();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //得到所有窗口的句柄</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set&lt;String&gt;handles = dr.getWindowHandles();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Iterator&lt;String&gt;it = handles.iterator();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while(it.hasNext()){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if(currentWindow== it.next())&nbsp; continue;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.switchTo().window(it.next());</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>输出结果：</p>
<p>&nbsp;</p>
<p>title,url = 51.com 真人配对玩游戏,http://www.51.com/</p>
<p>&nbsp;</p>
<p>小结：</p>
<p>&nbsp;</p>
<p>捕获或者说定位弹出窗口的关键在于获得弹出窗口的句柄。（</p>
<p>在上面的代码里，使用windowhandle方法来获取当前浏览器窗口的句柄，使用了windowhandles方法获取所有弹出的浏览器窗口的句柄，然后通过排除当前句柄的方法来得到新开窗口的句柄。</p>
<p>在获取新弹出窗口的句柄后，使用switchto.window(newwindow_handle)方法，将新窗口的句柄作为参数传入既可捕获到新窗口了。</p>
<p>如果想回到以前的窗口定位元素，那么再调用1次switchto.window方法，传入之前窗口的句柄既可达到目的。</p>
<p>&nbsp;</p>
<h1>G&nbsp; 如何处理alert、confirm、prompt对话框</h1>
<p>alert、confirm、prompt这样的js对话框在selenium1.X时代也是难啃的骨头，常常要用autoit来帮助处理。</p>
<p>试用了一下selenium webdriver中处理这些对话框十分方便简洁</p>
<p>&nbsp;</p>
<p><strong>Html代码</strong></p>
<p>&nbsp;</p>
<p>Dialogs.html&nbsp;&nbsp;</p>
<p>&nbsp;</p>
<p>&lt;html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;head&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;Alert&lt;/title&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/head&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;body&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;input id = &quot;alert&quot; value = &quot;alert&quot; type =&quot;button&quot; onclick = &quot;alert('欢迎！请按确认继续！');&quot;/&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;input id = &quot;confirm&quot; value= &quot;confirm&quot; type = &quot;button&quot; onclick = &quot;confirm('确定吗？');&quot;/&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;inputid = &quot;prompt&quot; value = &quot;prompt&quot; type = &quot;button&quot;onclick = &quot;var name = prompt('请输入你的名字:','请输入</p>
<p>&nbsp;</p>
<p>你的名字'); document.write(name) &quot;/&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/body&gt;</p>
<p>&nbsp;</p>
<p>&lt;/html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;以上html代码在页面上显示了三个按钮，点击他们分别弹出alert、confirm、prompt对话框。如果在prompt对话框中输入文字点击确定之后，将会刷新页面，显示出这些文字。</p>
<p>&nbsp;</p>
<p>selenium webdriver 处理这些弹层的代码如下：</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.Alert;</p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class DialogsStudy {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //TODO Auto-generated method stub</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\Mozilla Firefox\firefox.exe&quot;);&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;file:///C:/Documents and Settings/gongjf/桌面/selenium_test/Dialogs.html&quot;;//&quot;/Your/Path/to/main.html&quot;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //点击第一个按钮，输出对话框上面的文字，然后叉掉</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;alert&quot;)).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alertalert = dr.switchTo().alert();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringtext = alert.getText();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(text);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alert.dismiss();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //点击第二个按钮，输出对话框上面的文字，然后点击确认</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;confirm&quot;)).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alertconfirm = dr.switchTo().alert();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringtext1 = confirm.getText();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(text1);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; confirm.accept();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //点击第三个按钮，输入你的名字，然后点击确认，最后</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;prompt&quot;)).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Alertprompt = dr.switchTo().alert();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringtext2 = prompt.getText();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(text2);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prompt.sendKeys(&quot;jarvi&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prompt.accept();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>小结：</strong></p>
<p>&nbsp;</p>
<p>从以上代码可以看出dr.switchTo().alert();这句可以得到alertconfirmprompt对话框的对象，然后运用其方法对它进行操作。对话框操作的主要方法有：</p>
<p>&nbsp;</p>
<p>getText() &nbsp; &nbsp;得到它的文本&#20540;</p>
<p>accept() &nbsp; &nbsp; &nbsp;相当于点击它的&quot;确认&quot;</p>
<p>dismiss() &nbsp; &nbsp; 相当于点击&quot;取消&quot;或者叉掉对话框</p>
<p>sendKeys() 输入&#20540;，这个alertconfirm没有对话框就不能用了，不然会报错。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>H&nbsp; 如何操作cookies</h1>
<p>&nbsp;</p>
<p>Web 测试中我们经常会接触到Cookies，一个Cookies主要属性有”所在域、name、value、有效日期和路径&quot;,下面来讲一下怎么操作Cookies</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>import java.util.Set;</p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.Cookie;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>&nbsp;</p>
<p>public class CookiesStudy {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author&nbsp;gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //TODO Auto-generated method stub</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\Mozilla Firefox\firefox.exe&quot;);&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //增加一个name =&quot;name&quot;,value=&quot;value&quot;的cookie</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Cookiecookie = new Cookie(&quot;name&quot;, &quot;value&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.manage().addCookie(cookie);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //得到当前页面下所有的cookies，并且输出它们的所在域、name、value、有效日期和路径</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set&lt;Cookie&gt;cookies = dr.manage().getCookies();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(String.format(&quot;Domain-&gt; name -&gt; value -&gt; expiry -&gt; path&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for(Cookiec : cookies)</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.out.println(String.format(&quot;%s-&gt; %s -&gt; %s -&gt; %s -&gt; %s&quot;,</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c.getDomain(),c.getName(), c.getValue(),c.getExpiry(),c.getPath()));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //删除cookie有三种方法</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //第一种通过cookie的name</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.manage().deleteCookieNamed(&quot;CookieName&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //第二种通过Cookie对象 </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.manage().deleteCookie(cookie);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //第三种全部删除</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.manage().deleteAllCookies();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p><strong>小结：</strong></p>
<p><strong>&nbsp;</strong></p>
<p>上面的代码首先在页面中增加了一个cookie,然后遍历页面的所有cookies，并输出他们的主要属性。最后就是三种删除cookie的方法。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>I&nbsp; 如何等待页面元素加载完成</h1>
<p>web的自动化测试中，我们经常会遇到这样一种情况：当我们的程序执行时需要页面某个元素，而此时这个元素还未加载完成，这时我们的程序就会报错。怎么办？等待。等待元素出现后再进行对这个元素的操作。</p>
<p>在selenium-webdriver中我们用两种方式进行等待：明确的等待和隐性的等待。</p>
<p>&nbsp;</p>
<p><strong>明确的等待</strong></p>
<p>&nbsp;</p>
<p>明确的等待是指在代码进行下一步操作之前等待某一个条件的发生。最不好的情况是使用Thread.sleep()去设置一段确认的时间去等待。但为什么说最不好呢？因为一个元素的加载时间有长有短，你在设置sleep的时间之前要自己把握长短，太短容易超时，太长浪费时间。selenium webdriver提供了一些方法帮助我们等待正好需要等待的时间。利用WebDriverWait类和ExpectedCondition接口就能实现这一点。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>下面的html代码实现了这样的一种效果：点击click按钮5秒钟后，页面上会出现一个红色的div块。我们需要写一段自动化脚本去捕获这个出现的div，然后高亮之。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>Html代码</strong></p>
<p><strong>&nbsp;</strong></p>
<p>Wait.html</p>
<p>&nbsp;</p>
<p>&lt;html&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;head&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;title&gt;Set Timeout&lt;/title&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;style&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.red_box {background-color: red; width = 20%; height: 100px; border:none;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/style&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;script&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function show_div(){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(&quot;create_div()&quot;, 5000);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function create_div(){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d =document.createElement('div');</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; d.className =&quot;red_box&quot;;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; document.body.appendChild(d);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/script&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/head&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;body&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;button id = &quot;b&quot; onclick =&quot;show_div()&quot;&gt;click&lt;/button&gt;</p>
<p>&nbsp;&nbsp;&nbsp;&lt;/body&gt;</p>
<p>&lt;/html&gt;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>下面的代码实现了高亮动态生成的div块的功能：</p>
<p align="left">&nbsp;</p>
<p><strong>Java代码</strong></p>
<p align="left"><strong>&nbsp;</strong></p>
<p>import org.openqa.selenium.By;</p>
<p>importorg.openqa.selenium.JavascriptExecutor;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>importorg.openqa.selenium.support.ui.ExpectedCondition;</p>
<p>importorg.openqa.selenium.support.ui.WebDriverWait;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>public class WaitForSomthing {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //TODO Auto-generated method stub</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\Mozilla Firefox\firefox.exe&quot;);&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;file:///C:/Documents and Settings/gongjf/桌面/selenium_test/Wait.html&quot;;//&quot;/Your/Path/to/Wait.html&quot;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverWaitwait = new WebDriverWait(dr,10);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wait.until(newExpectedCondition&lt;WebElement&gt;(){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Override</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicWebElement apply(WebDriver d) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returnd.findElement(By.id(&quot;b&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }}).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElementelement = dr.findElement(By.cssSelector(&quot;.red_box&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((JavascriptExecutor)dr).executeScript(&quot;arguments[0].style.border= &quot;5px solid yellow&quot;&quot;,element);&nbsp;
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>上面的代码WebDriverWait类的构造方法接受了一个WebDriver对象和一个等待最长时间（10秒）。然后调用until方法，其中重写了 ExpectedCondition接口中的apply方法，让其返回一个WebElement,即加载完成的元素，然后点击。默认情况下，WebDriverWait每500毫秒调用一次ExpectedCondition，直到有成功的返回，当然如果超过设定的&#20540;还没有成功的返回，将抛出异常。</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p align="left"><strong>隐性等待</strong></p>
<p align="left">&nbsp;</p>
<p>隐性等待是指当要查找元素，而这个元素没有马上出现时，告诉WebDriver查询Dom一定时间。默认&#20540;是0,但是设置之后，这个时间将在WebDriver对象实例整个生命周期都起作用。上面的代码就变成了这样：</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>import java.util.concurrent.TimeUnit;</p>
<p>import org.openqa.selenium.By;</p>
<p>importorg.openqa.selenium.JavascriptExecutor;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>importorg.openqa.selenium.support.ui.ExpectedCondition;</p>
<p>importorg.openqa.selenium.support.ui.WebDriverWait;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>public class WaitForSomthing {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //TODO Auto-generated method stub</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\Mozilla Firefox\firefox.exe&quot;);&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //设置10秒</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stringurl = &quot;file:///C:/Documents and Settings/gongjf/桌面/selenium_test/Wait.html&quot;;//&quot;/Your/Path/to/Wait.html&quot;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(url);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //注释掉原来的</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /*WebDriverWaitwait = new WebDriverWait(dr,10);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wait.until(newExpectedCondition&lt;WebElement&gt;(){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @Override</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicWebElement apply(WebDriver d) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returnd.findElement(By.id(&quot;b&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }}).click();*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.findElement(By.id(&quot;b&quot;)).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElementelement = dr.findElement(By.cssSelector(&quot;.red_box&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((JavascriptExecutor)dr).executeScript(&quot;arguments[0].style.border= &quot;5px solid yellow&quot;&quot;,element);&nbsp;
</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>小结：</strong></p>
<p><strong>&nbsp;</strong></p>
<p>两种方法任选其一</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>J&nbsp; 如何利用selenium-webdriver截图</h1>
<p>&nbsp;</p>
<p>在自动化测试中常常会用到截图功能。可以截取页面全图，不管页面有多长。</p>
<p>&nbsp;</p>
<p>下面的代码演示了如何使用webdriver进行截图：</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><strong>Java代码</strong></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>import java.io.File;</p>
<p>import java.io.IOException;</p>
<p>&nbsp;</p>
<p>import org.apache.commons.io.FileUtils;</p>
<p>import org.openqa.selenium.OutputType;</p>
<p>import org.openqa.selenium.TakesScreenshot;</p>
<p>import org.openqa.selenium.WebDriver;</p>
<p>importorg.openqa.selenium.firefox.FirefoxDriver;</p>
<p>public class ShotScreen {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /**</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @author gongjf</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @throws IOException </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;* @throws InterruptedException </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;*/</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; publicstatic void main(String[] args) throws IOException, InterruptedException {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; System.setProperty(&quot;webdriver.firefox.bin&quot;,&quot;D:\ProgramFiles\Mozilla Firefox\firefox.exe&quot;);&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdr = new FirefoxDriver();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dr.get(&quot;http://www.51.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //这里等待页面加载完成</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.sleep(5000);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //下面代码是得到截图并保存在D盘下</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FilescreenShotFile = ((TakesScreenshot)dr).getScreenshotAs(OutputType.FILE);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileUtils.copyFile(screenShotFile,new File(&quot;D:/test.png&quot;));</p>
<p>}</p>
<p>}</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<h1>K&nbsp; 封装与重用</h1>
<p>&nbsp;</p>
<p>WebDriver对页面的操作，需要找到一个WebElement，然后再对其进行操作，比较繁琐：</p>
<p>&nbsp;// Find the text inputelement by itsname</p>
<p>WebElement element =driver.findElement(By.name(&quot;q&quot;));</p>
<p>&nbsp;</p>
<p>// Enter something to search for</p>
<p>element.sendKeys(&quot;Cheese!&quot;);</p>
<p>我们可以考虑对这些基本的操作进行一个封装，简化操作。比如，封装代码：</p>
<p>&nbsp;&nbsp;&nbsp; protected voidsendKeys(Byby, String value){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.findElement(by).sendKeys(value);</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>那么，在测试用例可以这样简化调用：</p>
<p>sendKeys(By.name(&quot;q&quot;),”Cheese!”);</p>
<p>&nbsp;</p>
<p>看，这就简洁多了。</p>
<p>&nbsp;</p>
<p>类&#20284;的封装还有：</p>
<p>package com.drutt.mm.end2end.actions;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>import java.util.List;</p>
<p>import java.util.NoSuchElementException;</p>
<p>import java.util.concurrent.TimeUnit;</p>
<p>&nbsp;</p>
<p>import org.openqa.selenium.By;</p>
<p>import org.openqa.selenium.WebElement;</p>
<p>importorg.openqa.selenium.remote.RemoteWebDriver;</p>
<p>importorg.openqa.selenium.support.ui.WebDriverWait;</p>
<p>&nbsp;</p>
<p>importcom.drutt.mm.end2end.data.TestConstant;</p>
<p>&nbsp;</p>
<p>public class WebDriverAction {</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp; //protected WebDriverdriver;</p>
<p>&nbsp;&nbsp; protectedRemoteWebDriverdriver;</p>
<p>&nbsp;&nbsp; protectedWebDriverWaitdriverWait;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; protected booleanisWebElementExist(Byselector) { </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try { </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.findElement(selector);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return true; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch(NoSuchElementException e) { </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return false; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} </p>
<p>&nbsp;&nbsp;&nbsp; } </p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; protectedStringgetWebText(By by) { </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try { </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return driver.findElement(by).getText();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (NoSuchElementException e) { </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return &quot;Textnot existed!&quot;; </p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} </p>
<p>&nbsp;&nbsp;&nbsp; } </p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; protectedvoidclickElementContainingText(By by, String text){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;WebElement&gt;elementList = driver.findElements(by);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(WebElement e:elementList){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(e.getText().contains(text)){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; protectedStringgetLinkUrlContainingText(By by, String text){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;List&lt;WebElement&gt;subscribeButton = driver.findElements(by);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String url = null;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(WebElement e:subscribeButton){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(e.getText().contains(text)){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url =e.getAttribute(&quot;href&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return url;</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; protected voidclick(Byby){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.findElement(by).click();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.manage().timeouts().implicitlyWait(TestConstant.WAIT_ELEMENT_TO_LOAD,TimeUnit.SECONDS);</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; protectedStringgetLinkUrl(By by){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return driver.findElement(by).getAttribute(&quot;href&quot;);</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>&nbsp;&nbsp;&nbsp; protected voidsendKeys(Byby, String value){</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.findElement(by).sendKeys(value);</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p><strong>小结：</strong></p>
<p><strong>&nbsp;</strong></p>
<p>按照上面的例子你可以对各个方法进行封装，使自己的代码更加简洁！</p>
<p>&nbsp;</p>
<h1>L&nbsp; 在selenium2.0中使用selenium1.0的API</h1>
<p>&nbsp;</p>
<p>Selenium2.0中使用WeDriver API对页面进行操作，它最大的优点是不需要安装一个selenium server就可以运行，但是对页面进行操作不如selenium1.0的Selenium RC API那么方便。Selenium2.0提供了使用Selenium RC API的方法：</p>
<p>// 我用火狐浏览器作为例子</p>
<p>WebDriver driver = newFirefoxDriver();&nbsp;</p>
<p>&nbsp;String baseUrl=&quot;http://www.google.com&quot;;&nbsp;</p>
<p>Selenium selenium = newWebDriverBackedSelenium(driver, baseUrl);</p>
<p>&nbsp;</p>
<p>// 执行selenium命令</p>
<p>selenium.open(&quot;http://www.google.com&quot;);</p>
<p>selenium.type(&quot;name=q&quot;,&quot;cheese&quot;);</p>
<p>selenium.click(&quot;name=btnG&quot;);</p>
<p>&nbsp;</p>
<p>WebDriver driverInstance = ((WebDriverBackedSelenium)selenium).getUnderlyingWebDriver();</p>
<p>&nbsp;</p>
<p>selenium.stop();</p>
<p>&nbsp;</p>
<p>我分别使用WebDriver API和SeleniumRC API写了一个Login的脚本，很明显，后者的操作更加简单明了。</p>
<p>WebDriver API写的Login脚本：</p>
<p>&nbsp;&nbsp;&nbsp; public void login() {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.switchTo().defaultContent();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver.switchTo().frame(&quot;mainFrame&quot;);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WebElement eUsername= waitFindElement(By.id(&quot;username&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eUsername.sendKeys(manager@ericsson.com);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WebElement ePassword= waitFindElement(By.id(&quot;password&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ePassword.sendKeys(manager);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WebElementeLoginButton = waitFindElement(By.id(&quot;loginButton&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eLoginButton.click();</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>SeleniumRC API写的Login脚本：</p>
<p>&nbsp;&nbsp;&nbsp; public void login() {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selenium.selectFrame(&quot;relative=top&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selenium.selectFrame(&quot;mainFrame&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selenium.type(&quot;username&quot;,&quot;manager@ericsson.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selenium.type(&quot;password&quot;,&quot;manager&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;selenium.click(&quot;loginButton&quot;);</p>
<p>}</p>
<p>&nbsp;</p>
<br>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>32</wp:post_id>
		<wp:post_date>2012-08-24 01:39:00</wp:post_date>
		<wp:post_date_gmt>2012-08-23 17:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%90%e8%bd%ac%e3%80%91selenium-webdriver%e7%9a%84%e7%ae%80%e5%8d%95%e6%93%8d%e4%bd%9c%e8%af%b4%e6%98%8e</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>配置Selenium支持RC和Webdriver的混合模式</title>
		<link>http://localhost/wp/?p=33</link>
		<pubDate>Thu, 23 Aug 2012 02:12:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=33</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">1、创建类文件DefWebDriver.java</span></p>
<p><pre name="code" class="java">import java.io.File;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriverBackedSelenium;
import org.openqa.selenium.ie.InternetExplorerDriver;

import com.thoughtworks.selenium.Selenium;

public class DefWebDriver {
	
	private static String path=&quot;\WebDrive\IEDriverServer.exe&quot;;
	private static String baseUrl = &quot;http://172.16.36.23&quot;;
	
    public static WebDriver webdriver;
    public static Selenium selenium;
    public static JavascriptExecutor js;
	
    
    public void setPath(String path) {
		DefWebDriver.path=path;
	}
    
    public void setBaseUrl(String baseUrl) {
		DefWebDriver.baseUrl=baseUrl;
	}
    
    public  static void CreatDefWebDriver() {
    	File file = new File(System.getProperty(&quot;user.dir&quot;)+path);
    	System.setProperty(&quot;webdriver.ie.driver&quot;, file.getAbsolutePath());
    	
    	if(webdriver==null)webdriver = new InternetExplorerDriver();    
    	if(selenium==null)selenium = new WebDriverBackedSelenium(webdriver, baseUrl);
    	if(js==null) js = (JavascriptExecutor) webdriver;    	
	}
}
</pre><br>
<span style="font-size:24px">2、在存放测试用例的每个模块的.java文件的 @BeforeSuite标识的方法内及变量部分添加</span></p>
<p><pre name="code" class="java">//创建selenium实例
&nbsp;&nbsp;&nbsp; static Selenium selenium=null; 
&nbsp;&nbsp; &nbsp;
&nbsp;&nbsp;&nbsp; //创建webdriver实例
&nbsp;&nbsp;&nbsp;&nbsp; static WebDriver webdriver=null; 
&nbsp;&nbsp; &nbsp;
&nbsp;&nbsp;&nbsp; //创建js实例
&nbsp;&nbsp;&nbsp;&nbsp; static JavascriptExecutor js=null; 


//初始化Selenium部分
    @BeforeSuite 
    public static void setupBeforeClass() { 
    	
    	/*设置IEWebDriver的路径和访问的URL，可以不设置
    	 *IEWebDriver路径默认是当前项目目录下的【\WebDrive\IEDriverServer.exe】
    	 *访问的URL默认是【http://172.16.36.23】
    	 * 
    	 */

    	
    	DefWebDriver.CreatDefWebDriver();
        
        if (webdriver == null)webdriver=DefWebDriver.webdriver; 
        if (selenium == null)selenium = DefWebDriver.selenium; 
        if (js == null)js=DefWebDriver.js; 
        
        
        //登录到系统中
    	      
       
    } </pre><br>
</p>
<p><span style="font-size:24px">3、如此设置之后，在编写测试用例脚本时，即支持RC方式也支持Webdriver方式，示例如下：</span></p>
<p>&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <pre name="code" class="java">	         //打开登录页
		  	selenium.open(&quot;http://172.16.36.23&quot;);
		  	
		  	
		  	//等待3秒
		  	Pause.PauseExec(3);
		  	
		  	//获取页面元素		  	
		  	WebElement elementlogin = webdriver.findElement(By.id(&quot;loginin&quot;));
		  	WebElement elementaccount =webdriver.findElement(By.id(&quot;userinput&quot;));
		  	WebElement elementpassword = webdriver.findElement(By.id(&quot;passwordinput&quot;));
		  	
		  	//输入用户名和密码，两种方式
		  	//WebDriver.selenium RC方式
//			WebDriver.selenium.type(&quot;id=userinput&quot;, userInfo.GetAccount());
//			WebDriver.selenium.type(&quot;id=passwordinput&quot;, userInfo.GetPassword());
			
			//webdriver方式
			elementaccount.sendKeys(userInfo.GetAccount());
			elementpassword.sendKeys(userInfo.GetPassword());
			
			//点击登录，三种方式
			
			//直接调用js的click_login()登录
//			js.executeScript(&quot;click_login()&quot;, elementlogin);
			
			//webdriver方式的点击登录按钮
			elementlogin.click();</pre><br>
<br>
</p>
<p><br>
</p>
<p><br>
<span style="font-size:24px"></span></p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>33</wp:post_id>
		<wp:post_date>2012-08-23 10:12:00</wp:post_date>
		<wp:post_date_gmt>2012-08-23 02:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e9%85%8d%e7%bd%aeselenium%e6%94%af%e6%8c%81rc%e5%92%8cwebdriver%e7%9a%84%e6%b7%b7%e5%90%88%e6%a8%a1%e5%bc%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>【转载】Selenium2.0 WebDriver入门指南</title>
		<link>http://localhost/wp/?p=34</link>
		<pubDate>Mon, 20 Aug 2012 22:56:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=34</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">转自：http://my.oschina.net/willSoft/blog/28119</span></p>
<p><br>
</p>
<p></p>
<div class="BlogContent">
<h2>1.1&nbsp;&nbsp;下载selenium2.0的lib包</h2>
<p><a href="http://code.google.com/p/selenium/downloads/list">http://code.google.com/p/selenium/downloads/list</a></p>
<p>官方User Guide：<a href="http://seleniumhq.org/docs/">http://seleniumhq.org/docs/</a></p>
<h2>1.2&nbsp;&nbsp;用webdriver打开一个浏览器</h2>
<p>我们常用的浏览器有firefox和IE两种，firefox是selenium支持得比较成熟的浏览器。但是做页面的测试，速度通常很慢，严重影响持续集成的速度，这个时候建议使用HtmlUnit，不过HtmlUnitDirver运行时是看不到界面的，对调试就不方便了。使用哪种浏览器，可以做成配置项，根据需要灵活配置。</p>
<p>&nbsp;</p>
<ol type="A">
<li>打开firefox浏览器：</li></ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Create a newinstance of the Firefox driver</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver driver = newFirefoxDriver();&nbsp;</p>
<ol start="2" type="A">
<li>打开IE浏览器</li></ol>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Create a newinstance of the Internet Explorer driver</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriver driver = newInternetExplorerDriver ();</p>
<p>&nbsp;打开HtmlUnit浏览器</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //Createa new instance of the Internet Explorer driver &nbsp;&nbsp;&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebDriverdriver = new HtmlUnitDriver();&nbsp;</p>
<h2>1.3&nbsp;&nbsp;打开测试页面</h2>
<p>对页面对测试，首先要打开被测试页面的地址（如：<a href="http://www.google.com/">http://www.google.com</a>）,web driver 提供的get方法可以打开一个页面：</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // And now use thedriver to visit Google</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.get(&quot;http://www.google.com&quot;);</p>
<p>&nbsp;</p>
<h2>1.4&nbsp;&nbsp;如何找到页面元素</h2>
<p>Webdriver的findElement方法可以用来找到页面的某个元素，最常用的方法是用id和name查找。</p>
<p>&nbsp;假设页面写成这样：</p>
<p>&lt;input type=&quot;text&quot; name=&quot;passwd&quot;id=&quot;passwd-id&quot; /&gt;&nbsp;</p>
<p>那么可以这样找到页面的元素：</p>
<p>通过id查找：</p>
<p>WebElement element = driver.findElement(By.id(&quot;passwd-id&quot;));</p>
<p>或通过name查找：</p>
<p>WebElement element = driver.findElement(By.name(&quot;passwd&quot;));</p>
<p>或通过xpath查找：</p>
<p>WebElement element =driver.findElement(By.xpath(&quot;//input[@id='passwd-id']&quot;));&nbsp;</p>
<p>但页面的元素经常在找的时候因为出现得慢而找不到，建议是在查找的时候等一个时间间隔。</p>
<h2>1.5&nbsp;&nbsp;如何对页面元素进行操作</h2>
<p>找到页面元素后，怎样对页面进行操作呢？我们可以根据不同的类型的元素来进行一一说明。</p>
<h3>1.5.1 输入框（text field or textarea）</h3>
<p>&nbsp;&nbsp; 找到输入框元素：</p>
<p>WebElement element = driver.findElement(By.id(&quot;passwd-id&quot;));</p>
<p>在输入框中输入内容：</p>
<p>element.sendKeys(“test”);</p>
<p>将输入框清空：</p>
<p>element.clear();</p>
<p>获取输入框的文本内容：</p>
<p>element.getText();</p>
<p>&nbsp;</p>
<h3>1.5.2下拉选择框(Select)</h3>
<p>找到下拉选择框的元素：</p>
<p>Select select = new Select(driver.findElement(By.id(&quot;select&quot;)));&nbsp; 选择对应的选择项：</p>
<p>select.selectByVisibleText(“mediaAgencyA”);</p>
<p>或</p>
<p>select.selectByValue(“MA_ID_001”);&nbsp;</p>
<p>不选择对应的选择项：</p>
<p>select.deselectAll();</p>
<p>select.deselectByValue(“MA_ID_001”);</p>
<p>select.deselectByVisibleText(“mediaAgencyA”);</p>
<p>或者获取选择项的&#20540;：</p>
<p>select.getAllSelectedOptions();</p>
<p>select.getFirstSelectedOption();</p>
<p>&nbsp;</p>
<h3>1.5.3单选项(Radio Button)</h3>
<p>找到单选框元素：</p>
<p>WebElement bookMode =driver.findElement(By.id(&quot;BookMode&quot;));</p>
<p>选择某个单选项：</p>
<p>bookMode.click();</p>
<p>清空某个单选项：</p>
<p>bookMode.clear();</p>
<p>判断某个单选项是否已经被选择：</p>
<p>bookMode.isSelected();</p>
<h3>1.5.4多选项(checkbox)</h3>
<p>多选项的操作和单选的差不多：</p>
<p>WebElement checkbox = driver.findElement(By.id(&quot;myCheckbox.&quot;));</p>
<p>checkbox.click(); </p>
<p>checkbox.clear();</p>
<p>checkbox.isSelected();</p>
<p>checkbox.isEnabled();</p>
<h3>1.5.5按钮(button)</h3>
<p>找到按钮元素：</p>
<p>WebElement saveButton = driver.findElement(By.id(&quot;save&quot;));</p>
<p>点击按钮：</p>
<p>saveButton.click();</p>
<p>判断按钮是否enable:</p>
<p>&nbsp;</p>
<p>saveButton.isEnabled ();</p>
<h3>1.5.6左右选择框</h3>
<p>也就是左边是可供选择项，选择后移动到右边的框中，反之亦然。例如：</p>
<p>Select lang = new Select(driver.findElement(By.id(&quot;languages&quot;)));</p>
<p>lang.selectByVisibleText(“English”);</p>
<p>WebElement addLanguage =driver.findElement(By.id(&quot;addButton&quot;));</p>
<p>addLanguage.click();</p>
<h3>1.5.7弹出对话框(Popup dialogs)</h3>
<p>Alert alert = driver.switchTo().alert();</p>
<p>alert.accept();</p>
<p>alert.dismiss();</p>
<p>alert.getText();</p>
<h3>1.5.8表单(Form)</h3>
<p>Form中的元素的操作和其它的元素操作一样，对元素操作完成后对表单的提交可以：</p>
<p>WebElement approve = driver.findElement(By.id(&quot;approve&quot;));</p>
<p>approve.click();</p>
<p>或</p>
<p>approve.submit();//只适合于表单的提交</p>
<h3>1.5.9上传文件</h3>
<p>上传文件的元素操作：</p>
<p>WebElement adFileUpload =driver.findElement(By.id(&quot;WAP-upload&quot;));</p>
<p>String filePath = &quot;C:test\uploadfile\media_ads\test.jpg&quot;;</p>
<p>adFileUpload.sendKeys(filePath);</p>
<h2>1.6&nbsp;&nbsp;Windows 和 Frames之间的切换</h2>
<p>一般来说，登录后建议是先：</p>
<p>driver.switchTo().defaultContent();</p>
<p>切换到某个frame：</p>
<p>driver.switchTo().frame(&quot;leftFrame&quot;);</p>
<p>从一个frame切换到另一个frame：</p>
<p>driver.switchTo().frame(&quot;mainFrame&quot;);</p>
<p>切换到某个window：</p>
<p>driver.switchTo().window(&quot;windowName&quot;);</p>
<p>&nbsp;</p>
<h2>1.7&nbsp;&nbsp;调用Java Script</h2>
<p>Web driver对Java Script的调用是通过JavascriptExecutor来实现的，例如：</p>
<p>JavascriptExecutor js = (JavascriptExecutor) driver;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;js.executeScript(&quot;(function(){inventoryGridMgr.setTableFieldValue('&quot;&#43; inventoryId &#43; &quot;','&quot; &#43; fieldName &#43; &quot;','&quot;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#43; value &#43; &quot;');})()&quot;);</p>
<h2>1.8&nbsp;&nbsp;页面等待</h2>
<p>页面的操作比较慢，通常需要等待一段时间，页面元素才出现，但webdriver没有提供现成的方法，需要自己写。</p>
<p>等一段时间再对页面元素进行操作：</p>
<p>&nbsp;&nbsp;&nbsp; public void waitForPageToLoad(longtime) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Thread.sleep(time);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch (Exceptione) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>在找WebElement的时候等待：</p>
<p>&nbsp;&nbsp; public WebElementwaitFindElement(By by) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; returnwaitFindElement(by, Long.parseLong(CommonConstant.GUI_FIND_ELEMENT_TIMEOUT),Long</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .parseLong(CommonConstant.GUI_FIND_ELEMENT_INTERVAL));</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; public WebElementwaitFindElement(By by, long timeout, long interval) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long start = System.currentTimeMillis();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while (true) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;try {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return driver.findElement(by);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch(NoSuchElementException nse) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (System.currentTimeMillis()- start &gt;= timeout) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; throw newError(&quot;Timeout reached and element[&quot; &#43; by &#43; &quot;]not found&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; try {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; synchronized(this) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wait(interval);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } catch(InterruptedException e) {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; e.printStackTrace();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;</p>
<h2>1.9&nbsp;&nbsp;在selenium2.0中使用selenium1.0的API</h2>
<p>Selenium2.0中使用WeDriver API对页面进行操作，它最大的优点是不需要安装一个selenium server就可以运行，但是对页面进行操作不如selenium1.0的Selenium RC API那么方便。Selenium2.0提供了使用Selenium RC API的方法：</p>
<p>// You may use any WebDriver implementation. Firefox is used hereas an example</p>
<p>WebDriver driver = new FirefoxDriver();</p>
<p>&nbsp;</p>
<p>// A &quot;base url&quot;, used by selenium to resolve relativeURLs</p>
<p>&nbsp;String baseUrl =&quot;http://www.google.com&quot;;</p>
<p>&nbsp;</p>
<p>// Create the Selenium implementation</p>
<p>Selenium selenium = new WebDriverBackedSelenium(driver, baseUrl);</p>
<p>&nbsp;</p>
<p>// Perform actions with selenium</p>
<p>selenium.open(&quot;http://www.google.com&quot;);</p>
<p>selenium.type(&quot;name=q&quot;, &quot;cheese&quot;);</p>
<p>selenium.click(&quot;name=btnG&quot;);</p>
<p>&nbsp;</p>
<p>// Get the underlying WebDriver implementation back. This willrefer to the</p>
<p>// same WebDriver instance as the &quot;driver&quot; variableabove.</p>
<p>WebDriver driverInstance = ((WebDriverBackedSelenium)selenium).getUnderlyingWebDriver();</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; //Finally, close thebrowser. Call stop on the WebDriverBackedSelenium instance</p>
<p>&nbsp;&nbsp;&nbsp; //instead of callingdriver.quit(). Otherwise, the JVM will continue running after</p>
<p>&nbsp;&nbsp;&nbsp; //the browser has beenclosed.</p>
<p>&nbsp;&nbsp;&nbsp; selenium.stop();</p>
<p>&nbsp;</p>
<p>我分别使用WebDriver API和SeleniumRC API写了一个Login的脚本，很明显，后者的操作更加简单明了。</p>
<p>WebDriver API写的Login脚本：</p>
<p>&nbsp; &nbsp;&nbsp;public void login() {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.switchTo().defaultContent();</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; driver.switchTo().frame(&quot;mainFrame&quot;);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElement eUsername= waitFindElement(By.id(&quot;username&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; eUsername.sendKeys(manager@ericsson.com);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElement ePassword= waitFindElement(By.id(&quot;password&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ePassword.sendKeys(manager);</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WebElementeLoginButton = waitFindElement(By.id(&quot;loginButton&quot;));</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eLoginButton.click();</p>
<p>&nbsp;</p>
<p>&nbsp;&nbsp;&nbsp; }</p>
<p>&nbsp;&nbsp;&nbsp; </p>
<p>SeleniumRC API写的Login脚本：</p>
<p>&nbsp;&nbsp;&nbsp; public void login() {</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;selenium.selectFrame(&quot;relative=top&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selenium.selectFrame(&quot;mainFrame&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selenium.type(&quot;username&quot;,&quot;manager@ericsson.com&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selenium.type(&quot;password&quot;,&quot;manager&quot;);</p>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; selenium.click(&quot;loginButton&quot;);</p>
<p>}</p>
</div>
<br>
<p></p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>34</wp:post_id>
		<wp:post_date>2012-08-21 06:56:00</wp:post_date>
		<wp:post_date_gmt>2012-08-20 22:56:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%90%e8%bd%ac%e8%bd%bd%e3%80%91selenium2-0-webdriver%e5%85%a5%e9%97%a8%e6%8c%87%e5%8d%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>Selenium的RC方式编写的测试脚本部分迁移到WebDriver方式混用的简单示例</title>
		<link>http://localhost/wp/?p=35</link>
		<pubDate>Mon, 20 Aug 2012 21:51:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=35</guid>
		<description></description>
		<content:encoded><![CDATA[<p><br>
</p>
<p><br>
</p>
<p><pre name="code" class="java"> //指定WebDrive
		  	 File file = new File(System.getProperty(&quot;user.dir&quot;)+&quot;\WebDrive\IEDriverServer.exe&quot;);
	    	 System.setProperty(&quot;webdriver.ie.driver&quot;, file.getAbsolutePath());
	    	 
	         WebDriver driver = new InternetExplorerDriver();
	         String baseUrl = &quot;http://172.16.36.23&quot;;
	         
	         //创建selenium实例
	         Selenium selenium = new WebDriverBackedSelenium(driver, baseUrl);
	         
	         //可调用执行页面的js函数
	         JavascriptExecutor js = (JavascriptExecutor) driver;
	         
	         //打开登录页
		  	selenium.open(baseUrl);
		  	
		  	//等待3秒
		  	Pause.PauseExec(3);
		  	
		  	//获取页面元素		  	
		  	WebElement elementlogin = driver.findElement(By.id(&quot;loginin&quot;));
		  	WebElement elementaccount = driver.findElement(By.id(&quot;userinput&quot;));
		  	WebElement elementpassword = driver.findElement(By.id(&quot;passwordinput&quot;));
		  	
		  	//输入用户名和密码，两种方式
		  	//selenium RC方式
			selenium.type(&quot;id=userinput&quot;, userInfo.GetAccount());
			selenium.type(&quot;id=passwordinput&quot;, userInfo.GetPassword());
			
			//webdriver方式
//			elementaccount.sendKeys(userInfo.GetAccount());
//			elementpassword.sendKeys(userInfo.GetPassword());
			
			//点击登录，三种方式
			
			//直接调用js的click_login()登录
//			js.executeScript(&quot;click_login()&quot;, elementlogin);
			
			//webdriver方式的点击登录按钮
			elementlogin.click();
			
			//selenium RC方式的点击登录按钮
//			selenium.click(&quot;id=loginin&quot;);</pre><br>
不用改动之前以RC方式运行的脚本部分，后续新编写的可以使用webdriver或者RC方式<br>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>35</wp:post_id>
		<wp:post_date>2012-08-21 05:51:00</wp:post_date>
		<wp:post_date_gmt>2012-08-20 21:51:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selenium%e7%9a%84rc%e6%96%b9%e5%bc%8f%e7%bc%96%e5%86%99%e7%9a%84%e6%b5%8b%e8%af%95%e8%84%9a%e6%9c%ac%e9%83%a8%e5%88%86%e8%bf%81%e7%a7%bb%e5%88%b0webdriver%e6%96%b9%e5%bc%8f%e6%b7%b7%e7%94%a8%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>【转】TCP3次握手连接协议和4次握手断开连接协议</title>
		<link>http://localhost/wp/?p=36</link>
		<pubDate>Mon, 20 Aug 2012 02:25:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=36</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px; color:#3333FF">转自：http://wenku.baidu.com/view/46477c8602d276a200292e7e.html</span></p>
<p><span style="color:#3333FF"><br>
</span></p>
<p><span style="color:#3333FF"><br>
</span></p>
<p align="left" style="background:white"><span style="font-size:32px; color:#3333FF"><strong>TCP协议三次握手连接协议</strong></span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 在</span><span style="color:#3333FF">TCP/IP</span><span style="color:#3333FF">协议中，</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">协议提供可靠的连接服务，采用三次握手建立一个连接，如图</span><span style="color:#3333FF">1</span><span style="color:#3333FF">所示。</span><span style="color:#3333FF">
 (SYN</span><span style="color:#3333FF">包表示标志位</span><span style="color:#3333FF">syn=1,ACK</span><span style="color:#3333FF">包表示标志位</span><span style="color:#3333FF">ack=1,SYN&#43;ACK</span><span style="color:#3333FF">包表示标志位</span><span style="color:#3333FF">syn=1,ack=1)</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;(1)</span><span style="color:#3333FF">第一次握手：建立连接时，客户端</span><span style="color:#3333FF">A</span><span style="color:#3333FF">发送</span><span style="color:#3333FF">SYN</span><span style="color:#3333FF">包</span><span style="color:#3333FF">(SEQ_NUMBER=j)</span><span style="color:#3333FF">到服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">，并进入</span><span style="color:#3333FF">SYN_SEND</span><span style="color:#3333FF">状态，等待服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">确认。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;(2)</span><span style="color:#3333FF">第二次握手：服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">收到</span><span style="color:#3333FF">SYN</span><span style="color:#3333FF">包，必须确认客户</span><span style="color:#3333FF">A</span><span style="color:#3333FF">的</span><span style="color:#3333FF">SYN(ACK_NUMBER=j&#43;1)</span><span style="color:#3333FF">，同时自己也发送一个</span><span style="color:#3333FF">SYN</span><span style="color:#3333FF">包</span><span style="color:#3333FF">(SEQ_NUMBER=k)</span><span style="color:#3333FF">，即</span><span style="color:#3333FF">SYN&#43;ACK</span><span style="color:#3333FF">包，此时服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">进入</span><span style="color:#3333FF">SYN_RECV</span><span style="color:#3333FF">状态。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;(3)</span><span style="color:#3333FF">第三次握手：客户端</span><span style="color:#3333FF">A</span><span style="color:#3333FF">收到服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">的</span><span style="color:#3333FF">SYN</span><span style="color:#3333FF">＋</span><span style="color:#3333FF">ACK</span><span style="color:#3333FF">包，向服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">发送确认包</span><span style="color:#3333FF">ACK(ACK_NUMBER=k&#43;1)</span><span style="color:#3333FF">，此包发送完毕，客户端</span><span style="color:#3333FF">A</span><span style="color:#3333FF">和服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">进入</span><span style="color:#3333FF">ESTABLISHED</span><span style="color:#3333FF">状态，完成三次握手。</span></p>
<p style="background:white"><span style="color:#3333FF">完成三次握手，客户端与服务器开始传送数据。如下图所示：</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<p><span style="color:#3333FF">&nbsp;<img src="http://my.csdn.net/uploads/201208/20/1345459078_6433.jpg" alt=""><br>
</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<p align="left" style="background:white"><span style="font-size:32px; color:#3333FF"><strong>TCP协议四次握手断开连接协议</strong></span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 由于</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接是全双工的，因此每个方向都必须单独进行关闭。这个原则是当一方完成它的数据发送任务后就能发送一个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">来终止这个方向的连接。收到一个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">只意味着这一方向上没有数据流动，一个</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接在收到一个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">后仍能发送数据。首先进行关闭的一方将执行主动关闭，而另一方执行被动关闭。</span></p>
<p style="background:white"><span style="color:#3333FF">（</span><span style="color:#3333FF">1</span><span style="color:#3333FF">）客户端</span><span style="color:#3333FF">A</span><span style="color:#3333FF">发送一个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">，用来关闭客户</span><span style="color:#3333FF">A</span><span style="color:#3333FF">到服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">的数据传送</span><span style="color:#3333FF">(</span><span style="color:#3333FF">报文段</span><span style="color:#3333FF">4)</span><span style="color:#3333FF">。</span></p>
<p style="background:white"><span style="color:#3333FF">（</span><span style="color:#3333FF">2</span><span style="color:#3333FF">）服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">收到这个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">，它发回一个</span><span style="color:#3333FF">ACK</span><span style="color:#3333FF">，确认序号为收到的序号加</span><span style="color:#3333FF">1(</span><span style="color:#3333FF">报文段</span><span style="color:#3333FF">5)</span><span style="color:#3333FF">。和</span><span style="color:#3333FF">SYN</span><span style="color:#3333FF">一样，一个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">将占用一个序号。</span></p>
<p style="background:white"><span style="color:#3333FF">（</span><span style="color:#3333FF">3</span><span style="color:#3333FF">）服务器</span><span style="color:#3333FF">B</span><span style="color:#3333FF">关闭与客户端</span><span style="color:#3333FF">A</span><span style="color:#3333FF">的连接，发送一个</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">给客户端</span><span style="color:#3333FF">A(</span><span style="color:#3333FF">报文段</span><span style="color:#3333FF">6)</span><span style="color:#3333FF">。</span></p>
<p style="background:white"><span style="color:#3333FF">（</span><span style="color:#3333FF">4</span><span style="color:#3333FF">）客户端</span><span style="color:#3333FF">A</span><span style="color:#3333FF">发回</span><span style="color:#3333FF">ACK</span><span style="color:#3333FF">报文确认，并将确认序号设置为收到序号加</span><span style="color:#3333FF">1(</span><span style="color:#3333FF">报文段</span><span style="color:#3333FF">7)</span><span style="color:#3333FF">。</span></p>
<p><span style="color:#3333FF">TCP</span><span style="color:#3333FF">采用四次<span style="color:#3333FF">握手</span>关闭连接如下图</span><span style="color:#3333FF"></span><span style="color:#3333FF">所示。<br>
</span></p>
<p><span style="color:#3333FF">&nbsp;<img src="http://my.csdn.net/uploads/201208/20/1345459108_7195.jpg" alt=""><br>
</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">PS</span><span style="color:#3333FF">：另一个关闭连接的图</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<p><span style="color:#3333FF">&nbsp;&nbsp; <img src="http://my.csdn.net/uploads/201208/20/1345459127_9338.jpg" alt=""><br>
</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<p align="left" style="background:white"><span style="font-size:32px; color:#3333FF"><strong>特别的TIME_WAIT状态：</strong></span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">从以上</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接关闭的状态转换图可以看出，主动关闭的一方在发送完对对方</span><span style="color:#3333FF">FIN</span><span style="color:#3333FF">报文的确认</span><span style="color:#3333FF">(ACK)</span><span style="color:#3333FF">报文后，会进入</span><span style="color:#3333FF">TIME_WAIT</span><span style="color:#3333FF">状态。</span><span style="color:#3333FF">TIME_WAIT</span><span style="color:#3333FF">状态也称为</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">状态。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">什么是</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">？</span><span style="color:#3333FF">MSL</span><span style="color:#3333FF">即</span><span style="color:#3333FF">MaximumSegment
 Lifetime</span><span style="color:#3333FF">，也就是报文最大生存时间，引用《</span><span style="color:#3333FF">TCP/IP</span><span style="color:#3333FF">详解》中的话：</span><span style="color:#3333FF">“</span><span style="color:#3333FF">它</span><span style="color:#3333FF">(MSL)</span><span style="color:#3333FF">是任何报文段被丢弃前在网络内的最长时间。</span><span style="color:#3333FF">”</span><span style="color:#3333FF">那么，</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">也就是这个时间的</span><span style="color:#3333FF">2</span><span style="color:#3333FF">倍。其实我觉得没必要把这个</span><span style="color:#3333FF">MSL</span><span style="color:#3333FF">的确切含义搞明白，你所需要明白的是，当</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接完成四个报文段的交换时，主动关闭的一方将继续等待一定时间</span><span style="color:#3333FF">(2-4</span><span style="color:#3333FF">分钟</span><span style="color:#3333FF">)</span><span style="color:#3333FF">，即使两端的应用程序结束。你可以写代码试试，然后用</span><span style="color:#3333FF">setstat</span><span style="color:#3333FF">查看下。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">为什么需要</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">？根据《</span><span style="color:#3333FF">TCP/IP</span><span style="color:#3333FF">详解》和《</span><span style="color:#3333FF">TheTCP/IP
 Guide</span><span style="color:#3333FF">》中的说法，有两个原因：</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">其一，保证发送的</span><span style="color:#3333FF">ACK</span><span style="color:#3333FF">会成功发送到对方，如何保证？我觉得可能是通过超时计时器发送。这个就很难用代码演示了。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">其二，报文可能会被混淆，意思是说，其他时候的连接可能会被当作本次的连接。直接引用《</span><span style="color:#3333FF">TheTCP/IP Guide</span><span style="color:#3333FF">》的说法：</span><span style="color:#3333FF">Thesecond
 is to provide a “buffering period” between the end of this connectionand any subsequent ones. If not for this period, it is possible that packetsfrom different connections could be mixed, creating confusion.</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;TIME_WAIT</span><span style="color:#3333FF">状态所带来的影响：（</span><span style="color:#3333FF">1</span><span style="color:#3333FF">到</span><span style="color:#3333FF">4</span><span style="color:#3333FF">分钟）</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">当某个连接的一端处于</span><span style="color:#3333FF">TIME_WAIT</span><span style="color:#3333FF">状态时，该连接将不能再被使用。事实上，对于我们比较有现实意义的是，这个端口将不能再被使用。某个端口处于</span><span style="color:#3333FF">TIME_WAIT</span><span style="color:#3333FF">状态</span><span style="color:#3333FF">(</span><span style="color:#3333FF">其实应该是这个连接</span><span style="color:#3333FF">)</span><span style="color:#3333FF">时，这意味着这个</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接并没有断开</span><span style="color:#3333FF">(</span><span style="color:#3333FF">完全断开</span><span style="color:#3333FF">)</span><span style="color:#3333FF">，那么，如果你</span><span style="color:#3333FF">bind</span><span style="color:#3333FF">这个端口，就会失败。对于服务器而言，如果服务器突然</span><span style="color:#3333FF">crash</span><span style="color:#3333FF">掉了，那么它将无法在</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">内重新启动，因为</span><span style="color:#3333FF">bind</span><span style="color:#3333FF">会失败。解决这个问题的一个方法就是设置</span><span style="color:#3333FF">socket</span><span style="color:#3333FF">的</span><span style="color:#3333FF">SO_REUSEADDR</span><span style="color:#3333FF">选项。这个选项意味着你可以重用一个地址。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;</span><span style="color:#3333FF">对于</span><span style="color:#3333FF">TIME_WAIT&nbsp;&nbsp;</span><span style="color:#3333FF">当建立一个</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接时，服务器端会继续用原有端口监听，同时用这个端口与客户端通信。而客户端默认情况下会使用一个随机端口与服务器端的监听端口通信。有时候，为了服务器端的安全性，我们需要对客户端进行验证，即限定某个</span><span style="color:#3333FF">IP</span><span style="color:#3333FF">某个特定端口的客户端。客户端可以使用</span><span style="color:#3333FF">bind</span><span style="color:#3333FF">来使用特定的端口。对于服务器端，当设置了</span><span style="color:#3333FF">SO_REUSEADDR</span><span style="color:#3333FF">选项时，它可以在</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">内启动并</span><span style="color:#3333FF">listen</span><span style="color:#3333FF">成功。但是对于客户端，当使</span></p>
<p style="background:white"><span style="color:#3333FF">用</span><span style="color:#3333FF">bind</span><span style="color:#3333FF">并设置</span><span style="color:#3333FF">SO_REUSEADDR</span><span style="color:#3333FF">时，如果在</span><span style="color:#3333FF">2MSL</span><span style="color:#3333FF">内启动，虽然</span><span style="color:#3333FF">bind</span><span style="color:#3333FF">会成功，但是在</span><span style="color:#3333FF">windows</span><span style="color:#3333FF">平台上</span><span style="color:#3333FF">connect</span><span style="color:#3333FF">会失败。而在</span><span style="color:#3333FF">linux</span><span style="color:#3333FF">上则不存在这个问题。</span><span style="color:#3333FF">(</span><span style="color:#3333FF">我的实验平台：</span><span style="color:#3333FF">winxp,ubuntu7.10)</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;&nbsp;</span><span style="color:#3333FF">要解决</span><span style="color:#3333FF">windows</span><span style="color:#3333FF">平台的这个问题，可以设置</span><span style="color:#3333FF">SO_LINGER</span><span style="color:#3333FF">选项。</span><span style="color:#3333FF">SO_LINGER</span><span style="color:#3333FF">选项决定调用</span><span style="color:#3333FF">close</span><span style="color:#3333FF">时</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">的行为。</span><span style="color:#3333FF">SO_LINGER</span><span style="color:#3333FF">涉及到</span><span style="color:#3333FF">linger</span><span style="color:#3333FF">结构体，如果设置结构体中<strong>l_onoff为非0，l_linger为0</strong></span><span style="color:#3333FF">，那么调用</span><span style="color:#3333FF">close</span><span style="color:#3333FF">时</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接会立刻断开，</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">不会将发送缓冲中未发送的数据发送，而是立即发送一个</span><span style="color:#3333FF">RST</span><span style="color:#3333FF">报文给对方，这个时候</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接</span><span style="color:#3333FF">(</span><span style="color:#3333FF">关闭时</span><span style="color:#3333FF">)</span><span style="color:#3333FF">就不会进入</span><span style="color:#3333FF">TIME_WAIT</span><span style="color:#3333FF">状态。如你所见，这样做虽然解决了问题，但是并不安全。通过<strong>以上方式</strong>设置</span><span style="color:#3333FF">SO_LINGER</span><span style="color:#3333FF">状态，等同于设置</span><span style="color:#3333FF">SO_DONTLINGER</span><span style="color:#3333FF">状态。</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;&nbsp;</span><span style="color:#3333FF">断开连接时的意外：</span></p>
<p style="background:white"><span style="color:#3333FF">&nbsp;&nbsp;&nbsp;</span><span style="color:#3333FF">这个算不上断开连接时的意外，当</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">连接发生一些物理上的意外情况时，例如网线断开，</span><span style="color:#3333FF">linux</span><span style="color:#3333FF">上的</span><span style="color:#3333FF">TCP</span><span style="color:#3333FF">实现会依然认为该连接有效，而</span><span style="color:#3333FF">windows</span><span style="color:#3333FF">则会在一定时间后返回错误信息。这&#20284;乎可以通过设置</span><span style="color:#3333FF">SO_KEEPALIVE</span><span style="color:#3333FF">选项来解决，不过不知道这个选项是否对于所有平台都有效。</span></p>
<p><span style="color:#3333FF">&nbsp;</span></p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>36</wp:post_id>
		<wp:post_date>2012-08-20 10:25:00</wp:post_date>
		<wp:post_date_gmt>2012-08-20 02:25:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%90%e8%bd%ac%e3%80%91tcp3%e6%ac%a1%e6%8f%a1%e6%89%8b%e8%bf%9e%e6%8e%a5%e5%8d%8f%e8%ae%ae%e5%92%8c4%e6%ac%a1%e6%8f%a1%e6%89%8b%e6%96%ad%e5%bc%80%e8%bf%9e%e6%8e%a5%e5%8d%8f%e8%ae%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>【转】CDN的全称是Content Delivery Network，即内容分发网络-网络加速器</title>
		<link>http://localhost/wp/?p=37</link>
		<pubDate>Mon, 20 Aug 2012 02:11:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=37</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="title" id="lemmaTitle-8658248">转自：http://wenku.baidu.com/view/c1368d62ddccda38376baf1d.html<br>
</h1>
<div class="mod-top"><br>
</div>
<h2>什么是网络加速器</h2>
<p style="background:#F5FAFE"><span style="color:black">网络加速器是的全称</span><span style="color:black">ContentDelivery Network</span><span style="color:black">，</span><span style="color:black">(</span><span style="color:black">缩写：</span><span style="color:black">CDN)</span><span style="color:black">即内容分发网络。它的原理是通过将网站的内容发布到最接近用户的</span><span style="color:black">cache</span><span style="color:black">（缓存）</span><a href="http://detail.zol.com.cn/server_index/subcate31_list_1.html"><span style="color:#333333">服务器</span></a><span style="color:black">内，使大部分客户就近访问</span><span style="color:black">cache</span><span style="color:black">服务器取得所需的内容，解决</span><span style="color:black">Internet</span><span style="color:black">网络拥塞状况，提高用户访问网站的响应速度，如同提供了多个分布在各地的克隆站点一般．</span></p>
<h2>CDN网络加速器的四大优势</h2>
<p style="background:#F5FAFE"><span style="color:black">高速</span><span style="color:black">提高了企业站点（尤其含有大量图片和静态页面站点）的访问速度，并大大提高以上性质站点的稳定性</span><span style="color:black"><br>
</span><span style="color:black">实用</span><span style="color:black">当企业站点所存放的服务器短时宕机时，用户仍可以在很长一段时间访问</span><span style="color:black">cache</span><span style="color:black">服务器</span><span style="color:black">,</span><span style="color:black">获得该企业站点的信息；</span><span style="color:black"><br>
</span><span style="color:black">简易</span><span style="color:black"> CDN</span><span style="color:black">网络加速器对用户完全透明，购买、使用方便，不需对其空间作任何更改，不影响原来空间维护操作和运行内容；</span><span style="color:black"><br>
</span><span style="color:black">超&#20540;</span><span style="color:black">本公司为</span><span style="color:black">CDN</span><span style="color:black">提供可再扩展的所有缓存服务器以及专用</span><span style="color:black">DNS</span><span style="color:black">硬件以及带宽，一次购买，可在各地电信机房自动为您</span><span style="color:black">&quot;</span><span style="color:black">克隆</span><span style="color:black">&quot;</span><span style="color:black">出多个站点副本，让站点遍布</span><span style="color:black">internet</span><span style="color:black">各处。</span></p>
<p style="background:#F5FAFE"><br>
</p>
<p style="background:#F5FAFE"><span style="color:black"><img src="http://my.csdn.net/uploads/201208/20/1345458691_3422.jpg" alt=""><br>
</span></p>
<h2>静态页面加速服务</h2>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;静态页面加速服务是指CDN网络和客户源文件服务器形成良好的互动，即将源站的网页内容：html文件、flash动画、及各种文件类型的图片缓存于CDN中心网络中，用缓存技术将文件cache在CDN的边缘节点上，满足终端用户就近访问的需求。文件可以通过定期和不定期的方式在CDN节点上进行更新,鹏博士数据众多的CDN节点分布于全国各地，有着“广分布、高冗余”的特点，便于提供终端用户对所需内容的就近访问。</p>
<p>&nbsp;&nbsp; </p>
<h2>&nbsp;动态页面加速服务 </h2>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;动态页面加速是针对网站、网页中通过程序接口提取放在数据库或其他存储媒体中的内容而应运而产生的服务，这些内容需要不断更新保持新鲜，终端客户每次的访问内容都有所不同，利用基本的CDN缓存技术无法解决动态加速需求。鹏博士数据通过运用 CDN网络智能系统，并融合多种目前先进的动态加速技术（三次握手本地完成、优化的TCP、动态压缩技术等），对CDN网络进行分析设计与优化，动态优化的同时结合基于地域的CDN访问，显著提高跨地域跨多个运营商的实时数据的用户访问速度。</p>
<p>&nbsp;</p>
<p><img src="http://my.csdn.net/uploads/201208/20/1345458701_8416.jpg" alt=""><br>
</p>
<h2>&nbsp;流媒体加速服务 </h2>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;流媒体加速服务是将源站大量的流媒体内容（视频、声音和数据等）通过良好的链路传输到CDN流媒体专用存储设备中，并通过CDN网络本身具有的协同性能，同步分发到位于各地的CDN小网络中的专用流媒体访问服务器上，这些服务器位于各省市主要运营商网络节点。CDN网络中智能网络分配技术将终端用户对网站的请求指向响应效果最好的流媒体服务节点上，通过这些流媒体服务节点，向用户提供稳定可靠的流媒体服务。</p>
<h2>&nbsp;文件下载加速服务 </h2>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;近年随着中国网游市场的快速增长，市场规模达百亿元以上，规模经济扩充的同时，网游运营商无法预估的内公测期间的带宽流量突发需求、终端用户的下载速度保证、高昂的运营成本，成为网游运营商急待解决的问题。为此鹏博士数据与“深圳迅雷网络技术有限公司”强强联手，为网游行业下载服务量身定制——“CDN闪电下载”网络加速解决方案，此方案利用鹏博士数据全国范围内广泛分布且覆盖多个固网运营商的CDN网络节点优势，再结合迅雷网络先进的P2SP技术和中国互联网最流行的迅雷应用服务软件，将网络上存在的服务器和计算机资源进行有效整合，帮助游戏运营商解决分布式存储、负载均衡、网络请求的重定向和资源管理等问题，大大减少游戏运营商服务器带宽资源成本同时，还提供终端用户处在网络边缘的就近资源节点服务，使用户能用最快的速度获得健康稳定的下载质量。&nbsp;</p>
<p><br>
</p>
<p><br>
</p>
<p><img src="http://my.csdn.net/uploads/201208/20/1345458724_3280.jpg" alt=""><br>
</p>
<h2>&nbsp;SSL加速服务 </h2>
<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SSL(加密套接字协议)是一种应用广泛的Web信息安全传送协议，是目前安全互联网传送的标准；但由于SSL加密算法和密码，造成服务器CPU资源瓶颈，降低服务器性能。CDN采用专门的SSL加速设备和软件，在各个CDN节点上提供加速服务。当用户请求到达节点之后，由节点SSL加速设备完成加密和解密的工作；在保证安全性的前提下提高SSL应用的响应速度。</p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>37</wp:post_id>
		<wp:post_date>2012-08-20 10:11:00</wp:post_date>
		<wp:post_date_gmt>2012-08-20 02:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%90%e8%bd%ac%e3%80%91cdn%e7%9a%84%e5%85%a8%e7%a7%b0%e6%98%afcontent-delivery-network%ef%bc%8c%e5%8d%b3%e5%86%85%e5%ae%b9%e5%88%86%e5%8f%91%e7%bd%91%e7%bb%9c-%e7%bd%91%e7%bb%9c%e5%8a%a0%e9%80%9f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：http状态码一览表</title>
		<link>http://localhost/wp/?p=38</link>
		<pubDate>Fri, 17 Aug 2012 08:21:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=38</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">转自：http://wenku.baidu.com/view/db4ff500cc175527072208b0.html</span></p>
<p></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">http状态码一览表</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">1**：请求收到，继续处理</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">2**：操作成功收到，分析、接受</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">3**：完成此请求必须进一步处理</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">4**：请求包含一个错误语法或不能完成</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">5**：服务器执行一个完全有效请求失败</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">100——客户必须继续发出请求</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">101——客户要求服务器根据请求转换HTTP协议版本</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">200——交易成功</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">201——提示知道新文件的URL</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">202——接受和处理、但处理未完成</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">203——返回信息不确定或不完整</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">204——请求收到，但返回信息为空</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">205——服务器完成了请求，用户代理必须复位当前已经浏览过的文件</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">206——服务器已经完成了部分用户的GET请求</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">300——请求的资源可在多处得到</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">301——删除请求数据</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">302——在其他地址发现了请求数据</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">303——建议客户访问其他URL或访问方式</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">304——客户端已经执行了GET，但文件未变化</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">305——请求的资源必须从服务器指定的地址得到</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">306——前一版本HTTP中使用的代码，现行版本中不再使用</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">307——申明请求的资源临时性删除</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">400——错误请求，如语法错误</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">401——请求授权失败</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">402——保留有效ChargeTo头响应</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">403——请求不允许</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">404——没有发现文件、查询或URl</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">405——用户在Request-Line字段定义的方法不允许</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">406——根据用户发送的Accept拖，请求资源不可访问</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">407——类&#20284;401，用户必须首先在代理服务器上得到授权</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">408——客户端没有在用户指定的饿时间内完成请求</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">409——对当前资源状态，请求不能完成</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">410——服务器上不再有此资源且无进一步的参考地址</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">411——服务器拒绝用户定义的Content-Length属性请求</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">412——一个或多个请求头字段在当前请求中错误</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">413——请求的资源大于服务器允许的大小</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">414——请求的资源URL长于服务器允许的长度</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">415——请求资源不支持请求项目&#26684;式</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">416——请求中包含Range请求头字段，在当前请求资源范围内没有range指示&#20540;，请求</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">也不包含If-Range请求头字段</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">417——服务器不满足请求Expect头字段指定的期望&#20540;，如果是代理服务器，可能是下</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">一级服务器不能满足请求</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">500——服务器产生内部错误</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">501——服务器不支持请求的函数</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">502——服务器暂时不可用，有时是为了防止发生系统过载</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">503——服务器过载或暂停维修</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">504——关口过载，服务器使用另一个关口或服务来响应用户，等待时间设定&#20540;较长</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">505——服务器不支持或拒绝支请求头中指定的HTTP版本</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">==========================================================</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">英文版：</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">100：Continue</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">101：Switching Protocols</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">102：Processing</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">200：OK</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">201：Created</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">202：Accepted</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">203：Non-Authoriative Information</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">204：No Content</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">205：Reset Content</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">206：Partial Content</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">207：Multi-Status</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">300：Multiple Choices</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">301：Moved Permanently</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">302：Found</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">303：See Other</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">304：Not Modified</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">305：Use Proxy</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">306：(Unused)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">307：Temporary Redirect</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">400：Bad Request</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">401：Unauthorized</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">402：Payment Granted</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">403：Forbidden</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">404：File Not Found</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">405：Method Not Allowed</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">406：Not Acceptable</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">407：Proxy Authentication Required</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">408：Request Time-out</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">409：Conflict</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">410：Gone</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">411：Length Required</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">412：Precondition Failed</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">413：Request Entity Too Large</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">414：Request-URI Too Large</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">415：Unsupported Media Type</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">416：Requested range not satisfiable</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">417：Expectation Failed</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">422：Unprocessable Entity</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">423：Locked</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">424：Failed Dependency</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">500：Internal Server Error</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">501：Not Implemented</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">502：Bad Gateway</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">503：Service Unavailable</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">504：Gateway Timeout</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">505：HTTP Version Not Supported</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">507：Insufficient Storage</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">完整的 HTTP 1.1规范说明书来自于RFC 2616，你可以在http://www.rfc-editor.org/在线查阅。HTTP 1.1的状态码被标记为新特性，因为许多浏览器只支持 HTTP 1.0。你应只把状态码发送给支持 HTTP 1.1的客户端，支持协议版本可以通过调用request.getRequestProtocol来检查。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">本部分余下的内容会详细地介绍 HTTP 1.1中的状态码。这些状态码被分为五大类：</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">100-199 用于指定客户端应相应的某些动作。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">200-299 用于表示请求成功。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">300-399 用于已经移动的文件并且常被包含在定位头信息中指定新的地址信息。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">400-499 用于指出客户端的错误。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">500-599 用于支持服务器错误。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">HttpServletResponse中的常量代表关联不同标准消息的状态码。在servlet程序中，你会更多地用到这些常量的标识来使用状态码。例如：你一般会使用response.setStatus(response.SC_NO_CONTENT)而不是 response.setStatus(204)，因为后者不易理解而且容易导致错误。但是，你应当注意到服务器允许对消息轻微的改变，而客户端只注意状态码的数字&#20540;。所以服务器可能只返回
 HTTP/1.1 200 而不是 HTTP/1.1 200 OK。 </span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">100 (Continue/继续)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">如果服务器收到头信息中带有100-continue的请求，这是指客户端询问是否可以在后续的请求中发送附件。在这种情况下，服务器用100(SC_CONTINUE)允许客户端继续或用417 (ExpectationFailed)告诉客户端不同意接受附件。这个状态码是 HTTP 1.1中新加入的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">101 (Switching Protocols/转换协议)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">101 (SC_SWITCHING_PROTOCOLS)状态码是指服务器将按照其上的头信息变为一个不同的协议。这是 HTTP 1.1中新加入的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">200 (OK/正常)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">200 (SC_OK)的意思是一切正常。一般用于相应GET和POST请求。这个状态码对servlet是缺省的；如果没有调用setStatus方法的话，就会得到200。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">201 (Created/已创建)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">201 (SC_CREATED)表示服务器在请求的响应中建立了新文档；应在定位头信息中给出它的URL。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">202 (Accepted/接受)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">202 (SC_ACCEPTED)告诉客户端请求正在被执行，但还没有处理完。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">203 (Non-Authoritative Information/非官方信息)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">状态码203 (SC_NON_AUTHORITATIVE_INFORMATION)是表示文档被正常的返回，但是由于正在使用的是文档副本所以某些响应头信息可能不正确。这是 HTTP 1.1中新加入的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">204 (No Content/无内容)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">在并没有新文档的情况下，204 (SC_NO_CONTENT)确保浏览器继续显示先前的文档。这各状态码对于用户周期性的重载某一页非常有用，并且你可以确定先前的页面是否已经更新。例如，某个servlet可能作如下操作：</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">int pageVersion=Integer.parseInt(request.getParameter(&quot;pageVersion&quot;));</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">if (pageVersion &gt;;= currentVersion) {</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">response.setStatus(response.SC_NO_CONTENT);</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">} else {</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">// Create regular page</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">}</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">但是，这种方法对通过刷新响应头信息或等价的HTML标记自动重载的页面起作用，因为它会返回一个204状态码停止以后的重载。但基于JavaScript脚本的自动重载在这种情况下仍然需要能够起作用。可以阅读本书7.2 ( HTTP 1.1 Response Headers and Their Meaning/HTTP 1.1响应头信息以及他们的意义)部分的详细讨论。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">205 (Reset Content/重置内容)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">重置内容205 (SC_RESET_CONTENT)的意思是虽然没有新文档但浏览器要重置文档显示。这个状态码用于强迫浏览器清除表单域。这是 HTTP 1.1中新加入的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">206 (Partial Content/局部内容)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">206 (SC_PARTIAL_CONTENT)是在服务器完成了一个包含Range头信息的局部请求时被发送的。这是 HTTP 1.1中新加入的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">300 (Multiple Choices/多重选择)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">300 (SC_MULTIPLE_CHOICES)表示被请求的文档可以在多个地方找到，并将在返回的文档中列出来。如果服务器有首选设置，首选项将会被列于定位响应头信息中。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">301 (Moved Permanently)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">301 (SC_MOVED_PERMANENTLY)状态是指所请求的文档在别的地方；文档新的URL会在定位响应头信息中给出。浏览器会自动连接到新的URL。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">302 (Found/找到)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">与301有些类&#20284;，只是定位头信息中所给的URL应被理解为临时交换地址而不是永久的。注意：在 HTTP 1.0中，消息是临时移动(Moved Temporarily)的而不是被找到，因此HttpServletResponse中的常量是SC_MOVED_TEMPORARILY不是我们以为的SC_FOUND。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">注意</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">代表状态码302的常量是SC_MOVED_TEMPORARILY而不是SC_FOUND。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">状态码302是非常有用的因为浏览器自动连接在定为响应头信息中给出的新URL。这非常有用，而且为此有一个专门的方法——sendRedirect。使用response.sendRedirect(url)比调用response.setStatus(response.SC_MOVED_TEMPORARILY)和response.setHeader(&quot;Location&quot;,
 url)多几个好处。首先，response.sendRedirect(url)方法明显要简单和容易。第二，servlet自动建立一页保存这一连接以提供给那些不能自动转向的浏览器显示。最后，在servlet 2.2版本（J2EE中的版本）中，sendRedirect能够处理相对路径，自动转换为绝对路径。但是你只能在2.1版本中使用绝对路径。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">如果你将用户转向到站点的另一页中，你要用 HttpServletResponse 中的 encodeURL 方法传送URL。这么做可预防不断使用基于URL重写的会话跟踪的情况。URL重写是一种在你的网站跟踪不使用 cookies 的用户的方法。这是通过在每一个URL尾部附加路径信息实现的，但是 servlet 会话跟踪API会自动的注意这些细节。会话跟踪在第九章讨论，并且养成使用
 encodeURL 的习惯会使以后添加会话跟踪的功能更容易很多。 </span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">核心技巧</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">如果你将用户转向到你的站点的其他页面，用response.sendRedirect(response.encodeURL(url)) 的方式事先计划好会话跟踪(session tracking)要比只是调用response.sendRedirect(url) 好的多。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">这个状态码有时可以与301交换使用。例如，如果你错误的访问了http://host/~user（路径信息不完整），有些服务器就会回复301状态码而有些则回复302。从技术上说，如果最初的请求是GET浏览器只是被假定自动转向。如果想了解更多细节，请看状态码307的讨论。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">303 (See Other/参见其他信息)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">这个状态码和 301、302 相&#20284;，只是如果最初的请求是 POST，那么新文档（在定位头信息中给出）药用 GET 找回。这个状态码是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">304 (Not Modified/为修正)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">当客户端有一个缓存的文档，通过提供一个 If-Modified-Since 头信息可指出客户端只希望文档在指定日期之后有所修改时才会重载此文档，用这种方式可以进行有条件的请求。304 (SC_NOT_MODIFIED)是指缓冲的版本已经被更新并且客户端应刷新文档。另外，服务器将返回请求的文档及状态码 200。servlet一般情况下不会直接设置这个状态码。它们会实现getLastModified方法并根据修正日期让默认服务方法处理有条件的请求。这个方法的例程已在2.8部分(An
 Example Using ServletInitialization and Page Modification Dates/一个使用servlet初始化和页面修正日期的例子)给出。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">305 (Use Proxy/使用代理)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">305 (SC_USE_PROXY)表示所请求的文档要通过定位头信息中的代理服务器获得。这个状态码是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">307 (Temporary Redirect/临时重定向)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">浏览器处理307状态的规则与302相同。307状态被加入到 HTTP 1.1中是由于许多浏览器在收到302响应时即使是原始消息为POST的情况下仍然执行了错误的转向。只有在收到303响应时才假定浏览器会在POST请求时重定向。添加这个新的状态码的目的很明确：在响应为303时按照GET和POST请求转向；而在307响应时则按照GET请求转向而不是POST请求。注意：由于某些原因在HttpServletResponse中还没有与这个状态对应的常量。该状态码是新加入HTTP1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">注意</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">在 HttpServletResponse 中没有SC_TEMPORARY_REDIRECT 常量，所以你只能显示的使用307状态码。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">400 (Bad Request/错误请求)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">400 (SC_BAD_REQUEST)指出客户端请求中的语法错误。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">401 (Unauthorized/未授权)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">401 (SC_UNAUTHORIZED)表示客户端在授权头信息中没有有效的身份信息时访问受到密码保护的页面。这个响应必须包含一个WWW-Authenticate的授权信息头。例如，在本书4.5部分中的“Restricting Access to Web Pages./限制访问Web页。”</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">403 (Forbidden/禁止)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">403 (SC_FORBIDDEN)的意思是除非拥有授权否则服务器拒绝提供所请求的资源。这个状态经常会由于服务器上的损坏文件或目录许可而引起。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">404 (Not Found/未找到)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">404 (SC_NOT_FOUND)状态每个网络程序员可能都遇到过，他告诉客户端所给的地址无法找到任何资源。它是表示“没有所访问页面”的标准方式。这个状态码是常用的响应并且在HttpServletResponse类中有专门的方法实现它：sendError(&quot;message&quot;)。相对于setStatus使用sendError得好处是：服务器会自动生成一个错误页来显示错误信息。但是，Internet
 Explorer 5浏览器却默认忽略你发挥的错误页面并显示其自定义的错误提示页面，虽然微软这么做违反了 HTTP 规范。要关闭此功能，在工具菜单里，选择Internet选项，进入高级标签页，并确认“显示友好的 HTTP 错误信息”选项（在我的浏览器中是倒数第8各选项）没有被选。但是很少有用户知道此选项，因此这个特性被IE5隐藏了起来使用户无法看到你所返回给用户的信息。而其他主流浏览器及IE4都完全的显示服务器生成的错误提示页面。可以参考图6-3及6-4中的例子。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">核心警告</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">默认情况下，IE5忽略服务端生成的错误提示页面。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">405 (Method Not Allowed/方法未允许)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">405 (SC_METHOD_NOT_ALLOWED)指出请求方法(GET, POST, HEAD, PUT, DELETE, 等)对某些特定的资源不允许使用。该状态码是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">406 (Not Acceptable/无法访问)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">406 (SC_NOT_ACCEPTABLE)表示请求资源的MIME类型与客户端中Accept头信息中指定的类型不一致。见本书7.2部分中的表7.1(HTTP 1.1 Response Headers and Their Meaning/HTTP 1.1响应头信息以及他们的意义)中对MIME类型的介绍。406是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">407 (Proxy Authentication Required/代理服务器认证要求)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">407 (SC_PROXY_AUTHENTICATION_REQUIRED)与401状态有些相&#20284;，只是这个状态用于代理服务器。该状态指出客户端必须通过代理服务器的认证。代理服务器返回一个Proxy-Authenticate响应头信息给客户端，这会引起客户端使用带有Proxy-Authorization请求的头信息重新连接。该状态码是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">408 (Request Timeout/请求超时)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">408 (SC_REQUEST_TIMEOUT)是指服务端等待客户端发送请求的时间过长。该状态码是新加入 HTTP1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">409 (Conflict/冲突)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">该状态通常与PUT请求一同使用，409 (SC_CONFLICT)状态常被用于试图上传版本不正确的文件时。该状态码是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">410 (Gone/已经不存在)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">410 (SC_GONE)告诉客户端所请求的文档已经不存在并且没有更新的地址。410状态不同于404，410是在指导文档已被移走的情况下使用，而404则用于未知原因的无法访问。该状态码是新加入 HTTP 1.1中的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">411 (Length Required/需要数据长度)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">411 (SC_LENGTH_REQUIRED)表示服务器不能处理请求（假设为带有附件的POST请求），除非客户端发送Content-Length头信息指出发送给服务器的数据的大小。该状态是新加入 HTTP1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">412 (Precondition Failed/先决条件错误)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">412 (SC_PRECONDITION_FAILED)状态指出请求头信息中的某些先决条件是错误的。该状态是新加入 HTTP 1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">413 (Request Entity Too Large/请求实体过大)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">413 (SC_REQUEST_ENTITY_TOO_LARGE)告诉客户端现在所请求的文档比服务器现在想要处理的要大。如果服务器认为能够过一段时间处理，则会包含一个Retry-After的响应头信息。该状态是新加入 HTTP 1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">414 (Request URI Too Long/请求URI过长)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">414 (SC_REQUEST_URI_TOO_LONG)状态用于在URI过长的情况时。这里所指的“URI”是指URL中主机、域名及端口号之后的内容。例如：在URL--http://www.y2k-disaster.com:8080/we/look/silly/now/中URI是指/we/look/silly/now/。该状态是新加入 HTTP 1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">415 (Unsupported Media Type/不支持的媒体&#26684;式)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">415 (SC_UNSUPPORTED_MEDIA_TYPE)意味着请求所带的附件的&#26684;式类型服务器不知道如何处理。该状态是新加入 HTTP 1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">416 (Requested Range Not Satisfiable/请求范围无法满足)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">416表示客户端包含了一个服务器无法满足的Range头信息的请求。该状态是新加入 HTTP 1.1的。奇怪的是，在servlet 2.1版本API的HttpServletResponse中并没有相应的常量代表该状态。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">注意</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">在servlet 2.1的规范中，类HttpServletResponse并没有SC_REQUESTED_RANGE_NOT_SATISFIABLE 这样的常量，所以你只能直接使用416。在servlet 2.2版本之后都包含了此常量。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">417 (Expectation Failed/期望失败)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">如果服务器得到一个带有100-continue&#20540;的Expect请求头信息，这是指客户端正在询问是否可以在后面的请求中发送附件。在这种情况下，服务器也会用该状态(417)告诉浏览器服务器不接收该附件或用100 (SC_CONTINUE)状态告诉客户端可以继续发送附件。该状态是新加入 HTTP 1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">500 (Internal Server Error/内部服务器错误)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">500 (SC_INTERNAL_SERVER_ERROR) 是常用的“服务器错误”状态。该状态经常由CGI程序引起也可能（但愿不会如此！）由无法正常运行的或返回头信息&#26684;式不正确的servlet引起。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">501 (Not Implemented/未实现)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">501 (SC_NOT_IMPLEMENTED)状态告诉客户端服务器不支持请求中要求的功能。例如，客户端执行了如PUT这样的服务器并不支持的命令。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">502 (Bad Gateway/错误的网关)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">502 (SC_BAD_GATEWAY)被用于充当代理或网关的服务器；该状态指出接收服务器接收到远端服务器的错误响应。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">503 (Service Unavailable/服务无法获得)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">状态码503 (SC_SERVICE_UNAVAILABLE)表示服务器由于在维护或已经超载而无法响应。例如，如果某些线程或数据库连接池已经没有空闲则servlet会返回这个头信息。服务器可提供一个Retry-After头信息告诉客户端什么时候可以在试一次。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">504 (Gateway Timeout/网关超时)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">该状态也用于充当代理或网关的服务器；它指出接收服务器没有从远端服务器得到及时的响应。该状态是新加入 HTTP 1.1的。</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">&nbsp;</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">505 (HTTP Version Not Supported/不支持的HTTP 版本)</span></p>
<p><span style="font-family:Microsoft YaHei; font-size:24px; color:#000099">505 (SC_HTTP_VERSION_NOT_SUPPORTED)状态码是说服务器并不支持在请求中所标明 HTTP 版本。该状态是新加入 HTTP 1.1的。</span></p>
<br>
<p><br>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>38</wp:post_id>
		<wp:post_date>2012-08-17 16:21:00</wp:post_date>
		<wp:post_date_gmt>2012-08-17 08:21:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ahttp%e7%8a%b6%e6%80%81%e7%a0%81%e4%b8%80%e8%a7%88%e8%a1%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>java中实现HashMap中的按照key的字典顺序排序输出</title>
		<link>http://localhost/wp/?p=39</link>
		<pubDate>Fri, 17 Aug 2012 07:43:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=39</guid>
		<description></description>
		<content:encoded><![CDATA[<br>
<p><span style="font-size:18px; color:#000099">关键代码</span></p>
<p><span style="font-size:18px; color:#000099"><br>
</span></p>
<pre name="code" class="java"> HashMap&lt;String, String&gt; maptest =new  HashMap&lt;String, String&gt;();
		 maptest.put(&quot;1天&quot;,&quot;day1&quot;);
		 maptest.put(&quot;5天&quot;,&quot;day5&quot;);
		 maptest.put(&quot;4天&quot;,&quot;day4&quot;);
		 maptest.put(&quot;2天&quot;,&quot;day2&quot;);
		 maptest.put(&quot;3天&quot;,&quot;day3&quot;);
		 
		 Collection&lt;String&gt; keyset= maptest.keySet();
		 List&lt;String&gt; list = new ArrayList&lt;String&gt;(keyset);
		 
		 //对key键值按字典升序排序
		 Collections.sort(list);
		 
		 
		 for (int i = 0; i &lt; list.size(); i++) {
			 System.out.println(&quot;key键---值: &quot;+list.get(i)+&quot;,&quot;+maptest.get(list.get(i)));
		 }</pre><br>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>39</wp:post_id>
		<wp:post_date>2012-08-17 15:43:00</wp:post_date>
		<wp:post_date_gmt>2012-08-17 07:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%ad%e5%ae%9e%e7%8e%b0hashmap%e4%b8%ad%e7%9a%84%e6%8c%89%e7%85%a7key%e7%9a%84%e5%ad%97%e5%85%b8%e9%a1%ba%e5%ba%8f%e6%8e%92%e5%ba%8f%e8%be%93%e5%87%ba</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>在linux下批量更改目录下的所有文件名</title>
		<link>http://localhost/wp/?p=40</link>
		<pubDate>Fri, 17 Aug 2012 06:44:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=40</guid>
		<description></description>
		<content:encoded><![CDATA[<p><pre name="code" class="plain">cd /home/bwgang/temp;
for file in *.*;
do newname=$file&quot;.bak&quot;;
mv -f $file $newname 2&gt;/dev/null;
done</pre><br>
在指定目录下的所有文件名后添加.bak的后缀</p>
<p><br>
</p>
<p><br>
</p>
<p><br>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>40</wp:post_id>
		<wp:post_date>2012-08-17 14:44:00</wp:post_date>
		<wp:post_date_gmt>2012-08-17 06:44:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9c%a8linux%e4%b8%8b%e6%89%b9%e9%87%8f%e6%9b%b4%e6%94%b9%e7%9b%ae%e5%bd%95%e4%b8%8b%e7%9a%84%e6%89%80%e6%9c%89%e6%96%87%e4%bb%b6%e5%90%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>【转载】TestNG 简易指南</title>
		<link>http://localhost/wp/?p=41</link>
		<pubDate>Tue, 14 Aug 2012 01:05:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=41</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>转载---原文地址：<a target="_blank" href="http://dev.sei.pku.edu.cn/trac/pkuas/wiki/testng">http://dev.sei.pku.edu.cn/trac/pkuas/wiki/testng</a><br>
</strong></p>
<p><strong><br>
</strong></p>
<p><strong>TestNG 简易指南</strong></p>
<p>本文内容包括： </p>
<p>• 属性介绍• TestNG 的示例代码 • 运行 TestNG 的 Ant 脚本 • 重新运行前次运行失败的测试用例 • 分布式测试特性 • TestNG 的多线程支持 • 总结 • 参考资料 • 关于作者 随着项目的成长，单元测试的数量会迅猛增长。这就带来不少问题。首先数量巨大的单元测试难于管理，运行一遍耗时巨大。其次，有时某个微小改动可能只需要运行某个测试文件中的部分单元测试就可以，这时重新运行全部测试用例就没有必要了。其三，大多数项目需要用到多线程特性，为使用了多线程特性的代码写测试用例相当麻烦且容易出错。本文将利用
 TestNG 提供的新特性，解决以上提到的问题。</p>
<blockquote>
<p>1 TestNG的属性介绍：</p>
</blockquote>
<blockquote>
<p>属性名 描述 是否必须</p>
</blockquote>
<p>annotations 字符串&quot;JDK&quot;或者&quot;Javadoc&quot;. 定义测试适用的注释类型.如果使用&quot;Javadoc&quot;, 则需要同时指定&quot;sourcedir&quot;. 不是必须. 如果适用jkd5则默认为&quot;JDK&quot;，如果适用jdk1.4则默认为&quot;Javadoc&quot;</p>
<p>classfilesetref 要运行的测试类的FileSet结构的引用. </p>
<p>classpath 要运行的测试的PATH-like 结构. </p>
<p>classpathref 要运行的测试的PATH-like 结构的引用. </p>
<p>dumpCommand 打印TestNG启动命令. 不是必须,默认false</p>
<p>enableAssert 开启JDK 1.4的断言. 不是必须,默认true</p>
<p>failureProperty 失败发生时要设置的属性的名称. 只有haltonfailure没有设置时才有效. 不是必须.</p>
<p>haltonfailure 如果测试运行期间发生失败，停止构造过程. 不是必须,默认false</p>
<p>haltonskipped 如果发生至少一次测试跳过，停止构造过程. 不是必须,false</p>
<p>groups 要运行的组列表，空&#26684;或逗号分隔 </p>
<p>excludedgroups 排除在外的组列表，空&#26684;或逗号分隔</p>
<p>jvm 使用的jvm，将被Runtime.exec()运行 java</p>
<p>listeners 逗号或空&#26684;分隔的全路径类列表，需要实现org.testng.ITestListener或org.testng.IReporter 不是必须</p>
<p>outputdir 报告输出目录 不是必须,默认输出到test-output.</p>
<p>skippedProperty 当发生测试被跳过时设置的property的名称.只有当haltonskipped没有设置时才使用 不是必须</p>
<p>sourcedir 用于jdk1.4测试的PATH-like结构(使用JavaDoc形式的annotations) </p>
<p>sourcedirref 用于jdk1.4测试的PATH-like结构的引用(使用JavaDoc形式的annotations) </p>
<p>suiteRunnerClass TestNG启动器的全路径名称 不是必须. 默认使用org.testng.TestNG</p>
<p>parallel 运行测试时使用的并行模式 - methods或者tests 不是必须 - 如果没有指定，并行模式不被选择</p>
<p>threadCount 运行时使用的线程数量。如果并行模式被同时指定否则忽略。 默认1</p>
<p>testJar 包含测试和套件定义的jar包路径</p>
<p>timeOut 所有测试必须运行完成的最大超时时间，单位毫秒 </p>
<p>useDefaultListeners 是否使用默认监听器和报告器. 默认true.</p>
<p>workingDir 运行TestNG前ant任务应该转移到的目录。</p>
<p>xmlfilesetref 用于要测试的套件定义的FileSet结构的引用 </p>
<p>suitename 设置测试套件的默认名称如果在suite的xml文件或者源代码中都没有被定义。 不是必须，默认设置为&quot;Ant suite&quot;</p>
<p>testname 设置测试的默认名称如果在suite的xml文件或者源代码中都没有被定义。 不是必须，默认设置为&quot;Ant test&quot;</p>
<p><strong>2 TestNG 的示例代码</strong></p>
<blockquote>
<p>TestNG 提供了从命令行运行测试用例的方法。下面将首先从命令行运行测试用例。假设有如下的测试用例组：</p>
</blockquote>
<blockquote>
<p>列表 1. TestNG 示例代码</p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG1.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/chrome/common/attachment.png" alt="没有图像 &quot;TestNG1.png&quot; 附加到 testng" title="没有图像 &quot;TestNG1.png&quot; 附加到 testng"></a></p>
</blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG2.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG2.png" alt=""></a></p>
</blockquote>
<blockquote>
<blockquote>
<p>运行 TestNG 的 Ant 脚本</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>为了运行这组测试用例，构建了如下的 Ant 运行脚本：</p>
</blockquote>
</blockquote>
<p></p>
<blockquote>
<blockquote>
<p>列表 2. 运行测试用例组的 Ant 脚本 build.xml 文件</p>
</blockquote>
</blockquote>
<p></p>
<blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG3.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG3.png" alt=""></a></p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>运行之后的结果如下：</p>
</blockquote>
<blockquote>
<p>图 1. 命令行运行 TestNG 的结果</p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG4.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG4.png" alt=""></a></p>
</blockquote>
</blockquote>
<p>运行完成之后，会在运行目录下生成一个test-output 目录。如图 2 所示：</p>
<p>图 2. 生成的 test-output 目录</p>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG5.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG5.png" alt=""></a></p>
</blockquote>
<blockquote>
<p>该目录中包含有 html 形式的运行结果的报告，通过命令 start test-outputindex.html 可以查看生成的测试报告</p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG6.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG6.png" alt=""></a></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>该目录中有一个 testng-failed.xml 文件，该文件可以被用来运行前一次运行失败的所有测试用例。下文将会详细介绍使用该文件的步骤。</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>重新运行前次运行失败的测试用例 </p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>随着项目开发的进行，单元测试的数量也会成倍的增加。有时仅仅有数量很小的某几个测试用例会运行失败。在这种情况之下，对于每一次修改，可能并不需要跑完所有的测试用例。只需要重新运行前次运行失败的测试用例。TestNG 内建了重新运行上次失败测试用例的功能，下文将会给出重新运行前次错误测试用例的步骤。</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>运行一组测试用例，如果这一组测试用例中有失败的用例，TestNG 就会在输出目录中创建一个叫做 testng-failed.xml 的配置文件。这个文件记录了本组测试用例中运行失败的测试用例。使用该文件，用户可以快速的重新运行上次运行失败的测试用例。而无需运行整个测试用例组。如前文所述，运行完 Ant 脚本之后，会在脚本运行的目录之中生成一个 test-output 目录。该目录中，包含 testng-failed.xml 文件。可以用如下的命令运行被标记为运行失败的测试用例。</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>列表 3. 重新运行前次运行失败的测试用例</p>
</blockquote>
</blockquote>
</blockquote>
<p></p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG7.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG7.png" alt=""></a></p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>运行结果如下：</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>图 4. 重新运行前次运行失败的测试用例的输出结果</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG8.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG8.png" alt=""></a></p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>分布式测试特性</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>随着测试用例规模的扩大，分组数量的增加。使用一台主机来运行所有的测试用例需要消耗大量的时间。为了解决这个问题，TestNG 提供了分布式特性。本文将介绍使用 TestNG 分布特征——使用多台主机同时运行测试用例。TestNG 提供的分布式模型如下所示：</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p></p>
<blockquote>
<blockquote>
<blockquote>
<p>图 5. TestNG 提供的分布式模型</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG9.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG9.png" alt=""></a></p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>这是一个典型的 master/slave。在这个模型中，有一个负责调度的 master 节点，和一些负责执行任务的 slave 节点。下文将介绍如何配置这样一个分布式模型。</p>
</blockquote>
<blockquote>
<blockquote>
<p>首先，在远程机器上部署 slave 节点。如上图所示，在远程节点上不仅要配置 TestNG 运行环境，还需要复制测试用例文件。</p>
</blockquote>
</blockquote>
<p>图 6. 将需要运行的测试用例部署到远程机器上</p>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG10.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG10.png" alt=""></a></p>
</blockquote>
<blockquote>
<blockquote>
<p>然后在这台远程机器上以 “slave” 模式启动一个 TestNG 实例，使用如下命令：java –classpath &lt;testng_path&gt;;&lt;testcase_path&gt; org.testng.TestNG -slave &lt;port&gt;
</p>
</blockquote>
</blockquote>
<blockquote>
<p>图 7. 以“slave”模式启动一个 TestNG 实例</p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG11.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG11.png" alt=""></a></p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>这样，一个 TestNG 实例将会被启动，并且等待即将到来的连接请求。如果有需要，可以在多台机器上以 slave 模式启动 TestNG 实例。</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>完成了所有 slave 实例的启动之后，将所有启动 slave 实例的主机信息记录在一个配置文件中，如图 8 所示：</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<p>图 8. 分布式运行的配置文件</p>
</blockquote>
</blockquote>
<p></p>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG12.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG12.png" alt=""></a></p>
</blockquote>
<blockquote>
<p>然后使用该配置文件启动 TestNG 的 master 实例。</p>
</blockquote>
<blockquote>
<p>列表 4. 启动 TestNG 的 master 实例</p>
</blockquote>
<p></p>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG13.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG13.png" alt=""></a></p>
</blockquote>
<blockquote>
<p>这样，所有的测试用例，将会被随机的分配到多个 slave 实例上运行。图9给出了在一个 slave 节点上运行测试用例的结果。</p>
</blockquote>
<blockquote>
<blockquote>
<p>图 9. 分布式运行的 TestNG 测试用例结果</p>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG14.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG14.png" alt=""></a></p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>TestNG 的多线程支持</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>测试用例分组中，针对网络应用的测试用例往往需要在多线程环境下运行。TestNG 为多线程运行某个测试用例提供了方便的内建支持。这可以通过在测试用例的方法前制定 annotation @Test 的属性来完成。</p>
</blockquote>
<blockquote>
<p>列表 5. 设置多线程属性运行测试用例</p>
</blockquote>
<p></p>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG15.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG15.png" alt=""></a></p>
</blockquote>
<blockquote>
<blockquote>
<p>这个属性表示，运行 multipleTest 方法总共 5 次，在 3 个线程中运行这五次调用。每个线程运行该方法的时间不超过 1000 毫秒。修改 build.xml 文件，运行 multiple 组。</p>
</blockquote>
</blockquote>
<blockquote>
<p>列表 6. 修改 build.xml 文件，运行 multiple 组。</p>
</blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG16.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/raw-attachment/wiki/testng/TestNG16.png" alt=""></a></p>
</blockquote>
<p></p>
<blockquote>
<p>图 10. 多线程运行测试用例 multipleTest 的结果</p>
</blockquote>
<blockquote>
<blockquote>
<p><a href="http://dev.sei.pku.edu.cn/trac/pkuas/attachment/wiki/testng/TestNG117.png" style="padding:0; border:none"><img src="http://dev.sei.pku.edu.cn/trac/pkuas/chrome/common/attachment.png" alt="没有图像 &quot;TestNG117.png&quot; 附加到 testng" title="没有图像 &quot;TestNG117.png&quot; 附加到 testng"></a></p>
</blockquote>
</blockquote>
<p><strong>总结：</strong></p>
<blockquote>
<p>本文希望通过场景和 TestNG 新特性的结合，可以为用户管理规模庞大的测试用例集有所帮助。场景中提到的分类方法，对实际项目中测试用例的管理具有帮助意义。其中，重跑失败的测试用例，分组运行，分布式运行，和多线程运行也是对于管理测试用例非常有帮助的特征。</p>
</blockquote>
<p>参考资料 </p>
<p>学习</p>
<p>• Eclipse 3.1 中使用TestNG：基于注释的单元测试框架 • “TestNG 使 Java 单元测试轻而易举”（Filippo Diotalevi，developerWorks，2005 年 1 月）：TestNG 不仅仅是性能强大、富于创新、易于扩充、使用灵活，它也展示了 Java 注释的一种有趣应用方式。 • 追求代码质量: JUnit 4 与 TestNG 的对比（Andrew Glover，developerWorks，2006 年 9 月）：探讨了这两种框架各自的独特之处，并阐述了
 TestNG 独有的三种高级测试特性。 • 使用 TestNG 的统计测试（Cedric Beust，beust.com，2006 年 2 月）：使用 TestNG 进行高级测试，本文由该项目的创始人编写。 • 追求代码质量：决心采用 FIT（Andrew Glover，developerWorks，2006 年 2 月）：有利于加强商业客户和开发者沟通的集成测试框架。 • developerWorks：查阅数百篇关于 Java 编程各个方面的文章。</p>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>41</wp:post_id>
		<wp:post_date>2012-08-14 09:05:00</wp:post_date>
		<wp:post_date_gmt>2012-08-14 01:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e3%80%90%e8%bd%ac%e8%bd%bd%e3%80%91testng-%e7%ae%80%e6%98%93%e6%8c%87%e5%8d%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>Selenium获取页面中树形结构的值，并存储到Vector中</title>
		<link>http://localhost/wp/?p=42</link>
		<pubDate>Mon, 13 Aug 2012 23:39:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=42</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-size:24px">如下：</span></p>
<p><span style="font-size:24px"></span></p>
<pre name="code" class="java">Vector&lt;String&gt; workgroups = new Vector&lt;String&gt;();
//从页面获取系统中所有的工作组
String arr[] = selenium.getText(&quot;id=grouptree&quot;).split(&quot;n&quot;);

if (arr.length&lt;0) {
 	System.out.println(&quot;-----------没有用户自定义创建的用户组----------n&quot;);
} else {
 	//把所有用户创建的用户组存储到workgroups中，不包括默认工作组
 	for (int i = 0; i &lt; arr.length; i++) {
 		workgroups.add(arr[0]);
 	}
}</pre><span style="font-size:24px"><br>
</span>
<p><span style="font-size:24px">selenium.getText根据id定位从页面获取到的树上节点的&#20540;存储为一串字符，各项使用换行符区分；</span></p>
<p><span style="font-size:24px">在代码中获取后，使用split切割后存储到字符串数组中，之后把数组中的&#20540;转储到Vector类型的变量workgroups中。</span></p>
<p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>42</wp:post_id>
		<wp:post_date>2012-08-14 07:39:00</wp:post_date>
		<wp:post_date_gmt>2012-08-13 23:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>selenium%e8%8e%b7%e5%8f%96%e9%a1%b5%e9%9d%a2%e4%b8%ad%e6%a0%91%e5%bd%a2%e7%bb%93%e6%9e%84%e7%9a%84%e5%80%bc%ef%bc%8c%e5%b9%b6%e5%ad%98%e5%82%a8%e5%88%b0vector%e4%b8%ad</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>java中httpclent以post方式提交请求时，http返回码是302重定向时，不自动跳转的处理</title>
		<link>http://localhost/wp/?p=12</link>
		<pubDate>Thu, 07 Feb 2013 02:11:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=12</guid>
		<description></description>
		<content:encoded><![CDATA[<p><pre name="code" class="java">场景：</pre></p>
<p>接口A：请求地址为http://www.test.com/test</p>
<p>接口A的功能，会把接收到的参数url写入到header的Location属性中</p>
<p><br>
</p>
<p>在java中，使用httpclient发送请求，</p>
<p>在以get方式发送请求时，http的返回码是200，自动处理了重定向</p>
<p>在以post方式发送请求时，http的返回码是302，不自动重定向，而且处于占用连接等待状态</p>
<p><br>
</p>
<p>此时的处理：</p>
<p>针对返回结果，处理返回码为302的情况</p>
<p><pre name="code" class="java">HttpPost httpPost = new HttpPost(url);  //请求地址
StringEntity reqEntity = new StringEntity(str);//表单
HttpResponse response = httpclient.execute(httppost);  
httppost.abort();//释放post请求

//处理http返回码302的情况
if (response.getStatusLine().getStatusCode() == 302) {
	String locationUrl=response.getLastHeader(&quot;Location&quot;).getValue();
	get(locationUrl);//跳转到重定向的url
	}</pre><br>
<br>
</p>
<p><br>
</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>12</wp:post_id>
		<wp:post_date>2013-02-07 10:11:00</wp:post_date>
		<wp:post_date_gmt>2013-02-07 02:11:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%adhttpclent%e4%bb%a5post%e6%96%b9%e5%bc%8f%e6%8f%90%e4%ba%a4%e8%af%b7%e6%b1%82%e6%97%b6%ef%bc%8chttp%e8%bf%94%e5%9b%9e%e7%a0%81%e6%98%af302%e9%87%8d%e5%ae%9a%e5%90%91%e6%97%b6%ef%bc%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>java中结合单例模式，控制单例类的某方法在被多线程调用时，只被1个线程调用执行，执行完毕后才被另一线程调用</title>
		<link>http://localhost/wp/?p=13</link>
		<pubDate>Sat, 19 Jan 2013 20:05:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=13</guid>
		<description></description>
		<content:encoded><![CDATA[<p>示例代码：</p><p>1、定义单例类</p><p><span class="span4br"></span></p><pre class="brush:java;toolbar:false;">package sigle;
 
//懒汉式单例类.在第一次调用的时候实例化 
 public class Singleton {
    //私有的默认构造子
    private Singleton() 
    {
        //初始化标识位
        setFlag(true);
    }
    //注意，这里没有final    
    private static Singleton single=null;
    //静态工厂方法 
    public synchronized  static Singleton getInstance() {
          if (single == null) {  
              single = new Singleton();
          }  
         return single;
    }
     
    //标识方法是否在调用中 true为调用中，false标识调用完毕
    private static boolean Flag;
     
     
    //演示方法调用
    public void Print() {
        setFlag(false);
        System.out.print("准备运行--》n");
        try {
            for (int i = 0; i &lt; 5; i++) {
                System.out.print("运行中。。。。。n");
                Thread.sleep(1000);
            }           
        } catch (Exception e) {
        }
        System.out.print("运行完毕--》n");
        //设置标识值为true
        setFlag(true);
    }
 
 
    public static boolean getFlag() {
        return Flag;
    }
 
 
    private void setFlag(boolean flag) {
        Flag = flag;
    }
 
 
 
 
 }</pre><span class="span4br"></span><p>2、调用此方法的类</p><span class="span4br"></span><pre class="brush:java;toolbar:false;">package sigle;
 
public class Run extends Thread{
 
    Singleton s2;
    public  Run() {
        s2=Singleton.getInstance(); 
    }
    public void run(){
        //循环判断
        while (true) {
            if (Singleton.getFlag()) {              
                 
                s2.Print();
                break;//执行完毕退出循环
            }else {
                try {
                    System.out.print(this.getName()+"在等待。。n");
                    Thread.sleep(1000);                 
                } catch (Exception e) {
                }
            }
             
        }
         
    }
}</pre><span class="span4br"></span><p><span class="span4br"></span>3、多线程并发调用</p><pre class="brush:java;toolbar:false;">package sigle;
 
public class MyRun {
 
    /**
     * @param args
     */
    public static void main(String[] args) {
        Run r1=new Run();
        Run r2=new Run();
        Run r3=new Run();
        r1.setName("线程1号");
        r2.setName("线程2号");
        r3.setName("线程3号");
        r1.start();
        r2.start();
        r3.start();
         
    }
 
}</pre><p><span class="span4br"></span></p><p>4、执行结果，验证print方法同时只被1个线程调用执行</p><p><span class="span4br"></span></p><p><span class="span4br"></span></p><pre name="code" class="html">准备运行--》
线程2号在等待。。
线程3号在等待。。
运行中。。。。。
运行中。。。。。
线程2号在等待。。
线程3号在等待。。
运行中。。。。。
线程2号在等待。。
线程3号在等待。。
线程3号在等待。。
线程2号在等待。。
运行中。。。。。
运行中。。。。。
线程3号在等待。。
线程2号在等待。。
运行完毕--》
准备运行--》
运行中。。。。。
线程3号在等待。。
运行中。。。。。
线程3号在等待。。
运行中。。。。。
线程3号在等待。。
线程3号在等待。。
运行中。。。。。
运行中。。。。。
线程3号在等待。。
运行完毕--》
线程3号在等待。。
准备运行--》
运行中。。。。。
运行中。。。。。
运行中。。。。。
运行中。。。。。
运行中。。。。。
运行完毕--》
</pre><p><span class="span4br"></span><span class="span4br"></span></p><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>13</wp:post_id>
		<wp:post_date>2013-01-20 04:05:00</wp:post_date>
		<wp:post_date_gmt>2013-01-19 20:05:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%ad%e7%bb%93%e5%90%88%e5%8d%95%e4%be%8b%e6%a8%a1%e5%bc%8f%ef%bc%8c%e6%8e%a7%e5%88%b6%e5%8d%95%e4%be%8b%e7%b1%bb%e7%9a%84%e6%9f%90%e6%96%b9%e6%b3%95%e5%9c%a8%e8%a2%ab%e5%a4%9a%e7%ba%bf</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f"><![CDATA[设计模式]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>java中遍历属性字段及值</title>
		<link>http://localhost/wp/?p=14</link>
		<pubDate>Sun, 06 Jan 2013 18:02:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=14</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：</p>
<p>http://bbs.csdn.net/topics/320176897<br>
</p>
<p><br>
</p>
<p><br>
</p>
<p>示例代码如下：</p>
<p></p>
<pre name="code" class="java">package test;

import java.lang.reflect.Field;

interface IEntity{

}

class Entity implements IEntity{
    private String s1 = &quot;字符串1&quot;;

    private String s2 = &quot;字符串2&quot;;
}

public class Test {
    
    public static void reflect(IEntity e) throws Exception{
        Class cls = e.getClass();
        Field[] fields = cls.getDeclaredFields();
        for(int i=0; i&lt;fields.length; i++){
            Field f = fields[i];
            f.setAccessible(true);
            System.out.println(&quot;属性名:&quot; + f.getName() + &quot; 属性值:&quot; + f.get(e));
        } 
    }
    
    public static void main(String[] args) throws Exception{
        IEntity e = new Entity();
        reflect(e);
    }
}</pre><br>
<br>
<p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>14</wp:post_id>
		<wp:post_date>2013-01-07 02:02:00</wp:post_date>
		<wp:post_date_gmt>2013-01-06 18:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>java%e4%b8%ad%e9%81%8d%e5%8e%86%e5%b1%9e%e6%80%a7%e5%ad%97%e6%ae%b5%e5%8f%8a%e5%80%bc</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：java中获取实体类中的get、set方法名</title>
		<link>http://localhost/wp/?p=15</link>
		<pubDate>Sun, 06 Jan 2013 18:02:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=15</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：</p>
<p><br>
</p>
<p></p>
<pre name="code" class="java"> 
/**    
 
 * java反射bean的get方法    
 
 *     
 
 * @param objectClass    
 
 * @param fieldName    
 
 * @return    
 
 */       
  
@SuppressWarnings(&quot;unchecked&quot;)       
  
public static Method getGetMethod(Class objectClass, String fieldName) {       
  
    StringBuffer sb = new StringBuffer();       
  
    sb.append(&quot;get&quot;);       
  
    sb.append(fieldName.substring(0, 1).toUpperCase());       
  
    sb.append(fieldName.substring(1));       
  
    try {       
  
        return objectClass.getMethod(sb.toString());       
  
    } catch (Exception e) {       
  
    }       
  
    return null;       
  
}       
  
       
  
/**    
 
 * java反射bean的set方法    
 
 *     
 
 * @param objectClass    
 
 * @param fieldName    
 
 * @return    
 
 */       
  
@SuppressWarnings(&quot;unchecked&quot;)       
  
public static Method getSetMethod(Class objectClass, String fieldName) {       
  
    try {       
  
        Class[] parameterTypes = new Class[1];       
  
        Field field = objectClass.getDeclaredField(fieldName);       
  
        parameterTypes[0] = field.getType();       
  
        StringBuffer sb = new StringBuffer();       
  
        sb.append(&quot;set&quot;);       
  
        sb.append(fieldName.substring(0, 1).toUpperCase());       
  
        sb.append(fieldName.substring(1));       
  
        Method method = objectClass.getMethod(sb.toString(), parameterTypes);       
  
        return method;       
  
    } catch (Exception e) {       
  
        e.printStackTrace();       
  
    }       
  
    return null;       
  
}       
  
       
  
/**    
 
 * 执行set方法    
 
 *     
 
 * @param o执行对象    
 
 * @param fieldName属性    
 
 * @param value值    
 
 */       
  
public static void invokeSet(Object o, String fieldName, Object value) {       
  
    Method method = getSetMethod(o.getClass(), fieldName);       
  
    try {       
  
        method.invoke(o, new Object[] { value });       
  
    } catch (Exception e) {       
  
        e.printStackTrace();       
  
    }       
  
}       
  
       
  
/**    
 
 * 执行get方法    
 
 *     
 
 * @param o执行对象    
 
 * @param fieldName属性    
 
 */       
  
public static Object invokeGet(Object o, String fieldName) {       
  
    Method method = getGetMethod(o.getClass(), fieldName);       
  
    try {       
  
        return method.invoke(o, new Object[0]);       
  
    } catch (Exception e) {       
  
        e.printStackTrace();       
  
    }       
  
    return null;       
  
}</pre><br>
<br>
<p></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>15</wp:post_id>
		<wp:post_date>2013-01-07 02:02:00</wp:post_date>
		<wp:post_date_gmt>2013-01-06 18:02:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava%e4%b8%ad%e8%8e%b7%e5%8f%96%e5%ae%9e%e4%bd%93%e7%b1%bb%e4%b8%ad%e7%9a%84get%e3%80%81set%e6%96%b9%e6%b3%95%e5%90%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：Java Annotation手册</title>
		<link>http://localhost/wp/?p=16</link>
		<pubDate>Fri, 09 Nov 2012 09:43:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=16</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="color:blue">转自：</span></p>
<p><span style="color:blue"><span style="color:red">版权声明：本文可以自由转载，转载时请务必以超链接形式标明文章原始出处和作者信息及本声明</span><br>
作者:cleverpig(作者的Blog:<a href="http://blog.matrix.org.cn/page/cleverpig" target="_new">http://blog.matrix.org.cn/page/cleverpig</a>)<br>
原文:<a href="http://www.matrix.org.cn/resource/article/44/44055_Java&#43;Annotation&#43;Reflect.html" target="_new">http://www.matrix.org.cn/resource/article/44/44055_Java&#43;Annotation&#43;Reflect.html</a><br>
关键字:java,annotation,reflect<br>
</span></p>
<p><span style="color:blue"></span></p>
<h3>Java Annotation手册</h3>
<br>
<p></p>
<p><span style="color:blue">前言：</span></p>
在上篇文章<a href="http://www.matrix.org.cn/resource/article/44/44048_Java&#43;Annotation.html" target="_new">《Java Annotation入门》</a>中概要性的介绍了Annotation的定义、使用，范围涵盖较广，但是深度不够。所以作者在《Java Annotation入门》后，继续整理了Annotation的概念和知识点，与喜欢research的朋友们共享。<br>
<br>
<span style="color:red">阅读提示：文中提到的程序成员或者程序元素是一个概念，指组成程序代码的单元：如类、方法、成员变量。</span><br>
<br>
<span style="color:blue">一、Annotation究竟是什么？</span><br>
<br>
Annotation提供了一条与程序元素关联任何信息或者任何元数据（metadata）的途径。从某些方面看，annotation就像修饰符一样被使用，并应用于包、类型、构造方法、方法、成员变量、参数、本地变量的声明中。这些信息被存储在annotation的“name=value”结构对中。annotation类型是一种接口，能够通过java反射API的方式提供对其信息的访问。<br>
<br>
annotation能被用来为某个程序元素（类、方法、成员变量等）关联任何的信息。需要注意的是，这里存在着一个基本的潜规则：annotaion不能影响程序代码的执行，无论增加、删除annotation，代码都始终如一的执行。另外，尽管一些annotation通过java的反射api方法在运行时被访问，而java语言解释器在工作时忽略了这些annotation。正是由于java虚拟机忽略了annotation，导致了annotation类型在代码中是“不起作用”的；只有通过某种配套的工具才会对annotation类型中的信息进行访问和处理。本文中将涵盖标准的annotation和meta-annotation类型，陪伴这些annotation类型的工具是java编译器（当然要以某种特殊的方式处理它们）。<br>
<br>
由于上述原因，annotation在使用时十分简便。一个本地变量可以被一个以NonNull命名的annotation类型所标注，来作为对这个本地变量不能被赋予null&#20540;的断言。而我们可以编写与之配套的一个annotation代码分析工具，使用它来对具有前面变量的代码进行解析，并且尝试验证这个断言。当然这些代码并不必自己编写。在JDK安装后，在JDK/bin目录中可以找到名为“apt”的工具，它提供了处理annotation的框架：它启动后扫描源代码中的annotation，并调用我们定义好的annotation处理器完成我们所要完成的工作（比如验证前面例子中的断言）。说到这里，annotation的强大功能&#20284;乎可以替代XDoclet这类的工具了，随着我们的深入，大家会更加坚信这一点。<br>
注：详细描述请参看jsr250规范：<br>
<a href="http://www.jcp.org/aboutJava/communityprocess/pfd/jsr250/" target="_new">http://www.jcp.org/aboutJava/communityprocess/pfd/jsr250/</a><br>
<br>
<span style="color:blue">二、Annotation的定义：</span><br>
<br>
这段文字开始介绍annotation相关技术。在此大家将看到java5.0的标准annotation类型，这种标准类型就是前文中所说的“内建”类型，它们可以直接被javac支持。可喜的是，在java6.0beta版中的javac已经加入了对自定义annotation的支持。<br>
<br>
<span style="color:blue">1。Annotation的概念和语法：</span><br>
<br>
首先，关键的概念是理解annotation是与一个程序元素相关联信息或者元数据的标注。它从不影响java程序的执行，但是对例如编译器警告或者像文档生成器等辅助工具产生影响。<br>
<br>
下面是常用的annotation列表，我们应该注意在annotation和annotation类型之间的不同：<br>
<br>
<span style="color:green">A.annotation：</span><br>
annotation使用了在java5.0所带来的新语法，它的行为十分类&#20284;public、final这样的修饰符。每个annotation具有一个名字和成员个数&gt;=0。每个annotation的成员具有被称为name=value对的名字和&#20540;（就像javabean一样），name=value装载了annotation的信息。<br>
<br>
<span style="color:green">B.annotation类型：</span><br>
annotation类型定义了annotation的名字、类型、成员默认&#20540;。一个annotation类型可以说是一个特殊的java接口，它的成员变量是受限制的，而声明annotation类型时需要使用新语法。当我们通过java反射api访问annotation时，返回&#20540;将是一个实现了该annotation类型接口的对象，通过访问这个对象我们能方便的访问到其annotation成员。后面的章节将提到在java5.0的java.lang包里包含的3个标准annotation类型。<br>
<br>
<span style="color:green">C.annotation成员：</span><br>
annotation的成员在annotation类型中以无参数的方法的形式被声明。其方法名和返回&#20540;定义了该成员的名字和类型。在此有一个特定的默认语法：允许声明任何annotation成员的默认&#20540;：一个annotation可以将name=value对作为没有定义默认&#20540;的annotation成员的&#20540;，当然也可以使用name=value对来覆盖其它成员默认&#20540;。这一点有些近&#20284;类的继承特性，父类的构造函数可以作为子类的默认构造函数，但是也可以被子类覆盖。<br>
<br>
<span style="color:green">D.marker annotation类型：</span><br>
一个没有成员定义的annotation类型被称为marker annotation。这种annotation类型仅使用自身的存在与否来为我们提供信息。如后面要说的Override。<br>
<br>
<span style="color:green">E.meta-annotation：</span><br>
meta-annotation也称为元annotation，它是被用来声明annotation类型的annotation。Java5.0提供了一些标准的元-annotation类型。下面介绍的target、retention就是meta-annotation。<br>
<br>
<span style="color:green">F.target：</span><br>
annotation的target是一个被标注的程序元素。target说明了annotation所修饰的对象范围：annotation可被用于packages、types（类、接口、枚举、annotation类型）、类型成员（方法、构造方法、成员变量、枚举&#20540;）、方法参数和本地变量（如循环变量、catch参数）。在annotation类型的声明中使用了target可更加明晰其修饰的目标。<br>
<br>
<span style="color:green">G.retention：</span><br>
annotation的retention定义了该annotation被保留的时间长短：某些annotation仅出现在源代码中，而被编译器丢弃；而另一些却被编译在class文件中；编译在class文件中的annotation可能会被虚拟机忽略，而另一些在class被装载时将被读取（请注意并不影响class的执行，因为annotation与class在使用上是被分离的）。使用这个meta-annotation可以对annotation的“生命周期”限制。<br>
<br>
<span style="color:green">H.metadata：</span><br>
由于metadata被广泛使用于各种计算机开发过程中，所以当我们在这里谈论的metadata即元数据通常指被annotation装载的信息或者annotation本身。<br>
<br>
<span style="color:blue">2。使用标准Annotation：</span><br>
java5.0在java.lang包中定义了3种标准的annotation类型：<br>
<br>
<span style="color:green">A.Override：</span><br>
java.lang.Override是一个marker annotation类型，它被用作标注方法。它说明了被标注的方法重载了父类的方法，起到了断言的作用。如果我们使用了这种annotation在一个没有覆盖父类方法的方法时，java编译器将以一个编译错误来警示。<br>
这个annotaton常常在我们试图覆盖父类方法而确又写错了方法名时发挥威力。<br>
<br>
使用方法极其简单：在使用此annotation时只要在被修饰的方法前面加上@Override。<br>
下面的代码是一个使用@Override修饰一个企图重载父类的toString方法，而又存在拼写错误的sample：<br>
<strong>清单1：</strong><br>
<pre name="code" class="overflow">@Override
public String toSting() {&nbsp;&nbsp; // 注意方法名拼写错了
&nbsp;&nbsp;&nbsp;&nbsp;return &quot;[&quot; + super.toString() + &quot;]&quot;;
}
</pre><br>
<br>
<span style="color:green">B.Deprecated：</span><br>
同样Deprecated也是一个marker annotation。当一个类型或者类型成员使用@Deprecated修饰的话，编译器将不鼓励使用这个被标注的程序元素。而且这种修饰具有一定的“延续性”：如果我们在代码中通过继承或者覆盖的方式使用了这个过时的类型或者成员，虽然继承或者覆盖后的类型或者成员并不是被声明为@Deprecated，但编译器仍然要报警。<br>
&#20540;得注意，@Deprecated这个annotation类型和javadoc中的@deprecated这个tag是有区别的：前者是java编译器识别的，而后者是被javadoc工具所识别用来生成文档（包含程序成员为什么已经过时、它应当如何被禁止或者替代的描述）。<br>
在java5.0，java编译器仍然象其从前版本那样寻找@deprecated这个javadoc tag，并使用它们产生警告信息。但是这种状况将在后续版本中改变，我们应在现在就开始使用@Deprecated来修饰过时的方法而不是@deprecated javadoc tag。<br>
<strong>清单2：</strong><br>
<pre name="code" class="overflow">下面是一段使用@Deprecated的代码：
/**
 * 这里是javadoc的@deprecated声明.
 * @deprecated No one has players for this format any more.&nbsp;&nbsp;Use VHS instead.
 */
@Deprecated public class Betamax { ... }
</pre><br>
<br>
<span style="color:green">C.SuppressWarnings：</span><br>
@SuppressWarnings被用于有选择的关闭编译器对类、方法、成员变量、变量初始化的警告。在java5.0，sun提供的javac编译器为我们提供了-Xlint选项来使编译器对合法的程序代码提出警告，此种警告从某种程度上代表了程序错误。例如当我们使用一个generic collection类而又没有提供它的类型时，编译器将提示出&quot;unchecked warning&quot;的警告。<br>
<br>
通常当这种情况发生时，我们就需要查找引起警告的代码。如果它真的表示错误，我们就需要纠正它。例如如果警告信息表明我们代码中的switch语句没有覆盖所有可能的case，那么我们就应增加一个默认的case来避免这种警告。<br>
相仿，有时我们无法避免这种警告，例如，我们使用必须和非generic的旧代码交互的generic collection类时，我们不能避免这个unchecked warning。此时@SuppressWarning就要派上用场了，在调用的方法前增加@SuppressWarnings修饰，告诉编译器停止对此方法的警告。<br>
SuppressWarning不是一个marker annotation。它有一个类型为String[]的成员，这个成员的&#20540;为被禁止的警告名。对于javac编译器来讲，被-Xlint选项有效的警告名也同样对@SuppressWarings有效，同时编译器忽略掉无法识别的警告名。<br>
<br>
annotation语法允许在annotation名后跟括号，括号中是使用逗号分割的name=value对用于为annotation的成员赋&#20540;：<br>
<strong>清单3：</strong><br>
<pre name="code" class="overflow">@SuppressWarnings(value={&quot;unchecked&quot;,&quot;fallthrough&quot;})
public void lintTrap() { /* sloppy method body omitted */ }
</pre><br>
<br>
在这个例子中SuppressWarnings annotation类型只定义了一个单一的成员，所以只有一个简单的value={...}作为name=value对。又由于成员&#20540;是一个数组，故使用大括号来声明数组&#20540;。<br>
<br>
注意：我们可以在下面的情况中缩写annotation：当annotation只有单一成员，并成员命名为&quot;value=&quot;。这时可以省去&quot;value=&quot;。比如将上面的SuppressWarnings annotation进行缩写：<br>
<strong>清单4：</strong><br>
<pre name="code" class="overflow">@SuppressWarnings({&quot;unchecked&quot;,&quot;fallthrough&quot;})
</pre><br>
如果SuppressWarnings所声明的被禁止警告个数为一个时，可以省去大括号：<br>
<pre name="code" class="overflow">@SuppressWarnings(&quot;unchecked&quot;)
</pre><br>
<br>
<span style="color:blue">3。Annotation语法：</span><br>
<br>
在上一个章节中，我们看到书写marker annotation和单一成员annotation的语法。下面本人来介绍一下完整的语法：<br>
<br>
annotation由“@&#43;annotation类型名称&#43;(..逗号分割的name-value对...)”组成。其中成员可以按照任何的顺序。如果annotation类型定义了某个成员的默认&#20540;，则这个成员可以被省略。成员&#20540;必须为编译时常量、内嵌的annotation或者数组。<br>
<br>
下面我们将定义一个annotation类型名为Reviews，它有一个由@Review annotation数组构成的成员。这个@Review annotation类型有三个成员：&quot;reviewer&quot;是一个字符串，&quot;comment&quot; 是一个具有默认&#20540;的可选的字符串，&quot;grade&quot;是一个Review.Grade枚举类型&#20540;。<br>
<strong>清单5：</strong><br>
<pre name="code" class="overflow">@Reviews({&nbsp;&nbsp;// Single-value annotation, so &quot;value=&quot; is omitted here
&nbsp;&nbsp;&nbsp;&nbsp;@Review(grade=Review.Grade.EXCELLENT,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reviewer=&quot;df&quot;),
&nbsp;&nbsp;&nbsp;&nbsp;@Review(grade=Review.Grade.UNSATISFACTORY,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reviewer=&quot;eg&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;comment=&quot;This method needs an @Override annotation&quot;)
})
</pre><br>
annotation语法的另一个重要规则是没有程序成员可以有多于一个的同一annotation实例。例如在一个类中简单的放置多个@Review annotation。这也是在上面代码中定义@Reviews annotation类型数组的原因。<br>
<br>
<span style="color:blue">4。Annotation成员类型和&#20540;：</span><br>
<br>
annotation成员必须是非空的编译时常量表达式。可用的成员类型为：primitive类型、, String, Class, enumerated类型, annotation类型, 和前面类型的数组。<br>
<br>
下面我们定义了一个名为UncheckedExceptions 的annotation类型，它的成员是一个扩展了RuntimeException类的类数组。<br>
<strong>清单6：</strong><br>
<pre name="code" class="overflow">@UncheckedExceptions({
&nbsp;&nbsp;&nbsp;&nbsp;IllegalArgumentException.class, StringIndexOutOfBoundsException.class
})
</pre><br>
<br>
<span style="color:blue">5。Annotation的目标：</span><br>
<br>
annotation通常被放在类型定义和成员定义的前面。然而它也出现在package、方法参数、本地变量的前面。下面，我们来讨论一下这些不大常用的写法：<br>
<br>
package annotation出现在package声明的前面。<br>
下面的例子package-info.java中不包含任何的公共类型定义，却包含一个可选的javadoc注释。<br>
<strong>清单7：</strong><br>
<pre name="code" class="overflow">/**
 * This package holds my custom annotation types.
 */
@com.davidflanagan.annotations.Author(&quot;David Flanagan&quot;)
package com.davidflanagan.annotations;
</pre><br>
当package-info.java文件被编译时，它将产生名为包含annotation（特殊的接口）声明的package-info.class的类。这个接口没有成员，它的名字package-info不是一个合法的java标识，所以它不能用在java源代码中。这个接口的存在只是简单的被看作一个为package annotation准备的占位符。<br>
<br>
用于修饰方法参数、catch参数、本地变量的annotation只是简单的出现在这些程序成员的修饰符位置。java类文件&#26684;式没有为本地变量或者catch参数存储annotation作准备，所以这些annotation总是保留在源代码级别（source retention）；方法参数annotation能够保存在类文件中，也可以在保留到运行时。<br>
<br>
最后，请注意，枚举类型定义中不允许任何的修饰符修饰其枚举&#20540;。<br>
<br>
<span style="color:blue">6。Annotation和默认&#20540;：</span><br>
在Annotation中，没有默认&#20540;的成员必须有一个成员&#20540;。而如何理解默认&#20540;是如何被处理就是一个很重要的细节：annotation类型所定义的成员默认&#20540;被存储在class文件中，不被编译到annotation里面。如果我们修改一个annotation类型使其成员的默认&#20540;发生了改变，这个改变对于所有此类型的annotation中没有明确提供成员&#20540;的成员产生影响（即修改了该成员的成员&#20540;）。即使在annotation类型使其成员的默认&#20540;被改变后annotation从没被重新编译过，该类型的annotation(改变前已经被编译的)也受到影响。<br>
<br>
<span style="color:blue">三、Annotation工作原理：</span><br>
<br>
<span style="color:blue">Annotation与反射</span><br>
在java5.0中Java.lang.reflect提供的反射API被扩充了读取运行时annotation的能力。让我们回顾一下前面所讲的：一个annotation类型被定义为runtime retention后，它才是在运行时可见，当class文件被装载时被保存在class文件中的annotation才会被虚拟机读取。那么reflect是如何帮助我们访问class中的annotation呢？<br>
<br>
下文将在java.lang.reflect用于annotation的新特性，其中java.lang.reflect.AnnotatedElement是重要的接口，它代表了提供查询annotation能力的程序成员。这个接口被java.lang.Package、java.lang.Class实现，并间接地被Method类、Constructor类、java.lang.reflect的Field类实现。而annotation中的方法参数可以通过Method类、Constructor类的getParameterAnnotations()方法获得。<br>
<br>
下面的代码使用了AnnotatedElement类的isAnnotationPresent()方法判断某个方法是否具有@Unstable annotation，从而断言此方法是否稳定：<br>
<strong>清单8：</strong><br>
<pre name="code" class="overflow">import java.lang.reflect.*;

Class c = WhizzBangClass.class;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
Method m = c.getMethod(&quot;whizzy&quot;, int.class, int.class);&nbsp;&nbsp;
boolean unstable = m.isAnnotationPresent(Unstable.class);
</pre><br>
isAnnotationPresent()方法对于检查marker annotation是十分有用的，因为marker annotation没有成员变量，所以我们只要知道class的方法是否使用了annotation修饰就可以了。而当处理具有成员的annotation时，我们通过使用getAnnotation()方法来获得annotation的成员信息（成员名称、成员&#20540;）。这里我们看到了一套优美的java annotation系统：如果annotation存在，那么实现了相应的annotation类型接口的对象将被getAnnotation()方法返回，接着调用定义在annotation类型中的成员方法可以方便地获得任何成员&#20540;。<br>
<br>
回想一下，前面介绍的@Reviews annotation，如果这个annotation类型被声明为runtime retention的话，我们通过下面的代码来访问@Reviews annotation的成员&#20540;：<br>
<strong>清单9：</strong><br>
<pre name="code" class="overflow">AnnotatedElement target = WhizzBangClass.class; //获得被查询的AnnotatedElement
// 查询AnnotatedElement的@Reviews annotation信息
Reviews annotation = target.getAnnotation(Reviews.class);
// 因为@Reviews annotation类型的成员为@Review annotation类型的数组，
// 所以下面声明了Review[] reviews保存@Reviews annotation类型的value成员值。
Review[] reviews = annotation.value();
// 查询每个@Review annotation的成员信息
for(Review r : reviews) {
&nbsp;&nbsp;&nbsp;&nbsp;Review.Grade grade = r.grade();
&nbsp;&nbsp;&nbsp;&nbsp;String reviewer = r.reviewer();
&nbsp;&nbsp;&nbsp;&nbsp;String comment = r.comment();
&nbsp;&nbsp;&nbsp;&nbsp;System.out.printf(&quot;%s assigned a grade of %s and comment '%s'%n&quot;,
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reviewer, grade, comment);
}
</pre><br>
<br>
<span style="color:blue">四、如何自定义Annotation？</span><br>
<br>
<span style="color:blue">1．详解annotation与接口的异同：</span><br>
因为annotation类型是一个非凡的接口，所以两者之间存在着某些差异：<br>
<br>
<span style="color:green">A.Annotation类型使用关键字@interface而不是interface。</span><br>
这个关键字声明隐含了一个信息：它是继承了java.lang.annotation.Annotation接口，并非声明了一个interface。<br>
<br>
<span style="color:green">B.Annotation类型、方法定义是独特的、受限制的。</span><br>
Annotation类型的方法必须声明为无参数、无异常抛出的。这些方法定义了annotation的成员：方法名成为了成员名，而方法返回&#20540;成为了成员的类型。而方法返回&#20540;类型必须为primitive类型、Class类型、枚举类型、annotation类型或者由前面类型之一作为元素的一维数组。方法的后面可以使用default和一个默认数&#20540;来声明成员的默认&#20540;，null不能作为成员默认&#20540;，这与我们在非annotation类型中定义方法有很大不同。<br>
Annotation类型和它的方法不能使用annotation类型的参数、成员不能是generic。只有返回&#20540;类型是Class的方法可以在annotation类型中使用generic，因为此方法能够用类转换将各种类型转换为Class。<br>
<br>
<span style="color:green">C.Annotation类型又与接口有着近&#20284;之处。</span><br>
它们可以定义常量、静态成员类型（比如枚举类型定义）。Annotation类型也可以如接口一般被实现或者继承。<br>
<br>
<span style="color:blue">2．实例：</span><br>
下面，我们将看到如何定义annotation类型的example。它展示了annotation类型声明以及@interface与interface之间的不同：<br>
<strong>清单10：</strong><br>
<pre name="code" class="overflow">package com.davidflanagan.annotations;
import java.lang.annotation.*;

/**
 * 使用annotation来描述那些被标注的成员是不稳定的，需要更改
*/
@Retention(RetentionPolicy.RUNTIME)
public @interface Unstable {}
</pre><br>
<br>
下面的另一个example只定义了一个成员。并通过将这个成员命名为value，使我们可以方便的使用这种annotation的快捷声明方式：<br>
<strong>清单11：</strong><br>
<pre name="code" class="overflow">/**
 * 使用Author这个annotation定义在程序中指出代码的作者
 */
public @interface Author {
&nbsp;&nbsp;&nbsp;&nbsp;/** 返回作者名 */
&nbsp;&nbsp;&nbsp;&nbsp;String value();
}
</pre><br>
<br>
以下的example更加复杂。Reviews annotation类型只有一个成员，但是这个成员的类型是复杂的：由Review annotation组成的数组。Review annotation类型有3个成员：枚举类型成员grade、表示Review名称的字符串类型成员Reviewer、具有默认&#20540;的字符串类型成员Comment。<br>
<strong>清单12：</strong><br>
<pre name="code" class="overflow">import java.lang.annotation.*;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
/**
 * Reviews annotation类型只有一个成员，
 * 但是这个成员的类型是复杂的：由Review annotation组成的数组
 */
@Retention(RetentionPolicy.RUNTIME)
public @interface Reviews {
&nbsp;&nbsp;&nbsp;&nbsp;Review[] value();
}

/**
* Review annotation类型有3个成员： 
* 枚举类型成员grade、
&nbsp;&nbsp;* 表示Review名称的字符串类型成员Reviewer、
&nbsp;&nbsp;* 具有默认值的字符串类型成员Comment。
 */
public @interface Review {
&nbsp;&nbsp;&nbsp;&nbsp;// 内嵌的枚举类型
&nbsp;&nbsp;&nbsp;&nbsp;public static enum Grade { EXCELLENT, SATISFACTORY, UNSATISFACTORY };

&nbsp;&nbsp;&nbsp;&nbsp;// 下面的方法定义了annotation的成员
&nbsp;&nbsp;&nbsp;&nbsp;Grade grade();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;String reviewer();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;String comment() default &quot;&quot;;&nbsp;&nbsp;
}
</pre><br>
<br>
最后，我们来定义一个annotation方法用于罗列出类运行中所有的unchecked异常（上文已经提到这种情况不一定是错误）。这个annotation类型将一个数组作为了唯一的成员。数组中的每个元素都是异常类。为了加强对未检查的异常（此类异常都是在运行时抛出）进行报告，我们可以在代码中对异常的类型进行限制：<br>
<strong>清单13：</strong><br>
<pre name="code" class="overflow">public @interface UncheckedExceptions {
&nbsp;&nbsp;&nbsp;&nbsp;Class&lt;? extends RuntimeException&gt;[] value();
}
</pre><br>
<br>
<span style="color:blue">五、Meta-Annotation</span><br>
<br>
Annotation类型可以被它们自己所标注。Java5.0定义了4个标准的meta-annotation类型，它们被用来提供对其它annotation类型作说明。这些类型和它们所支持的类在java.lang.annotation包中可以找到。如果需要更详细的信息可以参考jdk5.0手册。<br>
<br>
<span style="color:blue">1．再谈Target</span><br>
作为meta-annotation类型的Target,它描述了annotation所修饰的程序成员的类型。当一个annotation类型没有Target时，它将被作为普通的annotation看待。当将它修饰一个特定的程序成员时，它将发挥其应用的作用，例如：Override用于修饰方法时，增加了@Target这个meta-annotation就使编译器对annotation作检查，从而去掉修饰错误类型的Override。<br>
<br>
Target meta-annotation类型有唯一的value作为成员。这个成员的类型是java.lang.annotation.ElementType[]类型的，ElementType类型是可以被标注的程序成员的枚举类型。<br>
<br>
<span style="color:blue">2．Retention的用法</span><br>
我们在文章的开头曾经提到过Retention，但是没有详细讲解。Retention描述了annotation是否被编译器丢弃或者保留在class文件；如果保留在class文件中，是否在class文件被装载时被虚拟机读取。默认情况下，annotation被保存在class文件中，但在运行时并不能被反射访问。Retention具有三个取&#20540;：source、class、runtime，这些取&#20540;来自java.lang.annotation.RetentionPolicy的枚举类型&#20540;。<br>
<br>
Retention meta-annotation类型有唯一的value作为成员，它的取&#20540;来自java.lang.annotation.RetentionPolicy的枚举类型&#20540;。<br>
<br>
<span style="color:blue">3．Documented</span><br>
Documented是一个meta-annotation类型，用于描述其它类型的annotation应该被作为被标注的程序成员的公共API，因此可以被例如javadoc此类的工具文档化。<br>
<br>
Documented是一个marker annotation，没有成员。<br>
<br>
<span style="color:blue">4．Inherited</span><br>
@Inherited meta-annotation也是一个marker annotation，它阐述了某个被标注的类型是被继承的。如果一个使用了@Inherited修饰的annotation类型被用于一个class，则这个annotation将被用于该class的子类。<br>
<br>
注意：@Inherited annotation类型是被标注过的class的子类所继承。类并不从它所实现的接口继承annotation，方法并不从它所重载的方法继承annotation。<br>
<br>
&#20540;得思考的是，当@Inherited annotation类型标注的annotation的Retention是RetentionPolicy.RUNTIME，则反射API增强了这种继承性。如果我们使用java.lang.reflect去查询一个@Inherited annotation类型的annotation时，反射代码检查将展开工作：检查class和其父类，直到发现指定的annotation类型被发现，或者到达类继承结构的顶层。<br>
<br>
<span style="color:blue">六、总结：</span><br>
<br>
本文几乎覆盖了所有的Annotation的概念和知识点，从annotation的定义、语法到工作原理、如何自定义annotation，直至meta-annotation。其中也具有一些配套的代码片断可参考，虽然不是很多，但是可谓言简意赅、着其重点，本人认为用好annotation的关键还在于使用。希望本手册能够帮助大家用好annotation，这也是本人的最大快乐。&nbsp;<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>16</wp:post_id>
		<wp:post_date>2012-11-09 17:43:00</wp:post_date>
		<wp:post_date_gmt>2012-11-09 09:43:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava-annotation%e6%89%8b%e5%86%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：Java Annotation入门</title>
		<link>http://localhost/wp/?p=17</link>
		<pubDate>Fri, 09 Nov 2012 09:36:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=17</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：http://www.matrix.org.cn/resource/article/44/44048_Java&#43;Annotation.html]http://www.matrix.org.cn/resource/article/44/44048_Java&#43;Annotation.html<br>
</p>
<p>Java Annotation入门 </p>
<br>
<span style="color:blue">摘要：</span><br>
本文针对java初学者或者annotation初次使用者全面地说明了annotation的使用方法、定义方式、分类。初学者可以通过以上的说明制作简单的annotation程序，但是对于一些高级的annotation应用（例如使用自定义annotation生成javabean映射xml文件）还需要进一步的研究和探讨。涉及到深入annotation的内容，作者将在后文《Java Annotation高级应用》中谈到。<br>
<br>
同时，annotation运行存在两种方式：运行时、编译时。上文中讨论的都是在运行时的annotation应用，但在编译时的annotation应用还没有涉及，<br>
<br>
<span style="color:blue">一、为什么使用Annotation：</span><br>
<br>
在JAVA应用中，我们常遇到一些需要使用模版代码。例如，为了编写一个JAX-RPC web service，我们必须提供一对接口和实现作为模版代码。如果使用annotation对远程访问的方法代码进行修饰的话，这个模版就能够使用工具自动生成。<br>
另外，一些API需要使用与程序代码同时维护的附属文件。例如，JavaBeans需要一个BeanInfo Class与一个Bean同时使用/维护，而EJB则同样需要一个部署描述符。此时在程序中使用annotation来维护这些附属文件的信息将十分便利而且减少了错误。<br>
<br>
<span style="color:blue">二、Annotation工作方式：</span><br>
<br>
在5.0 版之前的Java平台已经具有了一些ad hoc annotation机制。比如，使用transient修饰符来标识一个成员变量在序列化子系统中应被忽略。而@deprecated这个 javadoc tag也是一个ad hoc annotation用来说明一个方法已过时。从Java5.0版发布以来，5.0平台提供了一个正式的annotation功能：允许开发者定义、使用自己的annoatation类型。此功能由一个定义annotation类型的语法和一个描述annotation声明的语法，读取annotaion
 的API，一个使用annotation修饰的class文件，一个annotation处理工具（apt）组成。<br>
annotation并不直接影响代码语义，但是它能够工作的方式被看作类&#20284;程序的工具或者类库，它会反过来对正在运行的程序语义有所影响。annotation可以从源文件、class文件或者以在运行时反射的多种方式被读取。<br>
当然annotation在某种程度上使javadoc tag更加完整。一般情况下，如果这个标记对java文档产生影响或者用于生成java文档的话，它应该作为一个javadoc tag；否则将作为一个annotation。<br>
<br>
<span style="color:blue">三、Annotation使用方法：</span><br>
<br>
<strong>1。类型声明方式：</strong><br>
通常，应用程序并不是必须定义annotation类型，但是定义annotation类型并非难事。Annotation类型声明于一般的接口声明极为类&#20284;，区别只在于它在interface关键字前面使用“@”符号。<br>
annotation 类型的每个方法声明定义了一个annotation类型成员，但方法声明不必有参数或者异常声明；方法返回&#20540;的类型被限制在以下的范围： primitives、String、Class、enums、annotation和前面类型的数组；方法可以有默认&#20540;。<br>
<br>
下面是一个简单的annotation类型声明：<br>
<strong>清单1:</strong><br>
<pre name="code" class="overflow" title="pre code">&nbsp;&nbsp;<pre name="code" class="java">  /**
     * Describes the Request-For-Enhancement(RFE) that led
     * to the presence of the annotated API element.
     */
    public @interface RequestForEnhancement {
        int    id();
        String synopsis();
        String engineer() default &quot;[unassigned]&quot;; 
        String date();    default &quot;[unimplemented]&quot;; 
    }</pre><br>
<pre></pre>
<br>
代码中只定义了一个annotation类型RequestForEnhancement。<br>
<br>
<strong>2。修饰方法的annotation声明方式：</strong><br>
annotation 是一种修饰符，能够如其它修饰符（如public、static、final）一般使用。习惯用法是annotaions用在其它的修饰符前面。 annotations由“@&#43;annotation类型&#43;带有括号的成员-&#20540;列表”组成。这些成员的&#20540;必须是编译时常量（即在运行时不变）。<br>
<br>
A：下面是一个使用了RequestForEnhancement annotation的方法声明：<br>
<strong>清单2:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    @RequestForEnhancement(
        id       = 2868724,
        synopsis = &quot;Enable time-travel&quot;,
        engineer = &quot;Mr. Peabody&quot;,
        date     = &quot;4/1/3007&quot;
    )
    public static void travelThroughTime(Date destination) { ... }</pre><br>
<pre></pre>
<br>
<br>
B：当声明一个没有成员的annotation类型声明时，可使用以下方式：<br>
<strong>清单3:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    /**
     * Indicates that the specification of the annotated API element
     * is preliminary and subject to change.
     */
    public @interface Preliminary { }</pre><br>
<pre></pre>
<br>
<br>
作为上面没有成员的annotation类型声明的简写方式：<br>
<strong>清单4:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    @Preliminary public class TimeTravel { ... }</pre><br>
<pre></pre>
<br>
<br>
C：如果在annotations中只有唯一一个成员，则该成员应命名为value：<br>
<strong>清单5:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    /**
     * Associates a copyright notice with the annotated API element.
     */
    public @interface Copyright {
        String value();
    }</pre><br>
<pre></pre>
<br>
<br>
更为方便的是对于具有唯一成员且成员名为value的annotation（如上文），在其使用时可以忽略掉成员名和赋&#20540;号（=）：<br>
<strong>清单6:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    @Copyright(&quot;2002 Yoyodyne Propulsion Systems&quot;)
    public class OscillationOverthruster { ... }</pre><br>
<pre></pre>
<br>
<br>
<strong>3。一个使用实例：</strong><br>
结合上面所讲的，我们在这里建立一个简单的基于annotation测试框架。首先我们需要一个annotation类型来表示某个方法是一个应该被测试工具运行的测试方法。<br>
<strong>清单7:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    import java.lang.annotation.*;

    /**
     * Indicates that the annotated method is a test method.
     * This annotation should be used only on parameterless static methods.
     */
    @Retention(RetentionPolicy.RUNTIME)
    @Target(ElementType.METHOD)
    public @interface Test { }</pre><br>
<pre></pre>
<br>
<br>
&#20540;得注意的是annotaion类型声明是可以标注自己的，这样的annotation被称为“meta-annotations”。<br>
<br>
在上面的代码中，@Retention(RetentionPolicy.RUNTIME)这个meta-annotation表示了此类型的 annotation将被虚拟机保留使其能够在运行时通过反射被读取。而@Target(ElementType.METHOD)表示此类型的 annotation只能用于修饰方法声明。<br>
<br>
下面是一个简单的程序，其中部分方法被上面的annotation所标注：<br>
<strong>清单8:</strong><br>
<pre name="code" class="overflow" title="pre code">&nbsp; <pre name="code" class="java">  public class Foo {
        @Test public static void m1() { }
        public static void m2() { }
        @Test public static void m3() {
            throw new RuntimeException(&quot;Boom&quot;);
        }
        public static void m4() { }
        @Test public static void m5() { }
        public static void m6() { }
        @Test public static void m7() {
            throw new RuntimeException(&quot;Crash&quot;);
        }
        public static void m8() { }
    }

Here is the testing tool:

    import java.lang.reflect.*;

    public class RunTests {
       public static void main(String[] args) throws Exception {
          int passed = 0, failed = 0;
          for (Method m : Class.forName(args[0]).getMethods()) {
             if (m.isAnnotationPresent(Test.class)) {
                try {
                   m.invoke(null);
                   passed++;
                } catch (Throwable ex) {
                   System.out.printf(&quot;Test %s failed: %s %n&quot;, m, ex.getCause());
                   failed++;
                }
             }
          }
          System.out.printf(&quot;Passed: %d, Failed %d%n&quot;, passed, failed);
       }
    }
</pre><br>
<br>
<pre></pre>
<br>
这个程序从命令行参数中取出类名，并且遍历此类的所有方法，尝试调用其中被上面的测试annotation类型标注过的方法。在此过程中为了找出哪些方法被 annotation类型标注过，需要使用反射的方式执行此查询。如果在调用方法时抛出异常，此方法被认为已经失败，并打印一个失败报告。最后，打印运行通过/失败的方法数量。<br>
下面文字表示了如何运行这个基于annotation的测试工具：<br>
<br>
<strong>清单9:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">    $ java RunTests Foo
    Test public static void Foo.m3() failed: java.lang.RuntimeException: Boom 
    Test public static void Foo.m7() failed: java.lang.RuntimeException: Crash 
    Passed: 2, Failed 2</pre><br>
<pre></pre>
<br>
<br>
<span style="color:blue">四、Annotation分类：</span><br>
<br>
根据annotation的使用方法和用途主要分为以下几类：<br>
<br>
<strong>1。内建Annotation——Java5.0版在java语法中经常用到的内建Annotation：</strong><br>
@Deprecated用于修饰已经过时的方法；<br>
@Override用于修饰此方法覆盖了父类的方法（而非重载）；<br>
@SuppressWarnings用于通知java编译器禁止特定的编译警告。<br>
<br>
下面代码展示了内建Annotation类型的用法：<br>
<strong>清单10:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">package com.bjinfotech.practice.annotation;

/**
 * 演示如何使用java5内建的annotation
 * 参考资料：
 * http://java.sun.com/docs/books/tutorial/java/javaOO/annotations.html
 * http://java.sun.com/j2se/1.5.0/docs/guide/language/annotations.html
 * http://mindprod.com/jgloss/annotations.html
 * @author cleverpig
 *
 */
import java.util.List;

public class UsingBuiltInAnnotation {
        //食物类
        class Food{}
        //干草类
        class Hay extends Food{}
        //动物类
        class Animal{
                Food getFood(){
                        return null;
                }
                //使用Annotation声明Deprecated方法
                @Deprecated
                void deprecatedMethod(){
                }
        }
        //马类-继承动物类
        class Horse extends Animal{
                //使用Annotation声明覆盖方法
                @Override
                Hay getFood(){
                        return new Hay();
                }
                //使用Annotation声明禁止警告
                @SuppressWarnings({&quot;deprecation&quot;,&quot;unchecked&quot;})
                void callDeprecatedMethod(List horseGroup){
                        Animal an=new Animal();
                        an.deprecatedMethod();
                        horseGroup.add(an);
                }
        }
}</pre><br>
<pre></pre>
<br>
<br>
<strong>2。开发者自定义Annotation：由开发者自定义Annotation类型。</strong><br>
下面是一个使用annotation进行方法测试的sample：<br>
<br>
AnnotationDefineForTestFunction类型定义如下：<br>
<strong>清单11:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">package com.bjinfotech.practice.annotation;

import java.lang.annotation.*;
/**
 * 定义annotation
 * @author cleverpig
 *
 */
//加载在VM中，在运行时进行映射
@Retention(RetentionPolicy.RUNTIME)
//限定此annotation只能标示方法
@Target(ElementType.METHOD)
public @interface AnnotationDefineForTestFunction{}</pre><br>
<pre></pre>
<br>
<br>
测试annotation的代码如下：<br>
<br>
<strong>清单12:</strong><br>
<pre name="code" class="overflow" title="pre code"><pre name="code" class="java">package com.bjinfotech.practice.annotation;

import java.lang.reflect.*;

/**
 * 一个实例程序应用前面定义的Annotation：AnnotationDefineForTestFunction
 * @author cleverpig
 *
 */
public class UsingAnnotation {
        @AnnotationDefineForTestFunction public static void method01(){}
        
        public static void method02(){}
        
        @AnnotationDefineForTestFunction public static void method03(){
                throw new RuntimeException(&quot;method03&quot;);
        }
        
        public static void method04(){
                throw new RuntimeException(&quot;method04&quot;);
        }
        
        public static void main(String[] argv) throws Exception{
                int passed = 0, failed = 0;
                //被检测的类名
                String className=&quot;com.bjinfotech.practice.annotation.UsingAnnotation&quot;;
                //逐个检查此类的方法，当其方法使用annotation声明时调用此方法
            for (Method m : Class.forName(className).getMethods()) {
               if (m.isAnnotationPresent(AnnotationDefineForTestFunction.class)) {
                  try {
                     m.invoke(null);
                     passed++;
                  } catch (Throwable ex) {
                     System.out.printf(&quot;测试 %s 失败: %s %n&quot;, m, ex.getCause());
                     failed++;
                  }
               }
            }
            System.out.printf(&quot;测试结果： 通过: %d, 失败： %d%n&quot;, passed, failed);
        }
}</pre><br>
<pre></pre>
<br>
<br>
<strong>3。使用第三方开发的Annotation类型</strong><br>
这也是开发人员所常常用到的一种方式。比如我们在使用Hibernate3.0时就可以利用Annotation生成数据表映射配置文件，而不必使用Xdoclet。<br>
<br>
<span style="color:blue">五、总结：</span><br>
<br>
1。前面的文字说明了annotation的使用方法、定义方式、分类。初学者可以通过以上的说明制作简单的annotation程序，但是对于一些高级的 annotation应用（例如使用自定义annotation生成javabean映射xml文件）还需要进一步的研究和探讨。<br>
<br>
2。同时，annotation运行存在两种方式：运行时、编译时。上文中讨论的都是在运行时的annotation应用，但在编译时的annotation应用还没有涉及，因为编译时的annotation要使用annotation processing tool。<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>17</wp:post_id>
		<wp:post_date>2012-11-09 17:36:00</wp:post_date>
		<wp:post_date_gmt>2012-11-09 09:36:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava-annotation%e5%85%a5%e9%97%a8</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：Java Annotation入门（二）(中英文结合）</title>
		<link>http://localhost/wp/?p=18</link>
		<pubDate>Fri, 09 Nov 2012 09:10:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=18</guid>
		<description></description>
		<content:encoded><![CDATA[<h2 class="title content-title">转自：http://hi.baidu.com/sword0228/item/5344d9bed46d0f44bb0e126e<br>
</h2>
<h2 class="title content-title">Java Annotation入门（二）(中英文结合）</h2>
<div id="content" class="content mod-cs-content text-content clearfix">icates that the specification of the annotated API element<br>
* is preliminary and subject to change.<br>
*/<br>
public @interface Preliminary { }<br>
<p>It is permissible to omit the parentheses in marker annotations, as shown below:</p>
<blockquote>@Preliminary public class TimeTravel { ... }<br>
</blockquote>
<p>In annotations with a single element, the element should be named <code>value</code>, as shown below:</p>
<p>如果annotation只有一个元素，那这个元素应该被命名为value，如下：</p>
<blockquote><pre name="code" class="java">/**
* Associates a copyright notice with the annotated API element.
*/
public @interface Copyright {
String value();
}</pre><br>
<br>
</blockquote>
<p>It is permissible to omit the element name and equals sign (<code>=</code>) in a single-element annotation whose element name is<code>value</code>, as shown below:</p>
<p>单一元素命名为value的Annotaion允许省略元素名和等号（=），如下：</p>
<blockquote><pre name="code" class="java">@Copyright(&quot;2002 Yoyodyne Propulsion Systems&quot;)
public class OscillationOverthruster { ... }</pre><br>
<br>
</blockquote>
<p>To tie it all together, we'll build a simple annotation-based test framework. First we need a marker annotation type to indicate that a method is a test method, and should be run by the testing tool:</p>
<p></p>
<blockquote><pre name="code" class="java">import java.lang.annotation.*;

/**
* Indicates that the annotated method is a test method.
* This annotation should be used only on parameterless static methods.
*/
@Retention(RetentionPolicy.RUNTIME)
@Target(ElementType.METHOD)
public @interface Test { }</pre><br>
<br>
</blockquote>
<p>Note that the annotation type declaration is itself annotated. Such annotations are called<em>meta-annotations</em>. The first (<code>@Retention(RetentionPolicy.RUNTIME)</code>) indicates that annotations with this type are to be retained by the VM so they
 can be read reflectively at run-time. The second (<code>@Target(ElementType.METHOD)</code>) indicates that this annotation type can be used to annotate only method declarations.</p>
<p>Here is a sample program, some of whose methods are annotated with the above interface:</p>
<blockquote><pre name="code" class="java">public class Foo {

@Test 
public static void m1() { }

public static void m2() { }

@Test
public static void m3() {
throw new RuntimeException(&quot;Boom&quot;);
}

public static void m4() { }

@Test 
public static void m5() { }

public static void m6() { }

@Test 
public static void m7() {
throw new RuntimeException(&quot;Crash&quot;);
}

public static void m8() { }
}</pre><br>
<br>
</blockquote>
<p>Here is the testing tool:</p>
<blockquote><pre name="code" class="java">import java.lang.reflect.*;

public class RunTests {
public static void main(String[] args) throws Exception {
int passed = 0, failed = 0;
for (Method m : Class.forName(args[0]).getMethods()) {
if (m.isAnnotationPresent(Test.class)) {
try {
m.invoke(null);
passed++;
} catch (Throwable ex) {
System.out.printf(&quot;Test %s failed: %s %n&quot;, m, ex.getCause());
failed++;
}
}
}
System.out.printf(&quot;Passed: %d, Failed %d%n&quot;, passed, failed);
}
}</pre><br>
<br>
</blockquote>
<p>The tool takes a class name as a command line argument and iterates over all the methods of the named class attempting to invoke each method that is annotated with the<code>Test</code> annotation type (defined above). The reflective query to find out if
 a method has a<code>Test</code> annotation is highlighted in green. If a test method invocation throws an exception, the test is deemed to have failed, and a failure report is printed. Finally, a summary is printed showing the number of tests that passed and
 failed. Here is how it looks when you run the testing tool on the <code>Foo</code> program (above):</p>
<blockquote>$ java RunTests Foo<br>
Test public static void Foo.m3() failed: java.lang.RuntimeException: Boom <br>
Test public static void Foo.m7() failed: java.lang.RuntimeException: Crash <br>
Passed: 2, Failed 2<br>
</blockquote>
<p>While this testing tool is clearly a toy, it demonstrates the power of annotations and could easily be extended to overcome its limitations.</p>
</div>
<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>18</wp:post_id>
		<wp:post_date>2012-11-09 17:10:00</wp:post_date>
		<wp:post_date_gmt>2012-11-09 09:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava-annotation%e5%85%a5%e9%97%a8%ef%bc%88%e4%ba%8c%ef%bc%89%e4%b8%ad%e8%8b%b1%e6%96%87%e7%bb%93%e5%90%88%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：Java Annotation入门（一）(中英文结合）</title>
		<link>http://localhost/wp/?p=19</link>
		<pubDate>Fri, 09 Nov 2012 09:06:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[转自：http://hi.baidu.com/sword0228/item/f2ed9494ce98ed4df042156e<br>
Java Annotation入门（一）(中英文结合）<br>
<p>以下几个Java官方文档描述了一些java区别于其他语言的特殊性</p>
<p>反射</p>
<p>http://java.sun.com/javase/6/docs/technotes/guides/reflection/index.html</p>
<p>Proxy</p>
<p>java.sun.com/javase/6/docs/technotes/guides/reflection/proxy.html</p>
<p>Annotation</p>
<p>java.sun.com/javase/6/docs/technotes/guides/language/annotations.html</p>
Annotations
<p>Many APIs require a fair amount of boilerplate code. For example, in order to write a JAX-RPC web service, you must provide a paired interface and implementation. This boilerplate could be generated automatically by a tool if the program were “decorated”
 with annotations indicating which methods were remotely accessible.</p>
<p>很多的API需要相当数量的样板代码。例如，为了写一个JAX-RPC(Java™ API for XMLbased RPC，顾名思义，它是一种远程方法调用) web service，你必须提供一组配对的接口和实现。如果你在那些远程访问的methods上“装饰”annotaions的话，那么你就可以通过一个工具来自动生成（generated automatically）这些样板。</p>
<p>Other APIs require “side files” to be maintained in parallel with programs. For example JavaBeans requires a<code>BeanInfo</code> class to be maintained in parallel with a bean, and Enterprise JavaBeans (EJB) requires a<em>deployment descriptor</em>. It
 would be more convenient and less error-prone if the information in these side files were maintained as annotations in the program itself.</p>
<p>还有一些API需要&quot;额外文件&quot;来保持代码的同步。例如JavaBeans需要一个BeanInfo类来与一个Bean平行，EJB需要一个<em>部署描述</em> 。如果这些“额外文件”是用Annotaion在各自的代码上描述的话，将会更加的方便，并且减少错误。</p>
<p>The Java platform has always had various ad hoc annotation mechanisms. For example the<code>transient</code> modifier is an ad hoc annotation indicating that a field should be ignored by the serialization subsystem, and the<code>@deprecated</code> javadoc
 tag is an ad hoc annotation indicating that the method should no longer be used. As of release 5.0, the platform has a general purpose annotation (also known as<em>metadata</em>) facility that permits you to define and use your own annotation types. The facility
 consists of a syntax for declaring annotation types, a syntax for annotating declarations, APIs for reading annotations, a class file representation for annotations, and an annotation processing tool.</p>
<p>Annotations do not directly affect program semantics, but they do affect the way programs are treated by tools and libraries, which can in turn affect the semantics of the running program. Annotations can be read from source files, class files, or reflectively
 at run time.</p>
<p>说明不直接影响程序的语义，但它们确实改善了工具和Library的编程方式，它可以反过来影响程序的运行。 Annotation可以从源文件，类文件，在运行时间用反射来读取。</p>
<p>Annotations complement javadoc tags. In general, if the markup is intended to affect or produce documentation, it should probably be a javadoc tag; otherwise, it should be an annotation.</p>
<p>Typical application programmers will never have to define an annotation type, but it is not hard to do so. Annotation type declarations are similar to normal interface declarations. An at-sign (<code>@</code>) precedes the<code>interface</code> keyword.
 Each method declaration defines an <em>element</em> of the annotation type. Method declarations must not have any parameters or a<code>throws</code> clause. Return types are restricted to primitives,<code>String</code>,<code>Class</code>, enums, annotations,
 and arrays of the preceding types. Methods can have<em>default values</em>. Here is an example annotation type declaration:</p>
<p>典型应用程序员不需要定义一个Annotation类型（Annotation Type），但定义Annotation类型并不难。定义Annotation类型与定义Interface很像。at符号(@)后紧跟一个interface关键字，每个方法定义一个Annotation类型的元素。方法描述不可以有任何参数和throws描述。返回类型仅限基本类型、String、Class、枚举类型、Annotations、还有之前这些类型对应的数组类型。方法可以有<em>默认&#20540;。</em>这里是一个定义Annotaion
 Type的例子</p>
<blockquote>/**<br>
* Describes the Request-For-Enhancement(RFE) that led<br>
* to the presence of the annotated API element.<br>
*/<br>
public @interface RequestForEnhancement {<br>
int id();<br>
String synopsis();<br>
String engineer() default &quot;[unassigned]&quot;; <br>
String date() default &quot;[unimplemented]&quot;; <br>
}<br>
</blockquote>
<p>Once an annotation type is defined, you can use it to annotate declarations. An annotation is a special kind of modifier, and can be used anywhere that other modifiers (such as<code>public</code>,<code>static</code>, or
<code>final</code>) can be used. By convention, annotations precede other modifiers. Annotations consist of an at-sign (<code>@</code>) followed by an annotation type and a parenthesized list of element-value pairs. The values must be compile-time constants.
 Here is a method declaration with an annotation corresponding to the annotation type declared above:</p>
<p>一旦Annotaion类型定义好了，你就可以使用它来注解（annotate）描述信息了。Annotaion是一种特殊的修饰词（modifier），任何其他修饰词（如：public，static，或final）可以使用的地方都可以使用Annotaion。按照惯例，Annotaion会放在其他修饰词前面。at符合(<code>@</code>) 紧跟Annotaion类型和一组用括号括起的<em>元素-&#20540;。</em>&#20540;必须是一个编译时常量（compile-time constants）。这里是一个使用上面的Annotaion类型来注解一个函数的例子。</p>
<blockquote>@RequestForEnhancement(<br>
id = 2868724,<br>
synopsis = &quot;Enable time-travel&quot;,<br>
engineer = &quot;Mr. Peabody&quot;,<br>
date = &quot;4/1/3007&quot;<br>
)<br>
public static void travelThroughTime(Date destination) { ... }<br>
</blockquote>
<p>An annotation type with no elements is termed a <em>marker</em> annotation type, for example:</p>
<p>没有元素的Annotation类型被称为<em>标记</em>，例如</p>
/**<br>
* Ind<br>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2012-11-09 17:06:00</wp:post_date>
		<wp:post_date_gmt>2012-11-09 09:06:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava-annotation%e5%85%a5%e9%97%a8%ef%bc%88%e4%b8%80%ef%bc%89%e4%b8%ad%e8%8b%b1%e6%96%87%e7%bb%93%e5%90%88%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：JAVA文件操作类，方便读写小文件 （查询）</title>
		<link>http://localhost/wp/?p=20</link>
		<pubDate>Tue, 16 Oct 2012 23:12:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=20</guid>
		<description></description>
		<content:encoded><![CDATA[<h1 class="Article_tle"><pre name="code" class="java">　package cn.edu.dlut.wisdom;

　　import java.io.*;

　　import java.util.*;

　　public class FileAccess {

　　public static String readAllText(String fileName) throws IOException {

　　StringBuffer sb = new StringBuffer();

　　char[] buf = new char[1024];

　　BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fileName)));

　　while(br.read(buf) != -1) {

　　sb.append(buf);

　　}

　　return sb.toString();

　　}

　　public static String readAllText(String fileName, String encode) throws IOException {

　　StringBuffer sb = new StringBuffer();

　　char[] buf = new char[1024];

　　BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fileName), encode));

　　while(br.read(buf) != 0) {

　　sb.append(buf);

　　}

　　return sb.toString();

　　}

　　public static String[] readAllLines(String fileName) throws IOException {

　　ArrayList&lt;String&gt; lines = new ArrayList&lt;String&gt;();

　　String s;

　　BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fileName)));

　　while ((s = br.readLine()) != null)

　　lines.add(s);

　　br.close();

　　return lines.toArray(new String[]{});

　　}

　　public static String[] readAllLines(String fileName, String encode) throws IOException {

　　ArrayList&lt;String&gt; lines = new ArrayList&lt;String&gt;();

　　String s;

　　BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(fileName), encode));

　　while ((s = br.readLine()) != null)

　　lines.add(s);

　　br.close();

　　return lines.toArray(new String[]{});

　　}

　　public static void writeAllText(String fileName, String text) throws FileNotFoundException {

　　PrintWriter pw = new PrintWriter(new FileOutputStream(fileName));

　　pw.print(text);

　　pw.flush();

　　pw.close();

　　}

　　public static void writeAllText(String fileName, String encode, String text) throws FileNotFoundException, UnsupportedEncodingException {

　　PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(fileName), encode));

　　pw.print(text);

　　pw.flush();

　　pw.close();

　　}

　　public static void writeAllLines(String fileName, String[] lines) throws FileNotFoundException {

　　PrintWriter pw = new PrintWriter(new FileOutputStream(fileName));

　　for(String s : lines)

　　pw.println(s);

　　pw.flush();

　　pw.close();

　　}

　　public static void writeAllLines(String fileName, String encode, String[] lines) throws FileNotFoundException, UnsupportedEncodingException {

　　PrintWriter pw = new PrintWriter(new OutputStreamWriter(new FileOutputStream(fileName), encode));

　　for(String s : lines)

　　pw.println(s);

　　pw.flush();

　　pw.close();

　　}

　　public static void writeObject(String fileName, Serializable ob) throws IOException {

　　ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName));

　　oos.writeObject(ob);

　　oos.flush();

　　oos.close();

　　}

　　public static Object readObject(String fileName) throws IOException, ClassNotFoundException {

　　ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName));

　　Object ob = ois.readObject();

　　ois.close();

　　return ob;

　　}

　　}
</pre><br>
转自：http://java.chinaitlab.com/advance/815440.html</h1>
<div><br>
</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>20</wp:post_id>
		<wp:post_date>2012-10-17 07:12:00</wp:post_date>
		<wp:post_date_gmt>2012-10-16 23:12:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava%e6%96%87%e4%bb%b6%e6%93%8d%e4%bd%9c%e7%b1%bb%ef%bc%8c%e6%96%b9%e4%be%bf%e8%af%bb%e5%86%99%e5%b0%8f%e6%96%87%e4%bb%b6-%ef%bc%88%e6%9f%a5%e8%af%a2%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>转：关于HashMap与LinkedHashMap  （记录）</title>
		<link>http://localhost/wp/?p=21</link>
		<pubDate>Tue, 16 Oct 2012 23:10:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=21</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：http://mmz06.blog.163.com/blog/static/12141696201102131149421/</p>
<p><br>
</p>
<p align="center" style="text-align:left; line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; background-color:rgb(204,206,208)">
<span style="font-family:楷体_GB2312"><br>
</span></p>
<p align="center" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; background-color:rgb(204,206,208); text-align:center">
<span style="font-family:楷体_GB2312">关于</span><span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">与</span><span lang="EN-US"><span style="font-family:Times New Roman">LinkedHashMap</span></span></p>
<p align="right" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; background-color:rgb(204,206,208); text-align:right">
<span lang="EN-US"><span style="font-family:Times New Roman">2011-01-21</span></span></p>
<p align="center" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; background-color:rgb(204,206,208); text-align:center">
<span lang="EN-US"><span style="font-family:Times New Roman">&nbsp;</span></span></p>
<p align="left" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; background-color:rgb(204,206,208)">
<span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">是无序的，</span><span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">在</span><span lang="EN-US"><span style="font-family:Times New Roman">put</span></span><span style="font-family:楷体_GB2312">的时候是根据</span><span lang="EN-US"><span style="font-family:Times New Roman">key</span></span><span style="font-family:楷体_GB2312">的</span><span lang="EN-US"><span style="font-family:Times New Roman">hashcode</span></span><span style="font-family:楷体_GB2312">进行</span><span lang="EN-US"><span style="font-family:Times New Roman">hash</span></span><span style="font-family:楷体_GB2312">然后放入对应的地方。所以在按照一定顺序</span><span lang="EN-US"><span style="font-family:Times New Roman">put</span></span><span style="font-family:楷体_GB2312">进</span><span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">中，然后遍历出</span><span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">的顺序跟</span><span lang="EN-US"><span style="font-family:Times New Roman">put</span></span><span style="font-family:楷体_GB2312">的顺序不同（除非在</span><span lang="EN-US"><span style="font-family:Times New Roman">put</span></span><span style="font-family:楷体_GB2312">的时候</span><span lang="EN-US"><span style="font-family:Times New Roman">key</span></span><span style="font-family:楷体_GB2312">已经按照</span><span lang="EN-US"><span style="font-family:Times New Roman">hashcode</span></span><span style="font-family:楷体_GB2312">排序号了，这种几率非常小）</span></p>
<p align="left" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; background-color:rgb(204,206,208)">
<span style="font-family:楷体_GB2312">单纯的</span><span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">是无法实现排序的，这的排序是指，我们将键&#20540;对按照一定的顺序</span><span lang="EN-US"><span style="font-family:Times New Roman">put</span></span><span style="font-family:楷体_GB2312">进</span><span lang="EN-US"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312">里，然后在进行取键&#20540;对的操作的时候，是按照</span><span lang="EN-US"><span style="font-family:Times New Roman">put</span></span><span style="font-family:楷体_GB2312">进去的顺序把键&#20540;对取出来的。</span></p>
<p align="left" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; background-color:rgb(204,206,208)">
<strong><span lang="EN-US" style="color:red"><span style="font-family:Times New Roman">JAVA</span></span><span style="font-family:楷体_GB2312; color:red">在</span><span lang="EN-US" style="color:red"><span style="font-family:Times New Roman">JDK1.4</span></span><span style="font-family:楷体_GB2312; color:red">以后提供了</span><span lang="EN-US" style="color:red"><span style="font-family:Times New Roman">LinkedHashMap</span></span><span style="font-family:楷体_GB2312; color:red">来帮助我们实现了有序的</span><span lang="EN-US" style="color:red"><span style="font-family:Times New Roman">HashMap</span></span><span style="font-family:楷体_GB2312; color:red">！</span><span lang="EN-US" style="color:red"></span></strong></p>
<p align="left" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; background-color:rgb(204,206,208)">
<span lang="EN-US"><span style="font-family:Times New Roman">LinkedHashMap</span></span><span style="font-family:楷体_GB2312">取键&#20540;对时，是按照你放入的顺序来取的。</span></p>
<p align="left" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; background-color:rgb(204,206,208)">
<span lang="EN-US"><span style="font-family:Times New Roman">EG</span></span><span style="font-family:楷体_GB2312">：</span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">import</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;java.util.HashMap;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">import</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;java.util.Iterator;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">import</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;java.util.LinkedHashMap;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">import</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;java.util.Map;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">import</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;java.util.Map.Entry;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">/**</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;*&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,159,191); font-size:9pt">@author</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;TEANA
 E</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,127,159); font-size:9pt">-</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">mail: mmz06@163.<u>com</u></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;*&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,159,191); font-size:9pt">@version</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(63,95,191); font-size:9pt">创建时间：</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">2011</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,127,159); font-size:9pt">-</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">1</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,127,159); font-size:9pt">-</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">21&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(63,95,191); font-size:9pt">下午</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">02:23:07</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;*&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,159,191); font-size:9pt">@DO</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;LinkedHashMap</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(63,95,191); font-size:9pt">与</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">HashMap&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,95,191); font-size:9pt">&nbsp;*/</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">public</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">class</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;LinkedMap</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">{</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">public</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">static</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">void</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;main(String[]
 args)</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;{</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,127,95); font-size:9pt">//LinkedHashMap&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(63,127,95); font-size:9pt">有序</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map maps =&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">new</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;LinkedHashMap();</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maps.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;1&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">张三</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maps.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;2&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">李四</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maps.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;3&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">王五</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;maps.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;4&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">赵六</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(0,0,192); font-size:9pt">out</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">.println(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;LinkedHashMap(</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">有序</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">):&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Iterator it = maps.entrySet().iterator();</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">while</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">(it.hasNext())</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map.Entry entity = (Entry) it.next();</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(0,0,192); font-size:9pt">out</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">.println(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;[
 key = &quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&#43; entity.getKey() &#43;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;, value = &quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&#43;
 entity.getValue() &#43;&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot; ]&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(63,127,95); font-size:9pt">//HashMap&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(63,127,95); font-size:9pt">无序</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map map =&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">new</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;HashMap();</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;1&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">张三</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;2&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">李四</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;3&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">王五</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map.put(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;4&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">,&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">赵六</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it =&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">null</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(0,0,192); font-size:9pt">out</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">.println(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;HashMap(</span><span style="line-height:21px; font-family:楷体_GB2312; color:rgb(42,0,255); font-size:9pt">无序</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">):&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it = map.entrySet().iterator();</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(127,0,85); font-size:9pt">while</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">(it.hasNext())</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map.Entry entity = (Entry) it.next();</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.</span><span style="line-height:25px"><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(0,0,192); font-size:9pt">out</span></span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">.println(</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;[
 key = &quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&#43; entity.getKey() &#43;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot;, value = &quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&#43;
 entity.getValue() &#43;&nbsp;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:rgb(42,0,255); font-size:9pt">&quot; ]&quot;</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">);</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;&nbsp;&nbsp;&nbsp;}</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 21pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">}</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="line-height:25px; margin:0cm 0cm 0pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; background-color:rgb(204,206,208)">
<span style="font-family:楷体_GB2312">执行结果如下：</span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">LinkedHashMap(</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">有序</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">):</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 1, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">张三</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 2, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">李四</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 3, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">王五</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 4, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">赵六</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">HashMap(</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">无序</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">):</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 3, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">王五</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 2, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">李四</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 1, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">张三</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; font-size:9pt"></span></p>
<p align="left" style="margin:0cm 0cm 0pt 31.5pt; padding-top:0px; padding-bottom:0px; color:rgb(17,34,9); font-family:Arial,Helvetica,simsun,u5b8bu4f53; font-size:14px; text-align:left; text-indent:0cm; background-color:rgb(204,206,208)">
<span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">[ key = 4, value =&nbsp;</span><span style="line-height:21px; font-family:楷体_GB2312; color:black; font-size:9pt">赵六</span><span lang="EN-US" style="line-height:21px; font-family:'Courier New'; color:black; font-size:9pt">&nbsp;]</span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>21</wp:post_id>
		<wp:post_date>2012-10-17 07:10:00</wp:post_date>
		<wp:post_date_gmt>2012-10-16 23:10:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9a%e5%85%b3%e4%ba%8ehashmap%e4%b8%8elinkedhashmap-%ef%bc%88%e8%ae%b0%e5%bd%95%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>mysql数据导入时报错【Got a packet bigger than‘max_allowed_packet’bytes】的解决办法</title>
		<link>http://localhost/wp/?p=22</link>
		<pubDate>Tue, 25 Sep 2012 01:42:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=22</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://www.2cto.com/database/201204/127371.html">http://www.2cto.com/database/201204/127371.html</a></p>
<dd>&nbsp;
<p><span style="font-size:24px; color:#3333ff">数据导入报错：</span></p>
<p><span style="font-size:24px; color:#3333ff"><strong>错误代码: 1153 - Got a packet bigger than 'max_allowed_packet' bytes</strong> 终止了数据导入。</span></p>
<p><span style="font-size:24px; color:#3333ff"></span>&nbsp;</p>
<div><span style="font-size:24px; color:#3333ff">2个解决方法：</span></div>
<div><span style="font-size:24px; color:#3333ff"></span></div>
<div><span style="font-size:24px; color:#3333ff">1.临时修改：</span><a class="keylink" href="http://www.2cto.com/database/mysql/" target="_blank"><span style="font-size:24px; color:#3333ff">mysql</span></a><span style="font-size:24px; color:#3333ff">&gt;set global
 max_allowed_packet=524288000;修改 #512M</span></div>
<div><span style="font-size:24px; color:#3333ff"></span></div>
<div><span style="font-size:24px; color:#3333ff">2.修改my.cnf，需重启mysql。&nbsp; www.2cto.com&nbsp;
</span></div>
<div><span style="font-size:24px; color:#3333ff"></span></div>
<div><span style="font-size:24px; color:#3333ff">&nbsp; 在 [MySQLd] 部分添加一句（如果存在，调整其&#20540;就可以）：</span></div>
<div><span style="font-size:24px; color:#3333ff">&nbsp; max_allowed_packet=10M</span></div>
<p>&nbsp;</p>
</dd>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>22</wp:post_id>
		<wp:post_date>2012-09-25 09:42:00</wp:post_date>
		<wp:post_date_gmt>2012-09-25 01:42:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mysql%e6%95%b0%e6%8d%ae%e5%af%bc%e5%85%a5%e6%97%b6%e6%8a%a5%e9%94%99%e3%80%90got-a-packet-bigger-thanmax_allowed_packetbytes%e3%80%91%e7%9a%84%e8%a7%a3%e5%86%b3%e5%8a%9e%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>申请了半年多的个人域名终于用上了</title>
		<link>http://localhost/wp/?p=46</link>
		<pubDate>Wed, 06 Mar 2013 15:02:37 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=46</guid>
		<description></description>
		<content:encoded><![CDATA[先申请了个免费空间用着，

以后资料之类的就写到这里了]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>46</wp:post_id>
		<wp:post_date>2013-03-06 23:02:37</wp:post_date>
		<wp:post_date_gmt>2013-03-06 15:02:37</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e7%94%b3%e8%af%b7%e4%ba%86%e5%8d%8a%e5%b9%b4%e5%a4%9a%e7%9a%84%e4%b8%aa%e4%ba%ba%e5%9f%9f%e5%90%8d%e7%bb%88%e4%ba%8e%e7%94%a8%e4%b8%8a%e4%ba%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>坚持住~~~~~~~~</title>
		<link>http://localhost/wp/?p=59</link>
		<pubDate>Thu, 07 Mar 2013 15:05:22 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=59</guid>
		<description></description>
		<content:encoded><![CDATA[戒烟中，发现坚持住是个很不容易的事情，一忍再忍，忍无可忍啦]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>59</wp:post_id>
		<wp:post_date>2013-03-07 23:05:22</wp:post_date>
		<wp:post_date_gmt>2013-03-07 15:05:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>%e5%9d%9a%e6%8c%81%e4%bd%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="lqbz"><![CDATA[乱七八糟]]></category>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<category domain="category" nicename="os"><![CDATA[操作系统]]></category>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<category domain="category" nicename="net"><![CDATA[网络通信]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>windows下安装git客户端，clone时报错处理</title>
		<link>http://localhost/wp/?p=61</link>
		<pubDate>Sat, 09 Mar 2013 08:02:50 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=61</guid>
		<description></description>
		<content:encoded><![CDATA[在windows下安装git客户端msysgit后，在下载项目时会有如下的错误出现
<code>error: error setting certificate verify locations:
CAfile: /bin/curl-ca-bundle.crt
CApath: none
while accessing https://****@github.com/mikoskinen/myproject.git/info/refs
fatal: HTTP request failed</code>

需执行下：<code>git config --system http.sslcainfo \bin/curl-ca-bundle.crt</code>
执行时在git的安装目录bin下]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>61</wp:post_id>
		<wp:post_date>2013-03-09 16:02:50</wp:post_date>
		<wp:post_date_gmt>2013-03-09 08:02:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>windows%e4%b8%8b%e5%ae%89%e8%a3%85git%e5%ae%a2%e6%88%b7%e7%ab%af%ef%bc%8cclone%e6%97%b6%e6%8a%a5%e9%94%99%e5%a4%84%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>CentOS下Apache html中超链接含中文无法跳转的问题</title>
		<link>http://localhost/wp/?p=65</link>
		<pubDate>Wed, 20 Mar 2013 03:10:08 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://www.baiweigang.cn/wordpress/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[在html中一超链接含有中文
<code>
   onclick="javscript:selectTestCaseLink(this); parent.content.location='云盘接口测试_获取增量信息.html'">  
</code>

中文名的超链接  在windows下的apache一切正常，
在centos下就不行了  显示 /äº‘ç›˜æŽ¥å£æµ‹è¯•_èŽ·å–å¢žé‡ä¿¡æ¯.html was not found on this server.

已设置系统编码为gb2312  文件名可以正常显示
<code>
-rw-r--r-- 1 root root 39330 03-19 17:13 reporterOutput.html
-rw-r--r-- 1 root root  2538 03-19 17:13 style.css
-rw-r--r-- 1 root root  1124 03-19 17:13 云盘接口测试_groups.html
-rw-r--r-- 1 root root 88380 03-19 17:13 云盘接口测试.html
-rw-r--r-- 1 root root 88376 03-19 17:13 云盘接口测试_获取增量信息.html
[root@qa1 report]# 
</code>

已解决了，
windows下文件名编码为gbk，linux下编码格式为utf8 apache的url编码使用的也是utf8，
只需要把上传过来的文件名编码变更为utf8，问题解决.>

附录：linux下文件名转码的一种方式，转载自：【http://linux.chinaunix.net/techdoc/install/2009/09/01/1133310.shtml】

<code>
linux和windows双系统互拷文件乱码问题
来源: ChinaUnix博客 　日期： 2009.09.01 19:17　(共有条评论) 我要评论
 
如果你需要在linux下面用到windows下的文件，拷贝上去后经常发现中文显示乱码。。原因是Windows中默认的文件格式是GBK(gb2312)，而Linux一般都是UTF-8。比较繁琐的方法是在windows下用程序把内容转换为utf-8编码格式的，但是相当麻烦，而且遇到一个文件转一回。下面介绍一下，在Linux中如何一劳永逸的解决这个问题，查看文件的编码及如何进行对文件进行编码转换。

查看文件编码
在Linux中查看文件编码可以通过以下几种方式：
1.在
Vim
中可以直接查看文件编码
:set fileencoding
即可显示文件编码格式。
文件编码转换
1.如果你只是想查看其它编码格式的文件或者想解决用Vim查看文件乱码的问题，那么你可以在
~/.vimrc（在/etc目录下面） 文件中添加以下内容：
set encoding=utf-8 fileencodings=ucs-bom,utf-8,cp936
其中encoding是vim的默认显示编码格式，fileencodings是vim打开文件时检测的编码格式，存在这种类型的编码即转换为utf-8编码。
这样，就可以让vim自动识别文件编码（可以自动识别UTF-8或者GBK编码的文件），其实就是依照fileencodings提供的编码列表尝试，如果没有找到合适的编码，就用latin-1(ASCII)编码打开。
2.在Vim中直接进行转换文件编码,比如将一个文件转换成utf-8格式（不好用）
:set fileencoding=utf-8

3.iconv 转换，iconv的命令格式如下：（未用）
iconv -f encoding -t encoding inputfile
比如将一个UTF-8 编码的文件转换成GBK编码
iconv -f GBK -t UTF-8 file1 -o file2

文件名编码转换:
从
Linux
往 windows拷贝文件或者从windows往Linux拷贝文件，有时会出现中文文件名乱码的情况，出现这种问题的原因是因为，windows的文件名中文编码默认为GBK,而Linux中默认文件名编码为UTF8,由于编码不一致，所以导致了文件名乱码的问题，解决这个问题需要对文件名进行转码。
在Linux中专门提供了一种工具convmv进行文件名编码的转换，可以将文件名从GBK转换成UTF-8编码,或者从UTF-8转换到GBK。

首先看一下你的系统上是否安装了convmv,如果没安装的话用在
http://www.j3e.de/linux/convmv/convmv-1.14.tar.gz
下载，然后在windows下面解压缩用winscp上传真个目录，之后进入此目录执行make install命令，之后用convmv命令测试是否安装成功，若显示一些命令提示则表示成功了。
安装。

下面看一下convmv的具体用法：
convmv -f 源编码 -t 新编码 [选项] 文件名
常用参数：
-r 递归处理子文件夹
--notest 真正进行操作，请注意在默认情况下是不对文件进行真实操作的，而只是试验。
--list 显示所有支持的编码
--unescap 可以做一下转义，比如把%20变成空格
比如我们有一个utf8编码的文件名，转换成GBK编码，命令如下：
convmv -f UTF-8 -t GBK --notest utf8编码的文件名

这样转换以后"utf8编码的文件名"会被转换成GBK编码（只是文件名编码的转换，文件内容不会发生变化）
vim 编码方式的设置
和所有的流行文本编辑器一样，Vim 可以很好的编辑各种字符编码的文件，这当然包括UCS-2、UTF-8 等流行的 Unicode 编码方式。然而不幸的是，和很多来自 Linux 世界的软件一样，这需要你自己动手设置。
Vim 有四个跟字符编码方式有关的选项，encoding、fileencoding、fileencodings、termencoding (这些选项可能的取值请参考 Vim 在线帮助 :help encoding-names)，它们的意义如下: 
* encoding: Vim 内部使用的字符编码方式，包括 Vim 的 buffer (缓冲区)、菜单文本、消息文本等。默认是根据你的locale选择.用户手册上建议只在 .vimrc 中改变它的值，事实上似乎也只有在.vimrc 中改变它的值才有意义。你可以用另外一种编码来编辑和保存文件，如你的vim的encoding为utf-8,所编辑的文件采用cp936编码,vim会自动将读入的文件转成utf-8(vim的能读懂的方式），而当你写入文件时,又会自动转回成cp936（文件的保存编码). 
* fileencoding: Vim 中当前编辑的文件的字符编码方式，Vim 保存文件时也会将文件保存为这种字符编码方式 (不管是否新文件都如此)。 
* fileencodings: Vim自动探测fileencoding的顺序列表， 启动时会按照它所列出的字符编码方式逐一探测即将打开的文件的字符编码方式，并且将 fileencoding 设置为最终探测到的字符编码方式。因此最好将Unicode 编码方式放到这个列表的最前面，将拉丁语系编码方式 latin1 放到最后面。 
* termencoding: Vim 所工作的终端 (或者 Windows 的 Console 窗口) 的字符编码方式。如果vim所在的term与vim编码相同，则无需设置。如其不然，你可以用vim的termencoding选项将自动转换成term的编码.这个选项在 Windows 下对我们常用的 GUI 模式的 gVim 无效，而对 Console 模式的Vim 而言就是 Windows 控制台的代码页，并且通常我们不需要改变它。 
好了，解释完了这一堆容易让新手犯糊涂的参数，我们来看看 Vim 的多字符编码方式支持是如何工作的。 
1. Vim 启动，根据 .vimrc 中设置的 encoding 的值来设置 buffer、菜单文本、消息文的字符编码方式。
2. 读取需要编辑的文件，根据 fileencodings 中列出的字符编码方式逐一探测该文件编码方式。并设置 fileencoding 为探测到的，看起来是正确的 (注1) 字符编码方式。 
3. 对比 fileencoding 和 encoding 的值，若不同则调用 iconv 将文件内容转换为encoding 所描述的字符编码方式，并且把转换后的内容放到为此文件开辟的 buffer 里，此时我们就可以开始编辑这个文件了。注意，完成这一步动作需要调用外部的 iconv.dll(注2)，你需要保证这个文件存在于 $VIMRUNTIME 或者其他列在 PATH 环境变量中的目录里。 
4. 编辑完成后保存文件时，再次对比 fileencoding 和 encoding 的值。若不同，再次调用 iconv 将即将保存的 buffer 中的文本转换为 fileencoding 所描述的字符编码方式，并保存到指定的文件中。同样，这需要调用 iconv.dll由于 Unicode 能够包含几乎所有的语言的字符，而且 Unicode 的 UTF-8 编码方式又是非常具有性价比的编码方式 (空间消耗比 UCS-2 小)，因此建议 encoding 的值设置为utf-8。这么做的另一个理由是 encoding 设置为 utf-8 时，Vim 自动探测文件的编码方式会更准确 (或许这个理由才是主要的 ;)。我们在中文 Windows 里编辑的文件，为了兼顾与其他软件的兼容性，文件编码还是设置为 GB2312/GBK 比较合适，因此 fileencoding 建议设置为 chinese (chinese 是个别名，在 Unix 里表示 gb2312，在 Windows 里表示cp936，也就是 GBK 的代码页)。 
</code>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2013-03-20 11:10:08</wp:post_date>
		<wp:post_date_gmt>2013-03-20 03:10:08</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>centos%e4%b8%8bapache-html%e4%b8%ad%e8%b6%85%e9%93%be%e6%8e%a5%e5%90%ab%e4%b8%ad%e6%96%87%e6%97%a0%e6%b3%95%e8%b7%b3%e8%bd%ac%e7%9a%84%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_format" nicename="post-format-aside"><![CDATA[日志]]></category>
		<category domain="category" nicename="os"><![CDATA[操作系统]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_50f476d5146fd705a17f725c554d6943</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_918f63e70fcb411e60d9afb01011fd4b</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_820399b099d7a4bf76fb91f58f044eda</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_218e6c56d9b5cfdfd28b0c78a22a4536</wp:meta_key>
			<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：PHP中的“syntax error, unexpected T_PAAMAYIM_NEKUDOTAYIM”错误，在php5.2中解决</title>
		<link>http://localhost/wp/?p=74</link>
		<pubDate>Mon, 25 Mar 2013 06:01:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=74</guid>
		<description></description>
		<content:encoded><![CDATA[转自：http://blog.sina.com.cn/s/blog_97688f8e0101geff.html
转载:PHP中的“syntax error, unexpected T_PAAMAYIM_NEKUDOTAYIM”错误及解决方法

PHP中的“syntax error, unexpected T_PAAMAYIM_NEKUDOTAYIM”错误
class Test{
        static function test_c(){
                echo "test";
        }
}
$class="Test";
$method="test_c";
$class::$method();

上面类似的代码在php5.3之前会报错，就是php版本不支持$变量做类名函数名。php5.3之后是支持的。
php5.3之前可以这样写:
class Test{
        static function test_c(){
                echo "test";
        }
}
$class="Test";
$method="test_c";
eval("$class::$method();");


20130325在phpnow集成的php52环境中部署testlink1.9.6版本遇到的问题：]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>74</wp:post_id>
		<wp:post_date>2013-03-25 14:01:11</wp:post_date>
		<wp:post_date_gmt>2013-03-25 06:01:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9aphp%e4%b8%ad%e7%9a%84syntax-error-unexpected-t_paamayim_nekudotayim%e9%94%99%e8%af%af%ef%bc%8c%e5%9c%a8php5-2%e4%b8%ad%e8%a7%a3%e5%86%b3</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：Tomcat性能参数设置 </title>
		<link>http://localhost/wp/?p=79</link>
		<pubDate>Thu, 09 May 2013 02:45:24 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[转：Tomcat性能参数设置 http://blog.csdn.net/wubai250/article/details/8542506



默认参数不适合生产环境使用，因此需要修改一些参数

 

1、修改启动时内存参数、并指定JVM时区 （在windows server 2008 下时间少了8个小时）：

 

在Tomcat上运行j2ee项目代码时，经常会出现内存溢出的情况，解决办法是在系统参数中增加系统参数： 

 

window下， 在catalina.bat最前面：
set JAVA_OPTS=-XX:PermSize=64M -XX:MaxPermSize=128m -Xms512m -Xmx1024m;-Duser.timezone=GMT+08;
一定加在catalina.bat最前面。

 

linux下，在catalina.sh最前面增加：

JAVA_OPTS="-XX:PermSize=64M -XX:MaxPermSize=128m -Xms512m -Xmx1024m -Duser.timezone=Asia/Shanghai"

 

注意：前后二者区别，有无set，有无双引号。

 

 

2、线程池配置（Tomcat6下）

使用线程池，用较少的线程处理较多的访问，可以提高tomcat处理请求的能力。使用方式：

首先。打开/conf/server.xml，增加

<executor name="tomcatThreadPool" namePrefix="catalina-exec-"
        maxThreads="500" minSpareThreads="20" maxIdleTime="60000"></executor>

最大线程500（一般服务器足以），最小空闲线程数20，线程最大空闲时间60秒。

然后，修改<connector ...>节点，增加executor属性，如:

<connector executor="tomcatThreadPool"
               port="80"

protocol="HTTP/1.1"

maxThreads="600"

minSpareThreads="100"

maxSpareThreads="300"
               connectionTimeout="60000"
               keepAliveTimeout="15000"
               maxKeepAliveRequests="1"
               redirectPort="443"
               ......></connector>

maxThreads:Tomcat可创建的最大的线程数，每一个线程处理一个请求；

minSpareThreads:最小备用线程数，tomcat启动时的初始化的线程数；

maxSpareThreads:最大备用线程数，一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程；

acceptCount:指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，就是被排队的请求数，超过这个数的请求将拒绝连接。

connnectionTimeout:网络连接超时，单位：毫秒。设置为0表示永不超时，这样设置有隐患的。通常可设置为30000毫秒。
enableLookups:是否允许DNS查询

 

注意：可以多个connector公用1个线程池。

 

3、调整连接相关Connector的参数：

<connector executor="tomcatThreadPool"
               port="80" protocol="HTTP/1.1"
               connectionTimeout="60000"
               keepAliveTimeout="15000"
               maxKeepAliveRequests="1"
               redirectPort="443"
               maxHttpHeaderSize="8192" URIEncoding="UTF-8" enableLookups="false" acceptCount="100" disableUploadTimeout="true"></connector>

 

参数说明：

    connectionTimeout - 网络连接超时，单位：毫秒。设置为0表示永不超时，这样设置有隐患的。通常可设置为30000毫秒。
    keepAliveTimeout - 长连接最大保持时间（毫秒）。此处为15秒。
    maxKeepAliveRequests - 最大长连接个数（1表示禁用，-1表示不限制个数，默认100个。一般设置在100~200之间） the maximum number of HTTP requests that can be held in the pipeline until the connection is closed by the server. Setting this attribute to 1 disables HTTP/1.0 keep-alive, as well as HTTP/1.1 keep-alive and pipelining. Setting this to -1 allows an unlimited number of pipelined or keep-alive HTTP requests. If not specified, this attribute is set to 100.
    maxHttpHeaderSize - http请求头信息的最大程度，超过此长度的部分不予处理。一般8K。
    URIEncoding - 指定Tomcat容器的URL编码格式。
    acceptCount - 指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理，默认为10个。defines the maximum queue length for incoming connection requests when all possible request processing threads are in use. Any requests received when the queue is full are refused. The default value is 10.
    disableUploadTimeout - 上传时是否使用超时机制
    enableLookups - 是否反查域名，取值为：true或false。为了提高处理能力，应设置为false
    bufferSize - defines the size (in bytes) of the buffer to be provided for input streams created by this connector. By default, buffers of 2048 bytes are provided.
    maxSpareThreads - 做多空闲连接数，一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程 the maximum number of unused request processing threads that are allowed to exist until the thread pool starts stopping the unnecessary threads. The default value is 50.
    maxThreads - 最多同时处理的连接数，Tomcat使用线程来处理接收的每个请求。这个值表示Tomcat可创建的最大的线程数。。 the maximum number of request processing threads to be created by this Connector, which therefore determines the maximum number of simultaneous requests that can be handled. If not specified, this attribute is set to 200.
    minSpareThreads - 最小空闲线程数，Tomcat初始化时创建的线程数 the number of request processing threads that are created when this Connector is first started. The connector will also make sure it has the specified number of idle processing threads available. This attribute should be set to a value smaller than that set for maxThreads. The default value is 4.
    minProcessors - 最小空闲连接线程数，用于提高系统处理性能，默认值为10。（用于Tomcat4中）
    maxProcessors - 最大连接线程数，即：并发处理的最大请求数，默认值为75。（用于Tomcat4中）

备注：

Tomcat4中可以通过修改minProcessors和maxProcessors的值来控制线程数。

在Tomcat5+主要对以下参数调整
maxThreads
 Tomcat使用线程来处理接收的每个请求。这个值表示Tomcat可创建的最大的线程数。
 acceptCount
 指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理。
 connnectionTimeout
 网络连接超时，单位：毫秒。设置为0表示永不超时，这样设置有隐患的。通常可设置为30000毫秒。
 minSpareThreads
 Tomcat初始化时创建的线程数。
 maxSpareThreads
 一旦创建的线程超过这个值，Tomcat就会关闭不再需要的socket线程。  

 

 

 4、负载均衡、集群的配置

Tomcat6支持分布式部署，可以实现集群功能，提高响应能力。

 

5、

利用JMX监控Tomcat运行情况，需要手工调整启动参数，如下：

打开cataline.bat，增加一行

set JAVA_OPTS=%JAVA_OPTS% -Dcom.sun.management.jmxremote.port=10090 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.util.logging.config.file="%CATALINA_BASE%\conf\logging.properties"

 

linux下修改cataline.sh:
JAVA_OPTS="-Dcom.sun.management.jmxremote.port=10090 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager -Djava.util.logging.config.file=%CATALINA_BASE\conf\logging.properties"

注意JDK\jre\lib\management\management.properties文件必须存在。

 

重新启动tomcat节点，然后用jconsole连接（此处端口wei10090）

 

6、Tomcat增加一个应用

在server.xml的Host标签中增加行

<context displayName="OA" docBase="/app/web-apps/GACWP" path=""></context>

path代表上下文名称，空表示是根路径。
</connector>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2013-05-09 10:45:24</wp:post_date>
		<wp:post_date_gmt>2013-05-09 02:45:24</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9atomcat%e6%80%a7%e8%83%bd%e5%8f%82%e6%95%b0%e8%ae%be%e7%bd%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>烦烦烦烦烦</title>
		<link>http://localhost/wp/?p=81</link>
		<pubDate>Thu, 16 May 2013 03:29:53 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[烦烦烦烦烦]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2013-05-16 11:29:53</wp:post_date>
		<wp:post_date_gmt>2013-05-16 03:29:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e7%83%a6%e7%83%a6%e7%83%a6%e7%83%a6%e7%83%a6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="lqbz"><![CDATA[乱七八糟]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>来自微信--2013-06-26 22:08:42</title>
		<link>http://localhost/wp/?p=105</link>
		<pubDate>Wed, 26 Jun 2013 14:08:42 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=105</guid>
		<description></description>
		<content:encoded><![CDATA[终于下班了，最近就没10点前到过家呢。php好带劲]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>105</wp:post_id>
		<wp:post_date>2013-06-26 22:08:42</wp:post_date>
		<wp:post_date_gmt>2013-06-26 14:08:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>WEIXIN</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>国人开发css框架 渴切 </title>
		<link>http://localhost/wp/?p=106</link>
		<pubDate>Wed, 26 Jun 2013 16:06:02 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=106</guid>
		<description></description>
		<content:encoded><![CDATA[记录下网址 http://www.keqie.com/]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>106</wp:post_id>
		<wp:post_date>2013-06-27 00:06:02</wp:post_date>
		<wp:post_date_gmt>2013-06-26 16:06:02</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>WEIXIN</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>新任务哈</title>
		<link>http://localhost/wp/?p=122</link>
		<pubDate>Thu, 27 Jun 2013 15:46:48 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=122</guid>
		<description></description>
		<content:encoded><![CDATA[自己的公众平台上增加读书功能。
把已搜集整理好的书籍 资料等返回微信端，在碎片时间读一读。亮亮的idear。明儿实现了。顺带着把发送私密博文的需求也完成了的。]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>122</wp:post_id>
		<wp:post_date>2013-06-27 23:46:48</wp:post_date>
		<wp:post_date_gmt>2013-06-27 15:46:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>WEIXIN</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>js一报错就全玩完</title>
		<link>http://localhost/wp/?p=128</link>
		<pubDate>Tue, 02 Jul 2013 03:25:17 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=128</guid>
		<description></description>
		<content:encoded><![CDATA[前端处理，使用的一前端框架的js报错，会导致自己写的js脚本也不执行啦。不起作用阿  这9问题费我太多时间。记下这点吧。 一点错都不能有阿]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>128</wp:post_id>
		<wp:post_date>2013-07-02 11:25:17</wp:post_date>
		<wp:post_date_gmt>2013-07-02 03:25:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>WEIXIN</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
	</item>
	<item>
				<title>windows中，cmd命令行窗口正确显示编码为utf-8格式的中文</title>
		<link>http://localhost/wp/?p=129</link>
		<pubDate>Fri, 05 Jul 2013 09:54:17 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=129</guid>
		<description></description>
		<content:encoded><![CDATA[windows中，cmd命令行窗口正确显示编码为utf-8格式的中文
<div>输入命令 chcp 65001 编码变为UTF-8</div>
<div>想改回gbk输入   chcp 936</div>
<div></div>
<div></div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>129</wp:post_id>
		<wp:post_date>2013-07-05 17:54:17</wp:post_date>
		<wp:post_date_gmt>2013-07-05 09:54:17</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>windows%e4%b8%ad%ef%bc%8ccmd%e5%91%bd%e4%bb%a4%e8%a1%8c%e7%aa%97%e5%8f%a3%e6%ad%a3%e7%a1%ae%e6%98%be%e7%a4%ba%e7%bc%96%e7%a0%81%e4%b8%bautf-8%e6%a0%bc%e5%bc%8f%e7%9a%84%e4%b8%ad%e6%96%87</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：Java Socket简单实现HTTP服务</title>
		<link>http://localhost/wp/?p=136</link>
		<pubDate>Thu, 18 Jul 2013 05:35:42 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=136</guid>
		<description></description>
		<content:encoded><![CDATA[转自：<a title="junJZ_2008的博客" href="http://jiangzhengjun.iteye.com/blog/512380" target="_blank">http://jiangzhengjun.iteye.com/blog/512380</a>

一个简单的用 Java Socket 编写的 HTTP 服务器应用, 演示了请求和应答的协议通信内容以及给客户端返回 HTML 文本和二进制数据文件(一个图片), 同时展示了 404, 200 等状态码.
首先运行这个程序,然后打开Web浏览器,键入http://localhost,则这个程序能够显示出浏览器发送了那些信息并且向浏 览器返回一个网页和一副图片, 并测试同浏览器对话.  当浏览器看到 HTML 中带有图片地址时, 则会发出第二次连接来请求图片等资源.  这个例子可以帮您理解 Java 的 HTTP 服务器软件是基于 J2SE 的 Socket 等软件编写的概念, 并熟悉HTTP 协议.  相反的用 Telnet 连接到已有的服务器则可以帮忙理解浏览器的运行过程和服务器端的返回内容.

当 用户在Web浏览器地址栏中输入一个带有http://前缀的URL并按下Enter后,或者在Web页面中某个以http://开头的超链接上单击鼠 标,HTTP事务处理的第一个阶段--建立连接阶段就开始了.HTTP的默认端口是80.  随着连接的建立,HTTP就进入了客户向服务器发送请求的阶 段.客户向服务器发送的请求是一个有特定格式的ASCII消息,其语法规则为:
&lt; Method &gt; &lt; URL &gt; &lt; HTTP Version &gt; &lt;\r\n&gt;
{ &lt;Header&gt;:&lt;Value&gt; &lt;\r\n&gt;}
&lt;\r\n&gt;
{ Entity Body }
请求消息的顶端是请求行,用于指定方法,URL和HTTP协议的版本,请求行的最后是回车换行.方法 GET,POST,HEAD,PUT,DELETE等.  在请求行之后是若干个报头(Header)行.每个报头行都是由一个报头和一个取值构成的二元 对,报头和取值之间以":"分隔;报头行的最后是回车换行.常见的报头有Accept(指定MIME媒体类型),Accept_Charset(响应消息 的编码方式),Accept_Encoding(响应消息的字符集),User_Agent(用户的浏览器信息)等.  在请求消息的报头行之后是一个回 车换行,表明请求消息的报头部分结束.在这个之后是请求消息的消息实体(Entity Body).具体的例子参看httpRequest.txt.

Web服务器在收到客户请求并作出处理之后,要向客户发送应答消息.与请求消息一样,应答消息的语法规则为:
&lt; HTTP Version&gt; &lt;Status Code&gt; [&lt;Message&gt;]&lt;\r\n&gt;
{ &lt;Header&gt;:&lt;Value&gt; &lt;\r\n&gt; }
&lt;\r\n&gt;
{ Entity Body }
应答消息的第一行为状态行,其中包括了HTTP版本号,状态码和对状态码进行简短解释的消息;状态行的最后是回车换行.状态码由3位数字组成,有5类:
参看:HTTP应答码及其意义

1XX 保留
2XX 表示成功
3XX 表示URL已经被移走
4XX 表示客户错误
5XX 表示服务器错误
例如:415,表示不支持改媒体类型;503,表示服务器不能访问.最常见的是200,表示成功.常见的报头有:Last_Modified(最后修改时间),Content_Type(消息内容的MIME类型),Content_Length(内容长度)等.

在报头行之后也是一个回车换行,用以表示应答消息的报头部分的结束,以及应答消息实体的开始.

下面是一个应答消息的例子:
HTTP/1.0 200 OK
Date: Moday,07-Apr-97 21:13:02 GMT
Server:NCSA/1.1
MIME_Version:1.0
Content_Type:text/html
Last_Modified:Thu Dec 5 09:28:01 1996
Coentent_Length:3107

&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;&lt;/HTML&gt;

在 用Java语言实现HTTP服务器时,首先启动一个java.net.ServerSocket在提供服务的端口上监听连接.向客户返回文本时,可以用 PrintWriter,但是如果返回二进制数据,则必须使用OutputStream.write(byte[])方法,返回的应答消息字符串可以使用 String.getBytes()方法转换为字节数组返回,或者使用PrintStream的print()方法写入文本,用 write(byte[])方法写入二进制数据.

源程序来自http://blog.csdn.net/myeclipse_java，本程序是在原有基础上进行了一些调整，源程序在POST请求时会阻塞，本程序解决了此问题，另外，本程序在原有的基础上增加了文件上传与下载模拟功能：


[java]
    import java.io.File;  
    import java.io.FileInputStream;  
    import java.io.IOException;  
    import java.io.InputStream;  
    import java.io.PrintStream;  
    import java.io.PrintWriter;  
    import java.net.ServerSocket;  
    import java.net.Socket;  
    import java.net.URLDecoder;  
    import java.util.ArrayList;  
    import java.util.StringTokenizer;  
      
    /** 
     *  
     * @author 刘长炯 
     * modi by jzj 
     * 
     */  
    public class SimpleHttpServer implements Runnable {  
      
        ServerSocket serverSocket;//服务器Socket  
      
        public static int PORT = 80;//标准HTTP端口  
      
        public String encoding = &quot;GBK&quot;;  
      
        public SimpleHttpServer() {  
            try {  
                serverSocket = new ServerSocket(PORT);  
            } catch (Exception e) {  
                e.printStackTrace();  
                System.exit(1);  
            }  
            new Thread(this).start();  
            System.out.println(&quot;HTTP服务器正在运行,端口:&quot; + PORT);  
        }  
      
        public void run() {  
            while (true) {  
                try {  
                    Socket client = serverSocket.accept();//客户机(这里是 IE 等浏览器)已经连接到当前服务器  
                    if (client != null) {  
                        System.out.println(&quot;连接到服务器的用户:&quot; + client);  
                        try {  
                            // 第一阶段: 打开输入流  
                            InputStream is = client.getInputStream();  
      
                            System.out.println(&quot;客户端发送的请求信息: &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;);  
                            // 读取第一行, 请求地址  
                            String line = readLine(is, 0);  
                            //打印请求行  
                            System.out.print(line);  
                            // &lt; Method &gt; &lt; URL &gt; &lt; HTTP Version &gt; &lt;\r\n&gt;  取的是URL部分  
                            String resource = line.substring(line.indexOf('/'), line  
                                    .lastIndexOf('/') - 5);  
                            //获得请求的资源的地址  
                            resource = URLDecoder.decode(resource, encoding);//反编码 URL 地址  
                            String method = new StringTokenizer(line).nextElement()  
                                    .toString();// 获取请求方法, GET 或者 POST  
                            int contentLength = 0;//如果为POST方法，则会有消息体长度  
      
                            // 读取所有浏览器发送过来的请求参数头部信息  
                            do {  
                                line = readLine(is, 0);  
                                //如果有Content-Length消息头时取出  
                                if (line.startsWith(&quot;Content-Length&quot;)) {  
                                    contentLength = Integer.parseInt(line.split(&quot;:&quot;)[1]  
                                            .trim());  
                                }  
                                //打印请求部信息  
                                System.out.print(line);  
                                //如果遇到了一个单独的回车换行，则表示请求头结束  
                            } while (!line.equals(&quot;\r\n&quot;));  
                            //如果是POST请求，则有请求体  
                            if (&quot;POST&quot;.equalsIgnoreCase(method)) {  
                                //注，这里只是简单的处理表单提交的参数，而对于上传文件这里是不能这样处理的，  
                                //因为上传的文件时消息体不只是一行，会有多行消息体  
                                System.out.print(readLine(is, contentLength));  
                                System.out.println();  
                            }  
      
                            System.out.println(&quot;客户端发送的请求信息结束 &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;);  
                            System.out.println(&quot;用户请求的资源是:&quot; + resource);  
                            System.out.println(&quot;请求的类型是: &quot; + method);  
                            System.out.println();  
      
                            //如果是下载文件  
                            if (resource.startsWith(&quot;/download&quot;)) {  
                                fileDownload(&quot;test.txt&quot;, client);  
                                closeSocket(client);  
                                continue;  
                            }  
      
                            // GIF 图片就读取一个真实的图片数据并返回给客户端  
                            if (resource.endsWith(&quot;.gif&quot;)) {  
                                imgDownload(&quot;test.gif&quot;, client);  
                                closeSocket(client);  
                                continue;  
                            }  
      
                            // 请求 JPG 格式就报错 404  
                            if (resource.endsWith(&quot;.jpg&quot;)) {  
                                PrintWriter out = new PrintWriter(client.getOutputStream(),  
                                        true);  
                                out.println(&quot;HTTP/1.0 404 Not found&quot;);//返回应答消息,并结束应答  
                                out.println();// 根据 HTTP 协议, 空行将结束头信息  
                                out.close();  
                                closeSocket(client);  
                                continue;  
                            } else {  
                                // 用 writer 对客户端 socket 输出一段 HTML 代码  
                                PrintWriter out = new PrintWriter(client.getOutputStream(),  
                                        true);  
                                out.println(&quot;HTTP/1.0 200 OK&quot;);//返回应答消息,并结束应答  
                                out.println(&quot;Content-Type:text/html;charset=&quot; + encoding);  
                                out.println();// 根据 HTTP 协议, 空行将结束头信息  
      
                                out.println(&quot;&lt;h1&gt; Hello Http Server&lt;/h1&gt;&quot;);  
                                out.println(&quot;你好, 这是一个 Java HTTP 服务器 demo 应用.&lt;br&gt;&quot;);  
                                out.println(&quot;您请求的路径是: &quot; + resource + &quot;&lt;br&gt;&quot;);  
                                out.println(&quot;你请求的页面含有图片:&lt;img src='test.gif'&gt;&lt;br&gt;&quot;  
                                        + &quot;&lt;a href='test.gif'&gt;手动点击打开test.gif图片文件.&lt;/a&gt;&quot;);  
                                out.println(&quot;&lt;br&gt;服务器不支持jpg格式图片，所以显示XX:&quot;  
                                        + &quot;&lt;img src='test.jpg'&gt;&lt;br&gt;&lt;a href='test.jpg'&gt;&quot;  
                                        + &quot;手动点击打开test.jpg，会跳转另一页面，并且服务返回为404错误&lt;/a&gt;&lt;br&gt;&quot;);  
                                out  
                                        .println(&quot;&lt;form method=post action='/path?qryParm=POST URL查询参数' &gt; POST 表单 &quot;  
                                                + &quot;&lt;input name=username value='用户'&gt; &quot;  
                                                + &quot;&lt;input name=submit type=submit value=submit&gt;&lt;/form&gt;&quot;);  
                                out  
                                        .println(&quot;&lt;form method=get action='/path?qryParm=GET URL查询参数' &gt;&amp;nbsp;GET 表单 &quot;  
                                                + &quot;&lt;input name=username value='用户'&gt; &quot;  
                                                + &quot;&lt;input name=submit type=submit value=submit&gt;&lt;/form&gt;&quot;);  
      
                                out  
                                        .println(&quot;&lt;form method=post action='/path?qryParm=POST URL查询参数'&quot;  
                                                + &quot; enctype='multipart/form-data' &gt;&quot;  
                                                + &quot;文件上传&amp;nbsp; &lt;input type='file' name=file1 &gt;&lt;br&gt;&quot;  
                                                + &quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &quot;  
                                                + &quot;&lt;input type='file' name=file2 &gt;&lt;br&gt;&quot;  
                                                + &quot;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &quot;  
                                                + &quot;&lt;input name=username value='用户'&gt; &quot;  
                                                + &quot;&lt;input name=submit type=submit value=submit&gt;&lt;/form&gt;&quot;);  
                                out.println(&quot;&lt;a href='/download'&gt;点击此处模拟文件下载&lt;/a&gt;&quot;);  
      
                                out.close();  
      
                                closeSocket(client);  
                            }  
                        } catch (Exception e) {  
                            System.out.println(&quot;HTTP服务器错误:&quot; + e.getLocalizedMessage());  
                        }  
                    }  
                    //System.out.println(client+&quot;连接到HTTP服务器&quot;);//如果加入这一句,服务器响应速度会很慢  
                } catch (Exception e) {  
                    System.out.println(&quot;HTTP服务器错误:&quot; + e.getLocalizedMessage());  
                }  
            }  
        }  
      
        /* 
         * 这里我们自己模拟读取一行，因为如果使用API中的BufferedReader时，它是读取到一个回车换行后 
         * 才返回，否则如果没有读取，则一直阻塞，这就导致如果为POST请求时，表单中的元素会以消息体传送， 
         * 这时，消息体最末按标准是没有回车换行的，如果此时还使用BufferedReader来读时，则POST提交 
         * 时会阻塞。如果是POST提交时我们按照消息体的长度Content-Length来截取消息体，这样就不会阻塞 
         */  
        private String readLine(InputStream is, int contentLe) throws IOException {  
            ArrayList lineByteList = new ArrayList();  
            byte readByte;  
            int total = 0;  
            if (contentLe != 0) {  
                do {  
                    readByte = (byte) is.read();  
                    lineByteList.add(Byte.valueOf(readByte));  
                    total++;  
                } while (total &lt; contentLe);//消息体读还未读完  
            } else {  
                do {  
                    readByte = (byte) is.read();  
                    lineByteList.add(Byte.valueOf(readByte));  
                } while (readByte != 10);  
            }  
      
            byte[] tmpByteArr = new byte[lineByteList.size()];  
            for (int i = 0; i &lt; lineByteList.size(); i++) {  
                tmpByteArr[i] = ((Byte) lineByteList.get(i)).byteValue();  
            }  
            lineByteList.clear();  
      
            String tmpStr = new String(tmpByteArr, encoding);  
            /* http请求的header中有一个Referer属性，这个属性的意思就是如果当前请求是从别的页面链接过 
             * 来的，那个属性就是那个页面的url，如果请求的url是直接从浏览器地址栏输入的就没有这个值。得 
             * 到这个值可以实现很多有用的功能，例如防盗链，记录访问来源以及记住刚才访问的链接等。另外，浏 
             * 览器发送这个Referer链接时好像固定用UTF-8编码的，所以在GBK下出现乱码，我们在这里纠正一下 
             */  
            if (tmpStr.startsWith(&quot;Referer&quot;)) {//如果有Referer头时，使用UTF-8编码  
                tmpStr = new String(tmpByteArr, &quot;UTF-8&quot;);  
            }  
            return tmpStr;  
        }  
      
        /** 
        * 关闭客户端 socket 并打印一条调试信息. 
        * @param socket 客户端 socket. 
        */  
        void closeSocket(Socket socket) {  
            try {  
                socket.close();  
            } catch (IOException ex) {  
                ex.printStackTrace();  
            }  
            System.out.println(socket + &quot;离开了HTTP服务器&quot;);  
        }  
      
        /** 
        * 读取一个图像文件的内容并返回给浏览器端. 
        * @param fileName 文件名 
        * @param socket 客户端 socket. 
        */  
        void imgDownload(String fileName, Socket socket) {  
      
            try {  
                PrintStream out = new PrintStream(socket.getOutputStream(), true);  
                File fileToSend = new File(fileName);  
                if (fileToSend.exists() &amp;&amp; !fileToSend.isDirectory()) {  
                    out.println(&quot;HTTP/1.0 200 OK&quot;);//返回应答消息,并结束应答  
                    out.println(&quot;Content-Type: application/octet-stream&quot;);  
                    out.println(&quot;Content-Length: &quot; + fileToSend.length());// 返回内容字节数  
                    out.println();// 根据 HTTP 协议, 空行将结束头信息  
      
                    FileInputStream fis = new FileInputStream(fileToSend);  
                    byte data[] = new byte[fis.available()];  
                    fis.read(data);  
                    out.write(data);  
                    //文件下载完后关闭socket流，但socket还没有关闭  
                    out.close();  
                    fis.close();  
                }  
            } catch (Exception e) {  
                e.printStackTrace();  
            }  
        }  
      
        /** 
        * 读取一个文件的内容并返回给浏览器端. 
        * @param fileName 文件名 
        * @param socket 客户端 socket. 
        */  
        void fileDownload(String fileName, Socket socket) {  
            try {  
                PrintStream out = new PrintStream(socket.getOutputStream(), true);  
                File fileToSend = new File(fileName);  
                if (fileToSend.exists() &amp;&amp; !fileToSend.isDirectory()) {  
                    out.println(&quot;HTTP/1.0 200 OK&quot;);//返回应答消息,并结束应答  
                    out.println(&quot;Content-Type: application/octet-stream;charset=&quot; + encoding);  
      
                    /* Content-Disposition不是标准参数，查看一下HTTP/1.1的规范文档，对于这个参数的解释大意如下： 
                     * Content-Disposition参数本来是为了在客户端另存文件时提供一个建议的文件名，但是考虑到安全的原因， 
                     * 就从规范中去掉了这个参数。但是由于很多浏览器已经能够支持这个参数，所以只是在规范文档中列出，但是要 
                     * 注意这个不是HTTP/1.1的标准参数。其值为“attachment”，那么无论这个文件是何类型，浏览器都会提示我 
                     * 们下载此文件，因为此时它认为后面的消息体是一个“附件”，不需要由浏览器来处理了。 
                     */  
                    out.println(&quot;Content-Disposition: attachment;filename=测试下载文件.txt&quot;);  
                    //              out.println(&quot;Accept-Ranges: bytes&quot;);  
                    out.println(&quot;Content-Length: &quot; + fileToSend.length());// 返回内容字节数  
                    out.println();// 根据 HTTP 协议, 空行将结束头信息  
      
                    FileInputStream fis = new FileInputStream(fileToSend);  
                    byte[] tmpByteArr = new byte[10];//这里为了测试看下载进度条，所以设置小点  
                    while (fis.available() &gt; 0) {  
                        int readCount = fis.read(tmpByteArr);  
                        out.write(tmpByteArr, 0, readCount);  
                    }  
      
                    //文件下载完后关闭socket流  
                    out.close();  
                    fis.close();  
                }  
            } catch (Exception e) {  
                e.printStackTrace();  
            }  
        }  
      
        public static void main(String[] args) {  
            PORT = 8080;  
            new SimpleHttpServer();  
        }  
    }  


[/java]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>136</wp:post_id>
		<wp:post_date>2013-07-18 13:35:42</wp:post_date>
		<wp:post_date_gmt>2013-07-18 05:35:42</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava-socket%e7%ae%80%e5%8d%95%e5%ae%9e%e7%8e%b0http%e6%9c%8d%e5%8a%a1</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="net"><![CDATA[网络通信]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>windows下使用命令行获取cpu使用率以及内存等信息</title>
		<link>http://localhost/wp/?p=148</link>
		<pubDate>Fri, 19 Jul 2013 07:38:11 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=148</guid>
		<description></description>
		<content:encoded><![CDATA[wmic cpu get loadpercentage  获取cpu负载百分比

mem 获取当前内存使用情况 


获取上述命令结果后 进一步解析 即可得到cpu和内存使用情况

ps： cpu的获取可能不太准确]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>148</wp:post_id>
		<wp:post_date>2013-07-19 15:38:11</wp:post_date>
		<wp:post_date_gmt>2013-07-19 07:38:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>windows%e4%b8%8b%e4%bd%bf%e7%94%a8%e5%91%bd%e4%bb%a4%e8%a1%8c%e8%8e%b7%e5%8f%96cpu%e4%bd%bf%e7%94%a8%e7%8e%87%e4%bb%a5%e5%8f%8a%e5%86%85%e5%ad%98%e7%ad%89%e4%bf%a1%e6%81%af</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[操作系统]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>webdriver下拉框选择</title>
		<link>http://localhost/wp/?p=150</link>
		<pubDate>Fri, 19 Jul 2013 12:38:44 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=150</guid>
		<description></description>
		<content:encoded><![CDATA[帮开发弄个监控个支付测试页面，验证每种支付渠道都是通畅的
图省事，使用网易的开源ui轻量级框架dagger  这个是真轻量级啊  没封装select

在使用中，自己写了下
<pre>  
RemoteWebDriver wd = be.getBrowserCore();//获取webdriver
Select select = new Select(wd.findElement(By.xpath(Conf.selectBankType)));//根据xpath获取下拉框
select.selectByValue("zfb");//设置下拉框选项
</pre>

参考资料--<a href="http://blog.163.com/rettar@126/blog/static/12165034220116162353659/">http://blog.163.com/rettar@126/blog/static/12165034220116162353659/</a>

<pre>
下拉框(select)

         Select select = new Select(driver.findElement(By.id("select")))

         选择对应的选择项： select.selectByVisibleText("selecttext");

                       或者   select.selectByValue("selectvalue")

         相应的，不选择对应的选择项 使用 select.deselectAll(); deselectByValue("value"); deselectByVisibleText("text")
</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>150</wp:post_id>
		<wp:post_date>2013-07-19 20:38:44</wp:post_date>
		<wp:post_date_gmt>2013-07-19 12:38:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>webdriver%e4%b8%8b%e6%8b%89%e6%a1%86%e9%80%89%e6%8b%a9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>java默认读取properties文件中文乱码处理方法</title>
		<link>http://localhost/wp/?p=152</link>
		<pubDate>Fri, 19 Jul 2013 16:21:13 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=152</guid>
		<description></description>
		<content:encoded><![CDATA[中文乱码原因是编码问题，native2ascii转码太繁琐了，而且转码后的properties文件也不易于阅读
使用下述转码方式比较不错  在代码中处理
处理代码如下：
<java>
String value = prop.getProperty("userName");
value=new String(value.getBytes("ISO-8859-1"),"UTF-8");
</java>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>152</wp:post_id>
		<wp:post_date>2013-07-20 00:21:13</wp:post_date>
		<wp:post_date_gmt>2013-07-19 16:21:13</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>java%e9%bb%98%e8%ae%a4%e8%af%bb%e5%8f%96properties%e6%96%87%e4%bb%b6%e4%b8%ad%e6%96%87%e4%b9%b1%e7%a0%81%e5%a4%84%e7%90%86%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>接口测试自动化框架--自动生成测试用例</title>
		<link>http://localhost/wp/?p=157</link>
		<pubDate>Fri, 26 Jul 2013 10:47:43 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;">一、开发环境</p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;">开发语言：java</span></p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;">IDE：Eclipse</span></span></p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;">主要第三方工具：TestNG、freemarker、maven</span></span></span><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;">二、实现过程</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">在执行用例时，HttpClient完成http发起请求的处理，TestNG完成用例的调度执行，包括html格式测试报告的生成。</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">基于接口测试的特点，编写的TestNG执行的用例中，90%的代码都是重复的，而且在java代码中编写的用例不便于维护，接口参数/返回类型有变更时，要更新多个地方的信息。<span class="span4br"></span>如果使用Excel来存储接口测试的相关数据，使用者只需关注Excel中每一条用例中参数值及返回的预期结果，</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">在用例执行之前，自动生成TestNG可执行的用例.java文件和.xml文件。确定接口Excel测试数据文件格式，如下图所示：一看就能明白各项的含义的，不详细一一解释了</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2Fexcel.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ByVyG4Ow34uOUerDhjx5iYfL0z4%3D" style="float:none;" border="0" hspace="0" vspace="0" /></p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">cookie：上面的cookie项是全局的cookie，各用例如果有需要可添加cookie列，只对当前用例有效</p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">ArgCount： 参与签名计算的参数个数，如果无需签名，此处写为0</p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">TestPoint表示测试点说明 &nbsp;会在生成的html报告中使用到</p><p style="padding:0px;color:#555555;font-family:verdana,&#39;bitstream vera sans&#39;,tahoma,helvetica,sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">timestamp 此参数值写为timestamp，在运行时会转换为Unix时间戳</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;">先贴一段执行入口的代码，然后继续</p><pre class="brush:java;toolbar:false;">public static void main(String[] args) {
        TestReport report = new TestReport();
        TaskSingleModel task = TaskSingleModel.getInstance();//单例模式
                   
        // Excel格式的测试用例
        task.addCase("testcase/TestCaseDemo.xlsx","demo","template/demo接口.java");
        task.addCase("testcase/TestCaseDemo.xlsx","demoTest","template/demo接口.java");
                   
        task.setTaskName("demo测试");
                   
        //可选配置–设置测试报告输出目录，未设置使用默认
        // task.setHtmlReportPath(RootPath.getServer_ift_path()+"/report/html");
        // task.setExcelReportPath(RootPath.getServer_ift_path()+"/report/excel");
                   
        //可选配置–设置TestNG执行记录是否输出
        //是否输出到Log日志
        // TestngLog.setOutputLogFlag(false);
        //是否输出到TestNG日志
        // TestngLog.setOutputTestNGLog(false);
        //执行用例之前是否清空相关临时目录(生成的用例JAVA文件、编译后的CLASS文件、XML配置文件、TestNG输出目录)
        TngTools.delTmpPath();
        // 执行用例,获取生成的测试报告
        report = task.execTask();
        //打印测试报告路径信息
        System.out.println("运行的任务名称为："+report.getTaskName());
        System.out.println("生成的html格式测试报告路径为："+report.getHtmlReport());
        System.out.println("生成的excel格式测试报告路径为："+report.getExcelReport());
    }</pre><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">TestReport 记录各种类型测试报告</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">TaskSingleModel 执行队列,一个Excel的sheet页数据文件，对应TestNG的一个测试集</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">执行队列的addCase方法支持添加 xml/java/data(Excel)三种格式的测试用例，在这只讲述测试用例格式为Excel的情况</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">execTask()完成整个执行过程，最后返回测试报告</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">task.addCase(“testcase/TestCaseDemo.xlsx”,”demoTest”,”template/demo接口.java”);</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">addCase方法的第一个参数表示Excel用例文件的位置，</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">第二个参表示要生成的.java用例文件的类名，</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">第三个参数表示生产用例时使用的模板文件路径在用例执行前，</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">先读取Excel文件，把所有Run标识为Y的数据读取到List的列表中，其中TestCase是自定义实体类，代表一条测试用例，<span class="span4br"></span>读取后，根据模板生成TestNG的测试用例.java文件</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">模板demo.ftl如下：</p><pre class="brush:java;toolbar:false;">package ${javaInfo.packageName};
//省略import
………………
public class ${javaInfo.javaFileName} {
            
    private CasesUtils cau;
    private String PATH_NAME;
    private String CASE_SHEET_NAME;
    private String REPORT_PATH;
    private String REPORT_EXCEL_NAME;
    private String REPORT_SHEET_NAME;
    private ArrayList allcase ;
    private ExportReportExcel exportexcel;
            
    //记录预期值与实际值比对情况
    private ArrayList&lt;LinkedHashMap&lt;String,String&gt;&gt; arrres;
    //预期结果与实际结果比对处理
    private CompareResult comresult;
                
    @BeforeTest
    public void SetUp() {
        cau=new CasesUtils();
        allcase=new ArrayList() ;
        PATH_NAME="${javaInfo.caseDataPathName}";
        CASE_SHEET_NAME="${javaInfo.caseDataSheetName}";
        REPORT_PATH="${javaInfo.excelReportPath}";
        REPORT_EXCEL_NAME="${javaInfo.excelReportName}";
        REPORT_SHEET_NAME="${javaInfo.excelReportSheetName}";
        arrres=new ArrayList&lt;LinkedHashMap&lt;String,String&gt;&gt;();
        comresult=new CompareResult();
        exportexcel=new ExportReportExcel();
        //省略部分逻辑处理操作
        ………………
    }
            
    //根据待执行用例列表，生成对应的测试用例java源码
&lt;#list javaInfo.allCase as CreateJavaCaseID&gt;
    @Test(description="${CreateJavaCaseID.testPoint}()")
    public void ${CreateJavaCaseID.caseId}(){        
        TestCase testcase=new TestCase();
        testcase=allcase.get(${CreateJavaCaseID_index});
        Map&lt;String,String&gt; result=new TreeMap&lt;String,String&gt;();
        Map&lt;String, String&gt; resmap=new TreeMap&lt;String, String&gt;();//记录执行后返回的map表
        String httpurl="";//记录请求发送的Url
        String expres="";//期望的结果
        String response="";//请求响应的返回字符串
        String actres="";//过滤后实际的结果
        boolean res=false;//记录比对结果
        //省略部分处理逻辑
        ………………
    }
&lt;/#list&gt;
            
    @AfterTest
    public void CloseConn() {
        //省略部分处理逻辑
        ………………
                    
        cau.closeConn();//关闭http连接
        //写入Excel格式测试报告
        exportexcel.CreatReportExcel(REPORT_PATH,REPORT_EXCEL_NAME,REPORT_SHEET_NAME,arrres);
    }
            
}</pre><p><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;">在最终生成的.java用例文件中，@Test部分会根据用例信息生成对应的测试用例，内容如下：</p><pre class="brush:java;toolbar:false;">@Test(description="Demo测试用例")
public void demo_001(){
TestCase testcase = new TestCase();
testcase=allcase.get(0);
           
//。。。。。。
}
@Test(description="DemoTest测试用例")
public void demo_002(){
TestCase testcase = new TestCase();
testcase=allcase.get(1);
           
//。。。。。。
}</pre><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:2em;margin-top:0px;margin-bottom:10px;">使用的开源模板引擎freemarker，下载地址：<a title="freemarker" href="http://sourceforge.net/projects/freemarker/" target="_blank" style="color:#2970a6;text-decoration:none;">http://sourceforge.net/projects/freemarker/</a><span class="span4br"></span>freemarker的使用很简单，根据模板生成.java的部分代码如下：</p><pre class="brush:java;toolbar:false;">/**
    * 说明：根据测试用例数据，创建测试用例.java源码文件
    * @param javaInfo
    * @return String
    */
    public String Create(CreateJavaInfo javaInfo) {
        try {
            Configuration cfg =new Configuration();
            Map root =new HashMap();
            cfg.setDirectoryForTemplateLoading(new File(RootPath.getServer_ift_path()+"template"));
            cfg.setObjectWrapper(new DefaultObjectWrapper());
            root.put("javaInfo",javaInfo);
            Template template= cfg.getTemplate("demo.ftl");//模板名称
                        
            //设置文件输出目录
            String fileName = javaInfo.getJavaSavePath() + "/"
            + javaInfo.getPackageName().replace(".", "/") + "/"
            + javaInfo.getJavaFileName() + ".java";
            Writer out = new OutputStreamWriter(new FileOutputStream(fileName),"UTF-8");
            template.process(root, out);//根据模板和数据输出.java文件
            return fileName;    
        } catch (IOException | TemplateException e) {
            //生成.java文件失败
            return null;
        }
    }</pre><p><span class="span4br"></span></p><p style="text-indent:0em;">其中CreateJavaInfo是记录用例信息的实体类，包括</p><p><span class="span4br"></span></p><pre class="brush:java;toolbar:false;">private List allCase;//所有用例数据列表
 
private String packageName;//包名
 
private String javaFileName;//java文件名
 
private String javaSavePath;//java文件保存目录
 
private String caseDataPathName;//用例数据文件路径
 
private String caseDataSheetName;//Excel用例数据sheet名称
 
private String templatePathName;//模板路径
 
private String excelReportSheetName;//excel测试报告sheet名称
 
private String excelReportName;//excel测试报告文件名称
 
private String excelReportPath;//excel测试报告存储目录</pre><span class="span4br"></span><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;">接下来使用TestNG的XmlSuite、XmlTest类，加载测试用例的.java文件，TestNG输出.xml配置文件，包括设置的分组依赖、线程、顺序等信息，最后输出的xml文件如下：</p><pre class="brush:xml;toolbar:false;">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd"&gt;
&lt;suite thread-count="1" verbose="2" preserve-order="true" name="Demo_XML文件"&gt;
&lt;test name="Demo"&gt;
&lt;classes&gt;
&lt;class name="ift.server.testcases.Demo"/&gt;
&lt;/classes&gt;
&lt;/test&gt; &lt;!– Demo –&gt;
           
&lt;test name="DemoTest"&gt;
&lt;classes&gt;
&lt;class name="ift.server.testcases.DemoTest"/&gt;
&lt;/classes&gt;
&lt;/test&gt; &lt;!– DemoTest –&gt;
           
&lt;/suite&gt; &lt;!– Demo_XML文件 –&gt;</pre><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;text-indent:0em;margin-top:0px;margin-bottom:10px;">至此TestNG运行所需的.java用例文件 .xml配置文件都已根据Excel文件自动生成了，接下来执行用例就好了</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2013-07-26 18:47:43</wp:post_date>
		<wp:post_date_gmt>2013-07-26 10:47:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e6%8e%a5%e5%8f%a3%e6%b5%8b%e8%af%95%e8%87%aa%e5%8a%a8%e5%8c%96%e6%a1%86%e6%9e%b6-%e8%87%aa%e5%8a%a8%e7%94%9f%e6%88%90%e6%b5%8b%e8%af%95%e7%94%a8%e4%be%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Android的adb命令不可用的解决方法</title>
		<link>http://localhost/wp/?p=200</link>
		<pubDate>Tue, 30 Jul 2013 06:38:18 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=200</guid>
		<description></description>
		<content:encoded><![CDATA[测试中要使用Android虚拟机，安装了Android SDK  配置完毕后  
需要用到adb 安装应用  使用monitor查看日志记录等  
发现无法启动
提示信息如下：
[java]
adb server is out of date.  killing...
ADB server didn't ACK
* failed to start daemon *
[/java]

停止了360手机助手，进程中也没有运行adb.exe

解决步骤
[java]
1、执行adb nodaemon server  查看提示，一般都是提示 
cannot bind 'tcp:5037'
2、是端口被流氓们占用了，执行&gt;netstat -ano | findstr &quot;5037&quot; 查看那个进程占着，结束之
  TCP    127.0.0.1:5037         0.0.0.0:0              LISTENING       5128
  TCP    127.0.0.1:5037         127.0.0.1:60307        ESTABLISHED     5128
  TCP    127.0.0.1:60307        127.0.0.1:5037         ESTABLISHED     1828

查看进程id5128  发现是tadb.exe，腾讯的，机器上没安装腾讯手机助手，QQ倒是启动着，估计是启动QQ时 这个进程也拉起来了 监听5037端口

3、结束掉tadb.exe
[/java]

问题解决]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>200</wp:post_id>
		<wp:post_date>2013-07-30 14:38:18</wp:post_date>
		<wp:post_date_gmt>2013-07-30 06:38:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>android%e7%9a%84adb%e5%91%bd%e4%bb%a4%e4%b8%8d%e5%8f%af%e7%94%a8%e7%9a%84%e8%a7%a3%e5%86%b3%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：adb命令介绍</title>
		<link>http://localhost/wp/?p=202</link>
		<pubDate>Tue, 30 Jul 2013 07:38:39 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=202</guid>
		<description></description>
		<content:encoded><![CDATA[转自 http://www.open-open.com/lib/view/1327557366686

SDK的Tools文件夹下包含着Android模拟器操作的重要命令adb，adb的全称为(Android Debug Bridge就是调试桥的作用。通过adb我们可以在Eclipse中方面通过DDMS来调试Android程序。借助这个工具，我们可以管理设备或手机模拟器的状态。还可以进行以下的操作：
  
1、快速更新设备或手机模拟器中的代码，如应用或Android 系统升级；
2、在设备上运行shell命令；
3、管理设备或手机模拟器上的预定端口；
4、在设备或手机模拟器上复制或粘贴文件；

 

adb在集成开发环境中的工作 
   adb的工作方式比较特殊采用监听Socket TCP 5554等端口的方式让IDE和Qemu通讯，默认情况下adb会daemon相关的网络端口，所以当我们运行Eclipse时adb进程就会自动运行。  
     1.通过adb可以轻松的执行Linux Shell命令，如adb shell dir 就是列举目录，在Linux中根目录为/而不是Windows上的C盘、D盘。  
     2.安装apk程序到模拟器则执行adb install android123.apk，这样名为android123的安装包就会安装到Android模拟器中，前提是android123.apk文件需要放到SDK/Tools目录下。  
     3.向emulator传送文件， 使用adb push android123.txt /tmp/android123.txt命令可以把SDK/Tools下的android123.txt文件传输到模拟器的/tmp/文件夹中，需要注意的是/tmp/文件夹中内容会在Android模拟器重新启动时清空。  
     4.从Android仿真器中回传文件到电脑  
   通过adb pull /tmp/android123.txt android123.txt命令就会把仿真器的tmp文件夹下android123.txt文件回传到电脑SDK/Tools目录下。  
  
adb 常用命令大全

1. 显示系统中全部Android平台：

    android list targets

2. 显示系统中全部AVD（模拟器）：

    android list avd

3. 创建AVD（模拟器）：

    android create avd --name 名称 --target 平台编号

4. 启动模拟器：

    emulator -avd 名称 -sdcard ~/名称.img (-skin 1280x800)

5. 删除AVD（模拟器）：

    android delete avd --name 名称

6. 创建SDCard：

    mksdcard 1024M ~/名称.img

7. AVD(模拟器)所在位置：

    Linux(~/.android/avd)      Windows(C:\Documents and Settings\Administrator\.android\avd)

8. 启动DDMS：

    ddms

9. 显示当前运行的全部模拟器：

    adb devices

10. 对某一模拟器执行命令：

      abd -s 模拟器编号 命令

11. 安装应用程序：

      adb install -r 应用程序.apk

12. 获取模拟器中的文件：

      adb pull <remote> <local>

13. 向模拟器中写文件：

      adb push </local><local> <remote>

14. 进入模拟器的shell模式：

      adb shell

15. 启动SDK，文档，实例下载管理器：

      android

16. 缷载apk包：

      adb shell

      cd data/app

      rm apk包

      exit

      adb uninstall apk包的主包名

      adb install -r apk包

17. 查看adb命令帮助信息：

      adb help

18. 在命令行中查看LOG信息：

      adb logcat -s 标签名

19. adb shell后面跟的命令主要来自：

      源码\system\core\toolbox目录和源码\frameworks\base\cmds目录。

20. 删除系统应用：

      adb remount （重新挂载系统分区，使系统分区重新可写）。

      adb shell

      cd system/app

      rm *.apk

21. 获取管理员权限：

      adb root

22. 启动Activity：

      adb shell am start -n 包名/包名＋类名（-n 类名,-a action,-d date,-m MIME-TYPE,-c category,-e 扩展数据,等）。

23、发布端口：

    你可以设置任意的端口号，做为主机向模拟器或设备的请求端口。如： 
adb forward tcp:5555 tcp:8000

24、复制文件：

    你可向一个设备或从一个设备中复制文件， 
     复制一个文件或目录到设备或模拟器上： 
  adb push <source /> <destination></destination> 
      如：adb push test.txt /tmp/test.txt 
     从设备或模拟器上复制一个文件或目录： 
     adb pull <source /> <destination></destination> 
     如：adb pull /addroid/lib/libwebcore.so .

25、搜索模拟器/设备的实例：

     取得当前运行的模拟器/设备的实例的列表及每个实例的状态： 
    adb devices

26、查看bug报告： 
adb bugreport 
27、记录无线通讯日志：

    一般来说，无线通讯的日志非常多，在运行时没必要去记录，但我们还是可以通过命令，设置记录： 
    adb shell 
    logcat -b radio

28、获取设备的ID和序列号：

     adb get-product 
     adb get-serialno

29、访问数据库SQLite3

     adb shell 
     sqlite3

#cd system/sd/data //进入系统内指定文件夹 
#ls //列表显示当前文件夹内容 
#rm -r xxx //删除名字为xxx的文件夹及其里面的所有文件 
#rm xxx //删除文件xxx 
#rmdir xxx //删除xxx的文件夹</remote></local></remote>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>202</wp:post_id>
		<wp:post_date>2013-07-30 15:38:39</wp:post_date>
		<wp:post_date_gmt>2013-07-30 07:38:39</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9aadb%e5%91%bd%e4%bb%a4%e4%bb%8b%e7%bb%8d</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>接口自动化测试框架--动态将java文件编译为class</title>
		<link>http://localhost/wp/?p=207</link>
		<pubDate>Wed, 14 Aug 2013 07:17:32 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=207</guid>
		<description></description>
		<content:encoded><![CDATA[<div class="content-head clearfix"><p>实现逻辑很简单，见源码注释</p><pre class="brush:java;toolbar:false;">public class CompilerUtil {   
       
    //日志记录
    private static Tklogger log=Tklogger.getLogger(CompilerUtil.class);
       
    /**
     * 编译java文件为class
     * @param javaFilePath  java文件或包含java文件的目录
     * @param distPath      项目class文件存放目录
     * @param libPath       jar包存放目录
     * @return 编译成功返回true
     */
    public static boolean dynamicCompiler(String javaFilePath,String distPath,String libPath) {
        DiagnosticCollector&lt;JavaFileObject&gt; diagnostics = new DiagnosticCollector&lt;JavaFileObject&gt;();   
        boolean compilerResult = compiler("UTF-8",getClassPath(libPath,distPath),javaFilePath, distPath, diagnostics);   
        if (compilerResult) {
            log.info("编译："+javaFilePath+" 文件或目录成功，输出目录为："+distPath);
        }else{
            log.info("编译失败");
            for (@SuppressWarnings("rawtypes") Diagnostic diagnostic : diagnostics.getDiagnostics()) {   
                log.error(diagnostic.getMessage(null));  
            } 
        }
           
        return compilerResult;
    }
       
   
       
    /**
     * 编译java文件  
     * @param encoding 编译编码  
     * @param jars 需要加载的jar目录或文件  
     * @param filePath 文件或者目录（若为目录，编译目录下所有java文件）  
     * @param sourceDir 项目源码目录  
     * @param distDir 编译后class类文件存放目录  
     * @param diagnostics 存放编译过程中的错误信息  
     * @return  
     */
    private static  boolean compiler(String encoding,String jars,String filePath, String distDir, DiagnosticCollector&lt;JavaFileObject&gt; diagnostics){    
        // 获取编译器实例   
        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();   
   
        // 获取标准文件管理器实例   
        StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null);   
             
        //编译文件
        if (TkString.IsNullOrEmpty(filePath)) {   
            log.info("待编译的文件或目录不存在");
            return false;   
        } 
        //输出目录
        if (!TkFile.createDictory(distDir)) {   
            log.info("输出目录创建失败");
            return false;   
        } 
   
        // 得到filePath目录下的所有java源文件   
        File sourceFile = new File(filePath);   
        List&lt;File&gt; sourceFileList = new ArrayList&lt;File&gt;();   
        sourceFileList = getSourceFiles(sourceFile);   
   
        // 没有java文件，直接返回   
        if (sourceFileList.size() == 0) {   
            log.info(filePath + "目录下查找不到任何java文件");
            return false;   
        }   
               
        // 获取要编译的编译单元   
        Iterable&lt;? extends JavaFileObject&gt; compilationUnits = fileManager.getJavaFileObjectsFromFiles(sourceFileList);   
   
        //编译选项，在编译java文件时，编译程序会自动的去寻找java文件引用的其他的java源文件或者class。 -classpath选项就是定义class文件的查找目录。  
        Iterable&lt;String&gt; options = Arrays.asList("-encoding",encoding,"-classpath",jars,"-d", distDir);   
        CompilationTask compilationTask = compiler.getTask(null, fileManager, diagnostics, options, null, compilationUnits);   
   
        // 运行编译任务   
        boolean res= compilationTask.call();
        try {
            fileManager.close();
        } catch (IOException e) {
            log.error("关闭文件管理器失败");
            log.error(e.getMessage());
        }
        return res;
    }   
   
    /**
     * 查找该目录下的所有的java文件  
     * @param sourceFile  
     */
    private static  List&lt;File&gt; getSourceFiles(File sourceFile){   
        List&lt;File&gt; sourceFileList = new ArrayList&lt;File&gt;();
        if (sourceFile.exists() &amp;&amp; sourceFileList != null) {//文件或者目录必须存在   
            if (sourceFile.isDirectory()) {// 若file对象为目录
                 // 得到该目录下以.java结尾的所有文件   
                List&lt;String&gt; sourceFileListTmp=TkFile.getFilesFromFolder(sourceFile.getPath(),"java");
                for (String filePath : sourceFileListTmp) {
                    sourceFileList.add(new File(filePath));
                }
            } else {// 若file对象为文件   
                sourceFileList.add(sourceFile);   
            }   
        }else{
            log.info("目录或文件不存在: "+sourceFile);
        }
        return sourceFileList;
    }   
   
    /**
     * 查找该目录下的所有的jar文件
     * @param libPath
     * @return
     */
    private static  String  getJarFiles(String libPath) {   
        // 得到该目录下以.jar结尾的所有文件
        String jarsPath="";
        List&lt;String&gt; jarFilePath = TkFile.getFilesFromFolder(libPath,"jar");
        for (String filePath : jarFilePath) {
            jarsPath=jarsPath+filePath+";"; 
        }
        return jarsPath;   
    }   
       
    private static String getClassPath(String libPath,String classPath){
        if (TkFile.isEmeyxist(classPath)) {
            return getJarFiles(libPath)+classPath;
        }else{
            log.info("classPath不存在："+classPath);
            return getJarFiles(libPath);
        }
    }
}</pre><p><span class="span4br"></span></p><h2 class="title content-title">参考自：http://hi.baidu.com/nwwolfhdy/item/9df1335788209fccd2e10c46 </h2><div><span class="span4br"></span></div><div>附原文章</div><h2 class="title content-title">动态将java文件编译为class文件解决方案：</h2></div><div id="content" class="content mod-cs-content text-content clearfix"><p style="line-height:22px;">将temp\sdl\src目录中的java源文件编译成class文件，并存放到temp\sdl\classes目录中</p><p style="line-height:22px;"><span class="span4br"></span>java中早就提供了用java方式去动态编译java源文件的接口，有关java动态编译的API都在javax.tools包中。使用jdk1.6以上版本提供的JavaCompiler工具来动态编译java源文件。<span class="span4br"></span>我们可以通过ToolProvider类的静态方法getSystemJavaCompiler得到JavaCompiler对象实例。</p><div><p>// 获取编译器实例 &nbsp; &nbsp;</p><p>JavaCompiler compiler = ToolProvider.getSystemJavaCompiler(); &nbsp;</p></div><p style="line-height:22px;"><span class="span4br"></span>得到JavaCompiler对象实例后，我们可以调用该工具的getTask(Writer out, JavaFileManager fileManager, DiagnosticListener&lt;? super JavaFileObject&gt; diagnosticListener, Iterable&lt;String&gt; options, Iterable&lt;String&gt; classes, Iterable&lt;? extends JavaFileObject&gt; compilationUnits) 方法获取一个编译任务对象。</p><p style="line-height:22px;"><span class="span4br"></span></p><div><p>CompilationTask compilationTask = compiler.getTask(<strong>null</strong>, fileManager, diagnostics, options, <strong>null</strong>, compilationUnits); &nbsp;</p></div><p style="line-height:22px;"><span class="span4br"></span>该方法的第一个参数为文件输出，这里我们可以不指定，我们采用javac命令的-d参数来指定class文件的生成目录。<span class="span4br"></span>第二个参数为文件管理器实例</p><p style="line-height:22px;"><span class="span4br"></span></p><div><p>// 获取标准文件管理器实例 &nbsp; &nbsp; </p><p>StandardJavaFileManager fileManager = compiler.getStandardFileManager(<strong>null</strong>, <strong>null</strong>, <strong>null</strong>); </p></div><p style="line-height:22px;"><span class="span4br"></span>该文件管理器实例的作用就是将我们需要动态编译的java源文件转换为getTask需要的编译单元。</p><p style="line-height:22px;"><span class="span4br"></span></p><div><p>// 获取要编译的编译单元 &nbsp; &nbsp; </p><p>Iterable&lt;? <strong>extends</strong> JavaFileObject&gt; compilationUnits = fileManager.getJavaFileObjectsFromFiles(sourceFileList); </p></div><p style="line-height:22px;"><span class="span4br"></span>第三个参数DiagnosticCollector&lt;JavaFileObject&gt; diagnostics是在编译出错时，存放编译错误信息。<span class="span4br"></span>第四个参数为编译命令选项，就是javac命令的可选项，这里我们主要使用了-d和-sourcepath这两个选项。</p><p style="line-height:22px;"><span class="span4br"></span></p><div><p>/** &nbsp;</p><p>* 编译选项，在编译java文件时，编译程序会自动的去寻找java文件引用的其他的java源文件或者class。 -sourcepath选项就是定义java源文件的查找目录， -classpath选项就是定义class文件的查找目录，-d就是编译文件的输出目录。 &nbsp;</p><p>*/ &nbsp; &nbsp; </p><p>Iterable&lt;String&gt; options =Arrays.asList(&quot;-encoding&quot;,encoding,&quot;-classpath&quot;,jars,&quot;-d&quot;, targetDir, &quot;-sourcepath&quot;, sourceDir); </p><p><span class="span4br"></span></p></div><p style="line-height:22px;"><span class="span4br"></span>第五个参数为类名称<span class="span4br"></span>第六个参数为上面提到的编译单元，就是我们需要编译的java源文件</p><p style="line-height:22px">当我们得到CompilationTask compilationTask编译任务后，我们就可以调用compilationTask.call()方法进行编译工作</p><p style="line-height:22px;"><span class="span4br"></span></p><div><p>// 运行编译任务 &nbsp; </p><p>compilationTask.call() </p></div><p style="line-height:22px;">源码</p><pre class="brush:java;toolbar:false;">package com.util;   
import java.io.File;   
import java.io.FileFilter;   
import java.io.IOException;   
import java.util.ArrayList;   
import java.util.Arrays;   
import java.util.List;   
import javax.tools.Diagnostic;   
import javax.tools.DiagnosticCollector;   
import javax.tools.JavaCompiler;   
import javax.tools.JavaFileObject;   
import javax.tools.StandardJavaFileManager;   
import javax.tools.ToolProvider;   
import javax.tools.JavaCompiler.CompilationTask;   
publicclass DynamicCompilerUtil {   
private  String jars="";   
private  String targetDir="";   
/** 判断字符串是否为空 有值为true 空为：false */
publicboolean isnull(String str) {   
if (null == str)    
            {returnfalse;}   
elseif ("".equals(str))   
            {returnfalse;}   
elseif (str.equals("null"))   
            {returnfalse;}   
else
            {returntrue;}   
    }   
/**
     * 编译java文件 
     * @param encoding 编译编码 
     * @param jars 需要加载的jar 
     * @param filePath 文件或者目录（若为目录，自动递归编译） 
     * @param sourceDir java源文件存放目录 
     * @param targetDir 编译后class类文件存放目录 
     * @param diagnostics 存放编译过程中的错误信息 
     * @return 
     * @throws Exception 
     */
publicboolean compiler(String encoding,String jars,String filePath, String sourceDir, String targetDir, DiagnosticCollector&lt;JavaFileObject&gt; diagnostics)   
throws Exception {   
// 获取编译器实例 
        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();   
// 获取标准文件管理器实例 
        StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, null);   
try {   
if (!isnull(filePath) &amp;&amp; !isnull(sourceDir) &amp;&amp; !isnull(targetDir)) {   
returnfalse;   
            }   
// 得到filePath目录下的所有java源文件 
            File sourceFile = new File(filePath);   
            List&lt;File&gt; sourceFileList = new ArrayList&lt;File&gt;();   
this.targetDir=targetDir;   
            getSourceFiles(sourceFile,sourceFileList);   
// 没有java文件，直接返回 
if (sourceFileList.size() == 0) {   
                System.out.println(filePath + "目录下查找不到任何java文件");   
returnfalse;   
            }   
// 获取要编译的编译单元 
            Iterable&lt;? extends JavaFileObject&gt; compilationUnits = fileManager.getJavaFileObjectsFromFiles(sourceFileList);   
/**
             * 编译选项，在编译java文件时，编译程序会自动的去寻找java文件引用的其他的java源文件或者class。 -sourcepath选项就是定义java源文件的查找目录， -classpath选项就是定义class文件的查找目录。 
             */
            Iterable&lt;String&gt; options = Arrays.asList("-encoding",encoding,"-classpath",jars,"-d", targetDir, "-sourcepath", sourceDir);   
            CompilationTask compilationTask = compiler.getTask(null, fileManager, diagnostics, options, null, compilationUnits);   
// 运行编译任务 
return compilationTask.call();   
        } finally {   
            fileManager.close();   
        }   
    }   
/**
     * 查找该目录下的所有的java文件 
     * @param sourceFile 
     * @param sourceFileList 
     * @throws Exception 
     */
privatevoid getSourceFiles(File sourceFile, List&lt;File&gt; sourceFileList) throws Exception {   
if (sourceFile.exists() &amp;&amp; sourceFileList != null) {//文件或者目录必须存在 
if (sourceFile.isDirectory()) {// 若file对象为目录 
// 得到该目录下以.java结尾的文件或者目录 
                File[] childrenFiles = sourceFile.listFiles(new FileFilter() {   
publicboolean accept(File pathname) {   
if (pathname.isDirectory()) {   
try {   
new CopyDirectory().copyDirectiory(pathname.getPath(),targetDir+pathname.getPath().substring(pathname.getPath().indexOf("src")+3,pathname.getPath().length()));   
                            } catch (IOException e) {   
// TODO Auto-generated catch block 
                                e.printStackTrace();   
                            }   
returntrue;   
                        } else {   
                            String name = pathname.getName();   
if(name.endsWith(".java") ? true : false){   
returntrue;   
                            }   
try {   
new CopyDirectory().copyFile(pathname,new File(targetDir+pathname.getPath().substring(pathname.getPath().indexOf("src")+3,pathname.getPath().length())));   
                            } catch (IOException e) {   
// TODO Auto-generated catch block 
                                e.printStackTrace();   
                            }   
returnfalse;   
                        }   
                    }   
                });   
// 递归调用 
for (File childFile : childrenFiles) {   
                    getSourceFiles(childFile, sourceFileList);   
                }   
            } else {// 若file对象为文件 
                sourceFileList.add(sourceFile);   
            }   
        }   
    }   
/**
     * 查找该目录下的所有的jar文件 
     * @param sourceFile 
     * @param sourceFileList 
     * @throws Exception 
     */
private  String  getJarFiles(String jarPath) throws Exception {   
        File sourceFile = new File(jarPath);   
//      String jars=""; 
if (sourceFile.exists()) {// 文件或者目录必须存在 
if (sourceFile.isDirectory()) {// 若file对象为目录 
// 得到该目录下以.java结尾的文件或者目录 
                File[] childrenFiles = sourceFile.listFiles(new FileFilter() {   
publicboolean accept(File pathname) {   
if (pathname.isDirectory()) {   
returntrue;   
                        } else {   
                            String name = pathname.getName();   
if(name.endsWith(".jar") ? true : false){   
                                jars=jars+pathname.getPath()+";";   
returntrue;   
                            }   
returnfalse;   
                        }   
                    }   
                });   
            }     
        }   
return jars;   
    }   
publicstaticvoid main(String[] args) {   
try {   
// 编译F:\\亚信工作\\SDL文件\\sdl\\src目录下的所有java文件 
            String filePath = "E:\\workspace\\COD-MS\\src";   
            String sourceDir = "E:\\workspace\\COD-MS\\src";   
            String jarPath = "E:\\workspace\\COD-MS\\WebRoot\\WEB-INF\\lib";   
            String targetDir = "E:\\java\\project\\bin";   
            DiagnosticCollector&lt;JavaFileObject&gt; diagnostics = new DiagnosticCollector&lt;JavaFileObject&gt;();   
            DynamicCompilerUtil dynamicCompilerUtil=new DynamicCompilerUtil();   
boolean compilerResult = dynamicCompilerUtil.compiler("UTF-8",dynamicCompilerUtil.getJarFiles(jarPath),filePath, sourceDir, targetDir, diagnostics);   
if (compilerResult) {   
                System.out.println("编译成功");   
            } else {   
                System.out.println("编译失败");   
for (Diagnostic diagnostic : diagnostics.getDiagnostics()) {   
//                   System.out.format("%s[line %d column %d]--&gt;%s%n", diagnostic.getKind(), diagnostic.getLineNumber(),
//                   diagnostic.getColumnNumber(), 
//                   diagnostic.getMessage(null)); 
                    System.out.println(diagnostic.getMessage(null));   
                }   
            }   
        } catch (Exception e) {   
            e.printStackTrace();   
        }   
    }   
}  
package com.util;   
import java.io.*;   
/**
 * 复制文件夹或文件夹 
 */
publicclass CopyDirectory {   
// 源文件夹 
     String url1 = "E:\\workspace\\DeployeTest";   
// 目标文件夹 
     String url2 = "E:\\java\\project\\bin";   
publicstaticvoid main(String args[]) throws IOException {   
        CopyDirectory copyDirectory=new CopyDirectory();   
// 创建目标文件夹 
        (new File(copyDirectory.url2)).mkdirs();   
// 获取源文件夹当前下的文件或目录 
        File[] file = (new File(copyDirectory.url1)).listFiles();   
for (int i = 0; i &lt; file.length; i++) {   
if (file[i].isFile()) {   
// 复制文件 
                copyDirectory.copyFile(file[i], new File(copyDirectory.url2 + file[i].getName()));   
            }   
if (file[i].isDirectory()) {   
// 复制目录 
                String sourceDir = copyDirectory.url1 + File.separator + file[i].getName();   
                String targetDir = copyDirectory.url2 + File.separator + file[i].getName();   
                copyDirectory.copyDirectiory(sourceDir, targetDir);   
            }   
        }   
    }   
/***
     * 复制文件 
     * @param sourceFile 源文件 
     * @param targetFile  目标文件 
     * @throws IOException 
     */
publicvoid copyFile(File sourceFile, File targetFile)   
throws IOException {   
// 新建文件输入流并对它进行缓冲 
        FileInputStream input = new FileInputStream(sourceFile);   
        BufferedInputStream inBuff = new BufferedInputStream(input);   
// 新建文件输出流并对它进行缓冲 
        FileOutputStream output = new FileOutputStream(targetFile);   
        BufferedOutputStream outBuff = new BufferedOutputStream(output);   
// 缓冲数组 
byte[] b = newbyte[1024 * 5];   
int len;   
while ((len = inBuff.read(b)) != -1) {   
            outBuff.write(b, 0, len);   
        }   
// 刷新此缓冲的输出流 
        outBuff.flush();   
// 关闭流 
        inBuff.close();   
        outBuff.close();   
        output.close();   
        input.close();   
    }   
/***
     * 复制文件夹  
     * @param sourceDir 源文件夹路径 
     * @param targetDir 目标文件夹路径 
     * @throws IOException 
     */
publicvoid copyDirectiory(String sourceDir, String targetDir)   
throws IOException {   
// 新建目标目录 
        (new File(targetDir)).mkdirs();   
// 获取源文件夹当前下的文件或目录 
        File[] file = (new File(sourceDir)).listFiles();   
for (int i = 0; i &lt; file.length; i++) {   
if (file[i].isFile()) {   
// 源文件 
                File sourceFile = file[i];   
// 目标文件 
                File targetFile = new File(new File(targetDir)   
                        .getAbsolutePath()   
                        + File.separator + file[i].getName());   
                copyFile(sourceFile, targetFile);   
            }   
if (file[i].isDirectory()) {   
// 准备复制的源文件夹 
                String dir1 = sourceDir + "/" + file[i].getName();   
// 准备复制的目标文件夹 
                String dir2 = targetDir + "/" + file[i].getName();   
                copyDirectiory(dir1, dir2);   
            }   
        }   
    }   
}</pre><p style="line-height:22px;"><span class="span4br"></span></p></div><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>207</wp:post_id>
		<wp:post_date>2013-08-14 15:17:32</wp:post_date>
		<wp:post_date_gmt>2013-08-14 07:17:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%8a%a8%e6%80%81%e5%b0%86java%e6%96%87%e4%bb%b6%e7%bc%96%e8%af%91%e4%b8%baclass</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>PHP中判断浏览器已关闭,connection_status()或connection_aborted()函数不起作用的解决</title>
		<link>http://localhost/wp/?p=212</link>
		<pubDate>Fri, 16 Aug 2013 09:29:30 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=212</guid>
		<description></description>
		<content:encoded><![CDATA[<p>1、适用场景</p><p>http方式实现的另类长连接，客户端发起请求连接到服务端后，服务端不立即返回，而是执行while(true)语句，如下：</p><pre class="brush:php;toolbar:false;">while (true) {
    $endTime = time();
    info('browser_id = '.$browser_id.'已等待'.($endTime -    $startTime).'秒');
    if (($endTime - $startTime)&gt;=3600){//超过1小时后，超时退出
         $data['retNo']='-5000';
         $data['retMsg']='超时退出';
         $this-&gt;ajaxReturn($data);
    }
                  
    $result_res=$this-&gt;queryTask($browser_id);
    if (!$result_res){
         info('browser_id='.$browser_id.'暂无任务，等待5秒后重试');
         sleep(5);
         continue;
    }else{
         //指派任务到此截图客户端机器
         $data=$this-&gt;dispatchTask($result_res);
         $this-&gt;ajaxReturn($data);
    }
}</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p>在此场景下，如果客户端异常断开了连接，服务端还是要执行1小时之后，才会退出，此时需增加个判断，如果客户端的连接已断开，则跳出死循环，结束操作</p><p>一开始使用PHP的connection_status()、connection_aborted()的内置函数，获取连接状态，但是获取的状态总是有效的(0)</p><p><span class="span4br"></span></p><p>2、解决方案</p><p>之后搜索对应解决方法，那叫一个费劲 &nbsp;折腾多半天，在请教开发同事后，终于搞定 <span class="span4br"></span></p><p>参考资料--http://stackoverflow.com/questions/11627916/connection-aborted-does-not-work-on-ajax-calls</p><p> 根本原因是 要在前面加上如下三行：</p><pre class="brush:php;toolbar:false;">echo 'Refresh';
flush();
ob_flush();</pre><p>附演示源码<span class="span4br"></span></p><p>服务端：PHP脚本 script.php<span class="span4br"></span></p><pre class="brush:php;toolbar:false;">&lt;?php
ignore_user_abort(true);
set_time_limit(0);
   
function log_message($type, $message, $file = 'log.txt') {
    $fh = fopen($file, 'a+') or die("不能写日志文件");
   
    $conn_status = connection_status();
   
    if($conn_status === CONNECTION_NORMAL) {
        $status = '正常连接';
    } elseif($conn_status  === CONNECTION_ABORTED) {
        $status = '已断开';
    } else {
        $status = '超时';
    }
   
    $aborted = connection_aborted() ? 'yes' : 'no';
   
    $data  = $type . ': ' . $message . "\n";
    $data .= '连接状态: ' . $status . "\n";
    $data .= '是否断开: ' . $aborted . "\n\n";
   
    fwrite($fh, $data);
    fclose($fh);
}
   
   
   
for ($i = 0; $i &lt; 600; $i++) {
   
    echo "&lt;br&gt;";
    flush();
    ob_flush();
   
    if (connection_aborted()) {
        log_message('Error', '连接被用户关闭!');
        exit;
    }
    else {
        log_message('Info', '正常连接着。。。。。。。');
    }
   
    sleep(2);
}</pre><p>静态文件 test.html &nbsp;直接访问 http://yourip/yourpath/test.html &nbsp;然后关闭页面，查看script.php同级目录下log文件的记录 <span class="span4br"></span></p><pre class="brush:html;toolbar:false;">&lt;html&gt;
  &lt;head&gt;
    &lt;script src="http://code.jquery.com/jquery-1.8.0.min.js"&gt;&lt;/script&gt;
   
    &lt;script&gt;
   
      $(document).ready(function() {
   
        $.ajax({
          url: "script.php",
          context: document.body
        }).done(function(data) { 
         alert(data);
        });
   
      })
   
    &lt;/script&gt;
   
  &lt;/head&gt;
   
  &lt;body&gt;
  &lt;/body&gt;
   
&lt;/html&gt;</pre><p>直接访问 http://yourip/yourpath/test.html &nbsp;然后关闭页面，查看script.php同级目录下log文件的记录 </p><pre class="brush:xml;toolbar:false;">Info: 正常连接着。。。。。。。
连接状态: 正常连接
是否断开: no
   
Info: 正常连接着。。。。。。。
连接状态: 正常连接
是否断开: no
   
Info: 正常连接着。。。。。。。
连接状态: 正常连接
是否断开: no
   
Error: 连接被用户关闭!
连接状态: 已断开
是否断开: yes</pre><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>212</wp:post_id>
		<wp:post_date>2013-08-16 17:29:30</wp:post_date>
		<wp:post_date_gmt>2013-08-16 09:29:30</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>php%e4%b8%ad%e5%88%a4%e6%96%ad%e6%b5%8f%e8%a7%88%e5%99%a8%e5%b7%b2%e5%85%b3%e9%97%adconnection_status%e6%88%96connection_aborted%e5%87%bd%e6%95%b0%e4%b8%8d%e8%b5%b7%e4%bd%9c%e7%94%a8%e7%9a%84</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[PHP]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>html-控件的隐藏</title>
		<link>http://localhost/wp/?p=219</link>
		<pubDate>Sat, 17 Aug 2013 11:03:03 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=219</guid>
		<description></description>
		<content:encoded><![CDATA[<h3>html-控件的隐藏</h3><p>html属性设置 input的两种方式 <code class="html color1">type</code><code class="html plain">=</code><code class="html string">&quot;hidden&quot;</code> <code class="html color1">style</code><code class="html plain">=</code><code class="html string">&quot;display: none;&quot;</code><span class="span4br"></span></p><pre class="brush:html;toolbar:false;">&lt;input type="hidden" value="" name="Ie_txt" id="Ie_txt"&gt;
 
&lt;input type="text" style="display: none;" value="275" name="task_id" class="span3"&gt;</pre><p><span class="span4br"></span></p><p>通过js脚本设置<span class="span4br"></span></p><pre class="brush:html;toolbar:false;">&lt;input type="button" value="隐藏" onclick="csan(did,'none')"&gt;
&lt;input type="button" value="显示" onclick="csan(did,'')"&gt;
&lt;input id="did"&gt;
&lt;br&gt;
&lt;input type="button" value="隐藏" onclick="csan(dis,'none')"&gt;
&lt;input type="button" value="显示" onclick="csan(dis,'')"&gt;
&lt;input id="dis"&gt;
&lt;script&gt;
function csan(obj,sta){
eval("obj.style.d&lt;/script&gt;</pre><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>219</wp:post_id>
		<wp:post_date>2013-08-17 19:03:03</wp:post_date>
		<wp:post_date_gmt>2013-08-17 11:03:03</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>html%e5%b8%b8%e7%94%a8%e6%8e%a7%e4%bb%b6%e8%ae%be%e7%bd%ae%e6%b1%87%e6%80%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%89%8d%e7%ab%afjshtml"><![CDATA[前端js/html]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>js返回上一页 并延迟几秒</title>
		<link>http://localhost/wp/?p=224</link>
		<pubDate>Sun, 18 Aug 2013 08:31:26 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=224</guid>
		<description></description>
		<content:encoded><![CDATA[<p>1、js返回上一页 并延迟几秒</p><p><span class="span4br"></span></p><p>结合Jquery的<code class="html spaces"></code><code class="html plain">setTimeout</code>函数使用</p><pre class="brush:js;toolbar:false;">&lt;label&gt;{$err_msg}  --3秒后返回重新填写&lt;/label&gt;
 &lt;script&gt;
    setTimeout(function () {  
         javascript:history.go(-1); 
    }, 3000);
&lt;/script&gt;</pre><pre class="null"><span class="span4br"></span></pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>224</wp:post_id>
		<wp:post_date>2013-08-18 16:31:26</wp:post_date>
		<wp:post_date_gmt>2013-08-18 08:31:26</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>js%e8%bf%94%e5%9b%9e%e4%b8%8a%e4%b8%80%e9%a1%b5-%e5%b9%b6%e5%bb%b6%e8%bf%9f%e5%87%a0%e7%a7%92</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e5%89%8d%e7%ab%afjshtml"><![CDATA[前端js/html]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>接口自动化测试框架--在java代码中直接调用TestNGXslt插件生成Html报告</title>
		<link>http://localhost/wp/?p=230</link>
		<pubDate>Fri, 23 Aug 2013 05:40:29 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=230</guid>
		<description></description>
		<content:encoded><![CDATA[<p>TestNGXslt可以把TestNG的原生测试报告美化后输出</p><p>其使用说明及网上资料都是在ant中的调用 &nbsp;<span class="span4br"></span></p><p>如果在java中直接调用，不通过ant 如下代码可解决此问题</p><p><span class="span4br"></span></p><pre class="brush:java;toolbar:false;">/**
 * TestNG的原生报告转换为美化后的Html格式测试报告
 * @author @&lt;a href='http://weibo.com/bwgang'&gt;bwgang&lt;/a&gt;&lt;br/&gt;
 *
 */
public class ExportReportHtml {
  
    /**
     * 根据TestNG结果输出的xml文件，优化生成html格式测试报告
     * @param tngOutFilePath  TestNG的结果xml文件路径
     * @param htmlReportPath html报告的目录
     * @param htmlReportTitle 测试报告标题
     */
    public static boolean createHtmlReport(String tngOutFilePath,String htmlReportPath,String htmlReportTitle) {
        if (!MyFile.isEmeyxist(tngOutFilePath) ) return false;
        if (!MyFile.createDictory(htmlReportPath)) return false;
         try {
             Source xml = new javax.xml.transform.stream.StreamSource(tngOutFilePath);
             Source xsl = new javax.xml.transform.stream.StreamSource(DispatchConf.TestNGXsltFile);
             Result out = new StreamResult(new BufferedOutputStream(new FileOutputStream(htmlReportPath+"/index.html")));
              // 创建转换器工厂
              TransformerFactory tfactory = TransformerFactory.newInstance();
              // 创建 XSL 转换器
              Transformer transformer = tfactory.newTransformer(xsl);
              
              //参数设置
              transformer.setParameter("testNgXslt.outputDir",htmlReportPath);
            //transformer.setParameter("testNgXslt.showRuntimeTotals", true);
              transformer.setParameter("testNgXslt.reportTitle", htmlReportTitle);
              transformer.transform(xml, out);
              return true;
        } catch (Exception e) {
            // TODO: handle exception
            return false;
        }
    }
}</pre><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>230</wp:post_id>
		<wp:post_date>2013-08-23 13:40:29</wp:post_date>
		<wp:post_date_gmt>2013-08-23 05:40:29</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%9c%a8java%e4%bb%a3%e7%a0%81%e4%b8%ad%e7%9b%b4%e6%8e%a5%e8%b0%83%e7%94%a8testngxslt%e6%8f%92%e4%bb%b6%e7%94%9f%e6%88%90html%e6%8a%a5%e5%91%8a</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>cmd命令窗口编码设置【转自网络】</title>
		<link>http://localhost/wp/?p=234</link>
		<pubDate>Mon, 16 Sep 2013 06:53:43 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=234</guid>
		<description></description>
		<content:encoded><![CDATA[<p>通过注册表更改默认编码</p><div style="color:#494949;font-family:simsun;font-size:14px;line-height:21px;background-color:#fbedc6;">cmd默认的编码是采用GBK</div><div><span class="span4br"></span></div><span style="color:#494949;font-family:simsun;font-size:14px;line-height:21px;">注册表位置</span> &nbsp;<span style="background-color:#FBEDC6;color:#494949;font-family:simsun;font-size:14px;line-height:21px;">HKEY_CURRENT_USER\Console\%SystemRoot%_system32_cmd.exe\CodePage</span><div style="color:#494949;font-family:simsun;font-size:14px;line-height:21px;background-color:#fbedc6;">十进制：936 GBK</div><div style="color:#494949;font-family:simsun;font-size:14px;line-height:21px;background-color:#fbedc6;"> <wbr> &nbsp;</wbr><wbr> &nbsp;</wbr><wbr> &nbsp;</wbr><wbr> 65001 UTF-8</wbr></div><div style="color:#494949;font-family:simsun;font-size:14px;line-height:21px;background-color:#fbedc6;">CMD窗口顶部右键，选择“属性”，修改里面的字体， UTF-8 选 Lucida Console</div><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p>补充：</p><p><span class="span4br"></span></p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;"><span style="word-wrap:normal;font-size:15px;word-break:normal;line-height:24px;font-family:arial, 宋体, sans-serif;">dos指令:</span></p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;"><br style="word-wrap:break-word;" /> </p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;">chcp 65001 就是换成UTF-8代码页</p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;"><br style="word-wrap:break-word;" /> </p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;">chcp 936 可以换回默认的GBK</p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;"><br style="word-wrap:break-word;" /> </p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;">chcp 437 是美国英语</p><p class="articalContent  " style="word-wrap:break-word;padding:0px;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;"><span style="word-wrap:normal;font-size:15px;word-break:normal;line-height:24px;font-family:arial, 宋体, sans-serif;"></span> </p><div class="articalContent  " style="word-wrap:break-word;color:#666666;font-family:宋体, arial;font-size:12px;line-height:26px;background-color:#ffffff;"><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;"><strong style="word-wrap:break-word;"><span style="font-size:18px;word-wrap:normal;word-break:normal;line-height:27px;">如何在DOS窗口中显示UTF-8字符</span></strong></p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;"> </p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;"><span class="span4br"></span></p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">在中文Windows系统中，如果一个文本文件是UTF-8编码的，那么在CMD.exe命令行窗口（所谓的DOS窗口）中不能正确显示文件中的内容。在默认情况下，命令行窗口中使用的代码页是中文或者美国的，即编码是中文字符集或者西文字符集。</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">如果想正确显示UTF-8字符，可以按照以下步骤操作：</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">1、打开CMD.exe命令行窗口</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">2、通过 chcp命令改变代码页，UTF-8的代码页为65001</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">chcp 65001</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">执行该操作后，代码页就被变成UTF-8了。但是，在窗口中仍旧不能正确显示UTF-8字符。</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">3、修改窗口属性，改变字体</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">在命令行标题栏上点击右键，选择&quot;属性&quot;-&gt;&quot;字体&quot;，将字体修改为True Type字体&quot;Lucida Console&quot;，然后点击确定将属性应用到当前窗口。</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">这时使用type命令就可以显示UTF-8文本文件的内容了：</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">type filename.txt</p><p style="word-wrap:normal;padding:0px;border-width:0px;color:#333333;word-break:normal;line-height:normal;font-family:arial;list-style-type:none;margin-top:0px;">4、通过以上操作并不能完全解决问题，因为显示出来的内容有可能不完全。可以先最小化，然后最大化命令行窗口，文件的内容就完整的显示出来了。</p></div><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>234</wp:post_id>
		<wp:post_date>2013-09-16 14:53:43</wp:post_date>
		<wp:post_date_gmt>2013-09-16 06:53:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>cmd%e5%91%bd%e4%bb%a4%e7%aa%97%e5%8f%a3%e7%bc%96%e7%a0%81%e8%ae%be%e7%bd%ae%e3%80%90%e8%bd%ac%e8%87%aa%e7%bd%91%e7%bb%9c%e3%80%91</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[操作系统]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>ant调用java输出xml文件编码问题</title>
		<link>http://localhost/wp/?p=237</link>
		<pubDate>Tue, 17 Sep 2013 07:24:53 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=237</guid>
		<description></description>
		<content:encoded><![CDATA[<p>使用testng调度执行完测试后，需要解析testng输出的xml文件，优化测试报告</p><p>通过ant调用后，输出的xml文件有时编码不为UTF-8 &nbsp;此时需要在ant任务中增加一句</p><pre class="brush:xml;toolbar:false;">&lt;sysproperty key="file.encoding" value="UTF-8" /&gt;</pre><p> 例如：</p><pre class="brush:xml;toolbar:false;">&lt;target name="Processing"&gt;
       &lt;!--预处理--&gt;
         
       &lt;java classname="project.Entry"  classpath="${runtime_classpath}" fork="true" maxmemory="256m" &gt;
           &lt;sysproperty key="file.encoding" value="UTF-8" /&gt;
       &lt;/java&gt;
       &lt;echo taskname="Processing" message=" 执行完毕" /&gt;
   &lt;/target&gt;</pre><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2013-09-17 15:24:53</wp:post_date>
		<wp:post_date_gmt>2013-09-17 07:24:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>ant%e8%b0%83%e7%94%a8java%e8%be%93%e5%87%baxml%e6%96%87%e4%bb%b6%e7%bc%96%e7%a0%81%e9%97%ae%e9%a2%98</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>Sublime Text常用快捷键</title>
		<link>http://localhost/wp/?p=252</link>
		<pubDate>Thu, 26 Sep 2013 11:41:53 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=252</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="brush:as3;toolbar:false;">Ctrl+L 选择整行（按住-继续选择下行）
Ctrl+KK 从光标处删除至行尾
Ctrl+Shift+K 删除整行
Ctrl+Shift+D 复制光标所在整行，插入在该行之前
Ctrl+J 合并行（已选择需要合并的多行时）
Ctrl+KU 改为大写
Ctrl+KL 改为小写
Ctrl+D 选词 （按住-继续选择下个相同的字符串）
Ctrl+M 光标移动至括号内开始或结束的位置
Ctrl+Shift+M 选择括号内的内容（按住-继续选择父括号）
Ctrl+/ 注释整行（如已选择内容，同“Ctrl+Shift+/”效果）
Ctrl+Shift+/ 注释已选择内容
Ctrl+Z 撤销
Ctrl+Y 恢复撤销
Ctrl+M 光标跳至对应的括号
Alt+. 闭合当前标签
Ctrl+Shift+A 选择光标位置父标签对儿
Ctrl+Shift+[ 折叠代码
Ctrl+Shift+] 展开代码
Ctrl+KT 折叠属性
Ctrl+K0 展开所有
Ctrl+U 软撤销
Ctrl+T 词互换
Tab 缩进 自动完成
Shift+Tab 去除缩进
Ctrl+Shift+↑ 与上行互换
Ctrl+Shift+↓ 与下行互换
Ctrl+K Backspace 从光标处删除至行首
Ctrl+Enter 光标后插入行
Ctrl+Shift+Enter 光标前插入行
Ctrl+F2 设置书签
F2 下一个书签
Shift+F2 上一个书签</pre><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>252</wp:post_id>
		<wp:post_date>2013-09-26 19:41:53</wp:post_date>
		<wp:post_date_gmt>2013-09-26 11:41:53</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>sublime-text%e5%b8%b8%e7%94%a8%e5%bf%ab%e6%8d%b7%e9%94%ae</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>QTAF接口自动化框架--配置java与maven环境变量(一)</title>
		<link>http://localhost/wp/?p=256</link>
		<pubDate>Sat, 12 Oct 2013 05:09:22 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=256</guid>
		<description></description>
		<content:encoded><![CDATA[<p>一、配置JAVA环境变量</p><p>免安装的配置，可以从网盘 <a href="http://yunpan.cn/QbBaQDm8b9RyZ" target="_blank">http://yunpan.cn/QbBaQDm8b9RyZ</a> 下载32位jdk1.7版本，下载后解压到本地磁盘，例如 <span style="color:#333333;line-height:24px;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;font-size:14px;background-color:#F1FEDD;">D:\</span><span style="color:#333333;line-height:24px;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;font-size:14px;background-color:#F1FEDD;">Java\jdk32_1.7</span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;">按如下步骤配置：</span></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"></span></span></p><pre class="brush:html;toolbar:false;">1.打开我的电脑--属性--高级--环境变量  
       
2.新建系统变量JAVA_HOME 和CLASSPATH  
变量名：JAVA_HOME  
变量值：D:\Java\jdk32_1.7 
变量名：CLASSPATH  
变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar; 
       
3. 选择“系统变量”中变量名为“Path”的环境变量，双击该变量，把JDK安装路径中bin目录的绝对路径，添加到Path变量的值的后面，并使用半角的分号和已有的路径进行分隔。  
变量名：Path  
变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</pre><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;">配置完毕后，打开cmd命令窗口 输入java -version &nbsp;显示如下信息则配置成功</span></span><span class="span4br"></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"></span></span></p><pre class="brush:bash;toolbar:false;">D:\&gt;java -version 
java version "1.7.0_07"
Java(TM) SE Runtime Environment (build 1.7.0_07-b11) 
Java HotSpot(TM) Client VM (build 23.3-b01, mixed mode, sharing)</pre><p>二、配置maven</p><p>先下载maven，可从其官网 或网盘<a href="http://yunpan.cn/QbBaIcrk3rkpv" target="_blank">http://yunpan.cn/QbBaIcrk3rkpv</a> 下载</p><p>解压到本地磁盘，例如 D:\apache-maven-3.1.0</p><p><span class="span4br"></span></p><p>按如下步骤配置，在此之前一定要已配置好java环境变量</p><pre class="brush:html;toolbar:false;">1.打开我的电脑--属性--高级--环境变量  
        
2.新建系统变量M2_HOME  
变量名：M2_HOME  
变量值：D:\apache-maven-3.1.0 
        
3. 选择“系统变量”中变量名为“Path”的环境变量，双击该变量，把maven安装路径中bin目录的绝对路径，添加到Path变量的值的后面，并使用半角的分号和已有的路径进行分隔。  
变量名：Path  
变量值：%M2_HOME%\bin;</pre><p>配置完毕后，<span style="color:#333333;line-height:24px;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;font-size:14px;">打开cmd命令窗口 输入mvn -version &nbsp;显示如下信息则配置成功</span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"></span></span></p><pre class="brush:bash;toolbar:false;">D:\&gt;mvn -version 
Apache Maven 3.1.0 (893ca28a1da9d5f51ac03827af98bb730128f9f2; 2013-06-28 10:15:3 
2+0800) 
Maven home: E:\apache-maven-3.1.0 
Java version: 1.7.0_07, vendor: Oracle Corporation 
Java home: E:\java\jdk32_1.7\jre 
Default locale: zh_CN, platform encoding: GBK 
OS name: "windows 7", version: "6.1", arch: "x86", family: "windows"</pre><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;">三、在eclipse中配置maven插件</span></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"> &nbsp; &nbsp; &nbsp; &nbsp; 如果尚未安装eclipse，可以直接下载包含有maven、svn等插件的eclipse 下载地址<a href="http://yunpan.cn/Qb68862I6UQzn" target="_blank">http://yunpan.cn/Qb68862I6UQzn</a> &nbsp;解压后可以直接运行 <span class="span4br"></span></span></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"><span style="font-size:small;">1、直接在eclipse中安装m2eclipse插件，具体方法与安装其他插件一样的，location中输入http://download.eclipse.org/technology/m2e/releases &nbsp; &nbsp;此为最新的站点地址，网上好多博客中的地址已经失效了</span></span></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"><span style="font-size:small;">2、配置插件使用本地已配置的maven，在eclipse中点击 窗口--首选项，在左侧点击Maven--Installations 如下图：</span></span></span></p><p style="text-align:center;"><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"><span style="font-size:small;"><img style="float:none;" border="0" hspace="0" vspace="0" src="http://bcs.duapp.com/bwgang/%2Feclipsemvn3.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:%2FI1aicpCDVMfWAzN95t6gAy%2FnOU%3D" /><span class="span4br"></span></span></span></span></p><p style="text-align:left;"><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"><span style="font-size:small;"> &nbsp;点击 Add &nbsp;选择本地maven目录，例如 E:\apache-maven-3.1.0 &nbsp;之后点击确定，至此插件配置完毕，最终结果见上图右侧<span class="span4br"></span></span></span></span></p><p style="text-align:left;"><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;font-size:14px;"><span style="font-size:small;"><span class="span4br"></span></span></span></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;"><span style="font-size:12px;">3、安装完毕后，验证插件是否安装成功，</span></span></span></p><p><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;"><span style="font-size:12px;"> &nbsp; &nbsp; &nbsp; &nbsp;打开eclipse 新建项目，如下图 &nbsp;选择“项目”</span></span></span></p><p style="text-align:center;"><span style="color:#333333;font-family:arial, &quot;courier new&quot;, courier, 宋体, monospace;"><span style="line-height:24px;"><span style="font-size:12px;"><img style="float:none;" border="0" hspace="0" vspace="0" src="http://bcs.duapp.com/bwgang/%2Feclipsemvn1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:DKOGtV4sZVwteBcE4U%2FICOCcKvw%3D" /></span></span></span></p><p style="text-align:left;"> &nbsp; &nbsp;在打开的窗口中，查看是否有maven project项 &nbsp;如下图<span class="span4br"></span></p><p style="text-align:center;"><img style="float:none;" border="0" hspace="0" vspace="0" src="http://bcs.duapp.com/bwgang/%2Feclipsemvn2.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ZkPbzzBJJGejqVg9EQlcx8spYc0%3D" /><span class="span4br"></span></p><p style="text-align:left;"> &nbsp; &nbsp;如果存在，则maven插件安装成功<span class="span4br"></span></p><p style="text-align:left;"><span class="span4br"></span></p><p style="text-align:left;">至此，QTAF接口测试框架的前置环境部署完毕，接下来可以下载 <a href="https://github.com/bwgang/QTAF/tree/example">https://github.com/bwgang/QTAF/tree/example</a> 项目， 开始使用，在下篇叙述如何使用此框架</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>256</wp:post_id>
		<wp:post_date>2013-10-12 13:09:22</wp:post_date>
		<wp:post_date_gmt>2013-10-12 05:09:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>qtaf%e6%8e%a5%e5%8f%a3%e8%87%aa%e5%8a%a8%e5%8c%96%e6%a1%86%e6%9e%b6-%e9%85%8d%e7%bd%aejava%e4%b8%8emaven%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>安卓Android模拟器中如何写入hosts文件</title>
		<link>http://localhost/wp/?p=267</link>
		<pubDate>Fri, 18 Oct 2013 02:39:59 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=267</guid>
		<description></description>
		<content:encoded><![CDATA[<p>安卓app测试中，需要修改host信息，指向测试环境，</p><p>真机有限，有时需要用到安卓模拟器，默认安装的模拟器是没有root的，在系统中无法直接修改，</p><p>如果root后再修改，操作步骤繁琐了些，可以不root，直接通过命令修改，如下：</p><p><span class="span4br"></span></p><pre class="brush:bash;toolbar:false;">#设置目录权限
    adb shell chmod 4777 /system
#写入hosts文件
    echo "1.1.1.1 site.name.com" &gt; etc/hosts
#查看写入结果
    cat etc/hosts</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>267</wp:post_id>
		<wp:post_date>2013-10-18 10:39:59</wp:post_date>
		<wp:post_date_gmt>2013-10-18 02:39:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%ae%89%e5%8d%93android%e6%a8%a1%e6%8b%9f%e5%99%a8%e4%b8%ad%e5%a6%82%e4%bd%95%e5%86%99%e5%85%a5hosts%e6%96%87%e4%bb%b6</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>已知IP查看计算机名和mac地址</title>
		<link>http://localhost/wp/?p=276</link>
		<pubDate>Thu, 14 Nov 2013 02:16:51 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=276</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="padding:0px;font-family:tahoma, arial, helvetica, sans-serif, simsun;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1. 知道对方ip查看对方的计算机名</p><p style="padding:0px;font-family:tahoma, arial, helvetica, sans-serif, simsun;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span>方法：开始-&gt;运行-&gt;cmd-&gt;net view 对方ip<span class="span4br"></span>或者 开始-&gt;运行-&gt;cmd-&gt;nbtstat -a 对方ip<span class="span4br"></span></p><p style="padding:0px;font-family:tahoma, arial, helvetica, sans-serif, simsun;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span>2. 知道对方计算机名查看对方ip</p><p style="padding:0px;font-family:tahoma, arial, helvetica, sans-serif, simsun;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span>方法：开始-&gt;运行-&gt;cmd-&gt;ping 对方计算机名<span class="span4br"></span>或者 开始-&gt;运行-&gt;cmd-&gt;nbtstat -a 对方计算机名</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>276</wp:post_id>
		<wp:post_date>2013-11-14 10:16:51</wp:post_date>
		<wp:post_date_gmt>2013-11-14 02:16:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e5%b7%b2%e7%9f%a5ip%e6%9f%a5%e7%9c%8b%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%90%8d%e5%92%8cmac%e5%9c%b0%e5%9d%80</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>C语言中实现字符串的MD5值计算</title>
		<link>http://localhost/wp/?p=279</link>
		<pubDate>Tue, 03 Dec 2013 03:46:43 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=279</guid>
		<description></description>
		<content:encoded><![CDATA[<p>使用LR压测接口时，涉及MD5签名计算，可使用此函数实现MD5的计算 &nbsp;注意避免中文情况，可能因运行平台编码原因， 导致计算结果不同, 在参与计算之前先转码</p><p><span class="span4br"></span></p><p>另存为md5.h，加入到globals.h中</p><p>在Action中直接使用 &nbsp;void GetMd5FromString(const char* s,char* resStr) 即可</p><p>示例如下：</p><pre class="brush:cpp;toolbar:false;">char sign[33]="";
char sign_str[500]="";
..........
sprintf(sign_str,"merchant_id=%s&amp;qid=%s&amp;sign_type=%s&amp;timestamp=%swer43rweteq1324r2rerrw",merchant_id,qid,sign_type,timestamp);
GetMd5FromString(sign_str,sign);</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p><p>此时sign为sign_str计算MD5后的值</p><p><span class="span4br"></span></p><p><span class="span4br"></span></p><pre class="brush:cpp;toolbar:false;">/**计算字符串的MD5值
itoa函数非C标准，避免unix下执行异常，添加itoa实现
*/
#ifndef MD5_H
#define MD5_H
#ifdef __alpha
typedef unsigned int uint32;
#else
typedef unsigned long uint32;
#endif
struct MD5Context {
        uint32 buf[4];
        uint32 bits[2];
        unsigned char in[64];
};
extern void MD5Init();
extern void MD5Update();
extern void MD5Final();
extern void MD5Transform();
typedef struct MD5Context MD5_CTX;
#endif
#ifdef sgi
#define HIGHFIRST
#endif
#ifdef sun
#define HIGHFIRST
#endif
#ifndef HIGHFIRST
#define byteReverse(buf, len)    /* Nothing */
#else
  
void byteReverse(buf, longs)unsigned char *buf; unsigned longs;
{
    uint32 t;
    do {
    t = (uint32) ((unsigned) buf[3] &lt;&lt; 8 | buf[2]) &lt;&lt; 16 |((unsigned) buf[1] &lt;&lt; 8 | buf[0]);
    *(uint32 *) buf = t;
    buf += 4;
    } while (--longs);
}
#endif
void MD5Init(ctx)struct MD5Context *ctx;
{
    ctx-&gt;buf[0] = 0x67452301;
    ctx-&gt;buf[1] = 0xefcdab89;
    ctx-&gt;buf[2] = 0x98badcfe;
    ctx-&gt;buf[3] = 0x10325476;
    ctx-&gt;bits[0] = 0;
    ctx-&gt;bits[1] = 0;
}
void MD5Update(ctx, buf, len) struct MD5Context *ctx; unsigned char *buf; unsigned len;
{
    uint32 t;
    t = ctx-&gt;bits[0];
    if ((ctx-&gt;bits[0] = t + ((uint32) len &lt;&lt; 3)) &lt; t)
    ctx-&gt;bits[1]++;
    ctx-&gt;bits[1] += len &gt;&gt; 29;
    t = (t &gt;&gt; 3) &amp; 0x3f;
    if (t) {
    unsigned char *p = (unsigned char *) ctx-&gt;in + t;
    t = 64 - t;
    if (len &lt; t) {
        memcpy(p, buf, len);
        return;
    }
    memcpy(p, buf, t);
    byteReverse(ctx-&gt;in, 16);
    MD5Transform(ctx-&gt;buf, (uint32 *) ctx-&gt;in);
    buf += t;
    len -= t;
    }
    while (len &gt;= 64) {
    memcpy(ctx-&gt;in, buf, 64);
    byteReverse(ctx-&gt;in, 16);
    MD5Transform(ctx-&gt;buf, (uint32 *) ctx-&gt;in);
    buf += 64;
    len -= 64;
    }
    memcpy(ctx-&gt;in, buf, len);
}
void MD5Final(digest, ctx)
    unsigned char digest[16]; struct MD5Context *ctx;
{
    unsigned count;
    unsigned char *p;
    count = (ctx-&gt;bits[0] &gt;&gt; 3) &amp; 0x3F;
    p = ctx-&gt;in + count;
    *p++ = 0x80;
    count = 64 - 1 - count;
    if (count &lt; 8) {
    memset(p, 0, count);
    byteReverse(ctx-&gt;in, 16);
    MD5Transform(ctx-&gt;buf, (uint32 *) ctx-&gt;in);
    memset(ctx-&gt;in, 0, 56);
    } else {
    memset(p, 0, count - 8);
    }
    byteReverse(ctx-&gt;in, 14);
    ((uint32 *) ctx-&gt;in)[14] = ctx-&gt;bits[0];
    ((uint32 *) ctx-&gt;in)[15] = ctx-&gt;bits[1];
    MD5Transform(ctx-&gt;buf, (uint32 *) ctx-&gt;in);
    byteReverse((unsigned char *) ctx-&gt;buf, 4);
    memcpy(digest, ctx-&gt;buf, 16);
    memset(ctx, 0, sizeof(ctx));
}
#define F1(x, y, z) (z ^ (x &amp; (y ^ z)))
#define F2(x, y, z) F1(z, x, y)
#define F3(x, y, z) (x ^ y ^ z)
#define F4(x, y, z) (y ^ (x | ~z))
#define MD5STEP(f, w, x, y, z, data, s) ( w += f(x, y, z) + data, w = w&lt;&lt;s | w&gt;&gt;(32-s), w += x )
void MD5Transform(buf, in)
    uint32 buf[4]; uint32 in[16];
{
    register uint32 a, b, c, d;
    a = buf[0];
    b = buf[1];
    c = buf[2];
    d = buf[3];
    MD5STEP(F1, a, b, c, d, in[0] + 0xd76aa478, 7);
    MD5STEP(F1, d, a, b, c, in[1] + 0xe8c7b756, 12);
    MD5STEP(F1, c, d, a, b, in[2] + 0x242070db, 17);
    MD5STEP(F1, b, c, d, a, in[3] + 0xc1bdceee, 22);
    MD5STEP(F1, a, b, c, d, in[4] + 0xf57c0faf, 7);
    MD5STEP(F1, d, a, b, c, in[5] + 0x4787c62a, 12);
    MD5STEP(F1, c, d, a, b, in[6] + 0xa8304613, 17);
    MD5STEP(F1, b, c, d, a, in[7] + 0xfd469501, 22);
    MD5STEP(F1, a, b, c, d, in[8] + 0x698098d8, 7);
    MD5STEP(F1, d, a, b, c, in[9] + 0x8b44f7af, 12);
    MD5STEP(F1, c, d, a, b, in[10] + 0xffff5bb1, 17);
    MD5STEP(F1, b, c, d, a, in[11] + 0x895cd7be, 22);
    MD5STEP(F1, a, b, c, d, in[12] + 0x6b901122, 7);
    MD5STEP(F1, d, a, b, c, in[13] + 0xfd987193, 12);
    MD5STEP(F1, c, d, a, b, in[14] + 0xa679438e, 17);
    MD5STEP(F1, b, c, d, a, in[15] + 0x49b40821, 22);
    MD5STEP(F2, a, b, c, d, in[1] + 0xf61e2562, 5);
    MD5STEP(F2, d, a, b, c, in[6] + 0xc040b340, 9);
    MD5STEP(F2, c, d, a, b, in[11] + 0x265e5a51, 14);
    MD5STEP(F2, b, c, d, a, in[0] + 0xe9b6c7aa, 20);
    MD5STEP(F2, a, b, c, d, in[5] + 0xd62f105d, 5);
    MD5STEP(F2, d, a, b, c, in[10] + 0x02441453, 9);
    MD5STEP(F2, c, d, a, b, in[15] + 0xd8a1e681, 14);
    MD5STEP(F2, b, c, d, a, in[4] + 0xe7d3fbc8, 20);
    MD5STEP(F2, a, b, c, d, in[9] + 0x21e1cde6, 5);
    MD5STEP(F2, d, a, b, c, in[14] + 0xc33707d6, 9);
    MD5STEP(F2, c, d, a, b, in[3] + 0xf4d50d87, 14);
    MD5STEP(F2, b, c, d, a, in[8] + 0x455a14ed, 20);
    MD5STEP(F2, a, b, c, d, in[13] + 0xa9e3e905, 5);
    MD5STEP(F2, d, a, b, c, in[2] + 0xfcefa3f8, 9);
    MD5STEP(F2, c, d, a, b, in[7] + 0x676f02d9, 14);
    MD5STEP(F2, b, c, d, a, in[12] + 0x8d2a4c8a, 20);
    MD5STEP(F3, a, b, c, d, in[5] + 0xfffa3942, 4);
    MD5STEP(F3, d, a, b, c, in[8] + 0x8771f681, 11);
    MD5STEP(F3, c, d, a, b, in[11] + 0x6d9d6122, 16);
    MD5STEP(F3, b, c, d, a, in[14] + 0xfde5380c, 23);
    MD5STEP(F3, a, b, c, d, in[1] + 0xa4beea44, 4);
    MD5STEP(F3, d, a, b, c, in[4] + 0x4bdecfa9, 11);
    MD5STEP(F3, c, d, a, b, in[7] + 0xf6bb4b60, 16);
    MD5STEP(F3, b, c, d, a, in[10] + 0xbebfbc70, 23);
    MD5STEP(F3, a, b, c, d, in[13] + 0x289b7ec6, 4);
    MD5STEP(F3, d, a, b, c, in[0] + 0xeaa127fa, 11);
    MD5STEP(F3, c, d, a, b, in[3] + 0xd4ef3085, 16);
    MD5STEP(F3, b, c, d, a, in[6] + 0x04881d05, 23);
    MD5STEP(F3, a, b, c, d, in[9] + 0xd9d4d039, 4);
    MD5STEP(F3, d, a, b, c, in[12] + 0xe6db99e5, 11);
    MD5STEP(F3, c, d, a, b, in[15] + 0x1fa27cf8, 16);
    MD5STEP(F3, b, c, d, a, in[2] + 0xc4ac5665, 23);
    MD5STEP(F4, a, b, c, d, in[0] + 0xf4292244, 6);
    MD5STEP(F4, d, a, b, c, in[7] + 0x432aff97, 10);
    MD5STEP(F4, c, d, a, b, in[14] + 0xab9423a7, 15);
    MD5STEP(F4, b, c, d, a, in[5] + 0xfc93a039, 21);
    MD5STEP(F4, a, b, c, d, in[12] + 0x655b59c3, 6);
    MD5STEP(F4, d, a, b, c, in[3] + 0x8f0ccc92, 10);
    MD5STEP(F4, c, d, a, b, in[10] + 0xffeff47d, 15);
    MD5STEP(F4, b, c, d, a, in[1] + 0x85845dd1, 21);
    MD5STEP(F4, a, b, c, d, in[8] + 0x6fa87e4f, 6);
    MD5STEP(F4, d, a, b, c, in[15] + 0xfe2ce6e0, 10);
    MD5STEP(F4, c, d, a, b, in[6] + 0xa3014314, 15);
    MD5STEP(F4, b, c, d, a, in[13] + 0x4e0811a1, 21);
    MD5STEP(F4, a, b, c, d, in[4] + 0xf7537e82, 6);
    MD5STEP(F4, d, a, b, c, in[11] + 0xbd3af235, 10);
    MD5STEP(F4, c, d, a, b, in[2] + 0x2ad7d2bb, 15);
    MD5STEP(F4, b, c, d, a, in[9] + 0xeb86d391, 21);
    buf[0] += a;
    buf[1] += b;
    buf[2] += c;
    buf[3] += d;
}
  
void  itoa (unsigned long val,char *buf,unsigned radix)   
{   
    char   *p;       
    char   *firstdig; 
    char   temp;  
    unsigned   digval;
  
    p =  buf;   
    firstdig = p;
  
    do {   
        digval   =   (unsigned)   (val   %   radix);   
        val   /=   radix; 
  
       
        if   (digval   &gt;   9)   
            *p++   =   (char   )   (digval   -   10   +   'a '); 
        else 
            *p++   =   (char   )   (digval   +   '0 ');  
     }while(val&gt;0);   
  
     
      *p--   =   '\0 ';
  
     do{   
         temp   =   *p;   
         *p   =   *firstdig;   
         *firstdig   =   temp; 
         --p;   
         ++firstdig;    
    }while(firstdig &lt; p);
}
  
void GetMd5FromString(const char* s,char* resStr)
{
      
     struct MD5Context md5c;
     unsigned char ss[16];
     char subStr[3];
     int i;
     MD5Init( &amp;md5c );
     MD5Update( &amp;md5c, s, strlen(s) );
     MD5Final( ss, &amp;md5c );
     strcpy(resStr,"");
     for( i=0; i&lt;16; i++ )
     {
         sprintf(subStr, "%02x", ss[i] );
         itoa(ss[i],subStr,16);
         if (strlen(subStr)==1) {
             strcat(resStr,"0");
         }
         strcat(resStr,subStr);
     }
     strcat(resStr,"\0");
}</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>279</wp:post_id>
		<wp:post_date>2013-12-03 11:46:43</wp:post_date>
		<wp:post_date_gmt>2013-12-03 03:46:43</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>c%e8%af%ad%e8%a8%80%e4%b8%ad%e5%ae%9e%e7%8e%b0%e5%ad%97%e7%ac%a6%e4%b8%b2%e7%9a%84md5%e5%80%bc%e8%ae%a1%e7%ae%97</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>java注解学习过程--转一篇好文当收藏 原文地址http://www.tmser.com/?post=34</title>
		<link>http://localhost/wp/?p=283</link>
		<pubDate>Thu, 19 Dec 2013 09:59:38 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=283</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="color:#FF0000;font-size:20px;">转： 原文地址</span><a href="http://www.tmser.com/?post=34" style="color:#FF0000;text-decoration:underline;"><span style="color:#FF0000;font-size:20px;">http://www.tmser.com/?post=34</span></a> </p><p><span class="span4br"></span></p><p><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">java 注解，从名字上看是注释，解释。但功能却不仅仅是注释那么简单。注解（Annotation） 为我们在代码中添加信息提供了一种形式化的方法，是我们可以在稍后 某个时刻方便地使用这些数据（通过 解析注解 来使用这些数据），常见的作用有以下几种：</span></p><ul style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><li><p>生成文档。这是最常见的，也是java 最早提供的注解。常用的有@see @param @return 等</p></li><li><p>跟踪代码依赖性，实现替代配置文件功能。比较常见的是spring 2.5 开始的基于注解配置。作用就是减少配置。现在的框架基本都使用了这种配置来减少配置文件的数量。也是</p></li><li><p>在编译时进行格式检查。如@override 放在方法前，如果你这个方法并不是覆盖了超类方法，则编译时就能检查出。</p></li></ul><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">包 <strong>java.lang.annotation </strong>中包含所有定义自定义注解所需用到的原注解和接口。如接口 java.lang.annotation.<strong><span style="color:#e53333;">Annotation</span></strong> 是所有注解继承的接口,并且是自动继承，不需要定义时指定，类似于所有类都自动继承Object。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">该包同时定义了四个元注解，<strong>Documented</strong>,<strong>In</strong><strong>h</strong><strong>erited</strong>,<strong>Target</strong>(作用范围，方法，属性，构造方法等),<strong>Retention</strong>(生命范围，源代码，class,runtime)。下面将在实例中逐个讲解他们的作用，及使用方法。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong>Inherited :</strong> 在您定义注解后并使用于程序代码上时，预设上父类别中的注解并不会被继承至子类别中，您可以在定义注解时加上java.lang.annotation.Inherited 限定的Annotation，这让您定义的Annotation型别被继承下来。<strong>注意注解继承只针对class 级别注解有效</strong>（这段建议看完全文后在来回顾）。 多说无益，下面就一步步从零开始建一个我们自己的注解。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; <strong>建第一个注解</strong></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;">/**</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> *</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> *@interface用来声明一个注解，其中的每一个方法实际上是声明了一个配置参数。</span></p></li><li class="L4"><p><span class="com" style="color:#880000;"> *方法的名称就是参数的名称，返回值类型就是参数的类型。</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> *可以通过default来声明参数的默认值。</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> *在这里可以看到@Retention和@Target这样的元注解，用来声明注解本身的行为。</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> *@Retention用来声明注解的保留策略，有CLASS、RUNTIME和SOURCE这三种，</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> *分别表示注解保存在类文件、JVM运行时刻和源代码中。</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> *只有当声明为RUNTIME的时候，才能够在运行时刻通过反射API来获取到注解的信息。</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> *@Target用来声明注解可以被添加在哪些类型的元素上，如类型、方法和域等。</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> *就可以定义一个注解了，它将自动继承Annotation</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> */</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="lit" style="color:#006666;">@interface</span><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L4"><p><span class="com" style="color:#880000;">//这里定义了一个空的注解，它能干什么呢。我也不知道，但他能用。</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">在下面这个程序中使用它：</p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">util</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">HashMap</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">util</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Map</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L4"><p><span class="pln"> </span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;">/**</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 这个类专门用来测试注解使用</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * @author tmser</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> */</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="lit" style="color:#006666;">@TestA</span><span class="pln"> &nbsp; &nbsp;</span><span class="com" style="color:#880000;">//使用了类注解</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"></span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="com" style="color:#880000;">//使用了类成员注解</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="kwd" style="color:#000088;">private</span><span class="pln"></span><span class="typ" style="color:#660066;">Integer</span><span class="pln"> age</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L4"><p><span class="pln"> &nbsp; &nbsp;</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="com" style="color:#880000;">//使用了构造方法注解</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp; &nbsp; &nbsp;</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="pun" style="color:#666600;">}</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="com" style="color:#880000;">//使用了类方法注解</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> a</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="com" style="color:#880000;">//使用了局部变量注解</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"> &nbsp; &nbsp; &nbsp; &nbsp;</span><span class="typ" style="color:#660066;">Map</span><span class="pln"> m </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">new</span><span class="pln"></span><span class="typ" style="color:#660066;">HashMap</span><span class="pun" style="color:#666600;">(</span><span class="lit" style="color:#006666;">0</span><span class="pun" style="color:#666600;">);</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="pun" style="color:#666600;">}</span></p></li><li class="L4"><p><span class="pln"> &nbsp; &nbsp;</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> b</span><span class="pun" style="color:#666600;">(</span><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="typ" style="color:#660066;">Integer</span><span class="pln"> a</span><span class="pun" style="color:#666600;">){</span><span class="pln"></span><span class="com" style="color:#880000;">//使用了方法参数注解</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"> &nbsp; &nbsp; &nbsp; &nbsp;</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> &nbsp; &nbsp;</span><span class="pun" style="color:#666600;">}</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">编译没有报错，ok，一个注解实验完成。这个注解也太简单了吧，好像什么信息也不能传递。别急下面就来一步步完善它，也该四位元注解依次开始上场了。</p><p><span class="span4br"></span></p><p><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">四个元注解分别是：</span><strong style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">@Target</strong><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">,</span><strong style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">@Retention</strong><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">,</span><strong style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">@Documented</strong><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">,</span><strong style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">@Inherited</strong><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> ，再次强调下元注解是java API提供，是专门用来定义注解的注解，其作用分别如下。</span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp;@Target 表示该注解用于什么地方，可能的值在枚举类 ElemenetType 中，包括： </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.CONSTRUCTOR 构造器声明 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.FIELD 域声明（包括 enum 实例） </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.LOCAL_VARIABLE 局部变量声明</p><div style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; <span style="color:#337fe5;"> </span><span style="color:#337fe5;">ElemenetT</span><span style="color:#337fe5;">ype.</span><span style="color:#337fe5;">ANNOTATION_TYPE 作用于注解</span><span style="color:#337fe5;">量声明</span><span style="color:#337fe5;"></span><span class="span4br"></span></div><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.METHOD 方法声明</p><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.PACKAGE 包声明 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.PARAMETER 参数声明 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ElemenetType.TYPE 类，接口（包括注解类型）或enum声明 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; @Retention 表示在什么级别保存该注解信息。可选的参数值在枚举类型 RetentionPolicy 中，包括： </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;RetentionPolicy.SOURCE 注解将被编译器丢弃 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;RetentionPolicy.CLASS 注解在class文件中可用，但会被VM丢弃 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;RetentionPolicy.RUNTIME VM将在运行期也保留注释，因此可以通过反射机制读取注解的信息。 </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp;@Documented 将此注解包含在 javadoc 中 ，</span><span lang="EN-US" style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span lang="EN-US"><span lang="EN-US">它代表着此注解会被</span></span><span style="color:#000;"><span style="font-family:calibri;">javadoc</span></span><span lang="EN-US"><span lang="EN-US">工具提取成文档。在</span></span><span style="color:#000;"><span style="font-family:calibri;">doc</span></span></span><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">文档中的内容会因为此注解的信息内容不同而不同。</span><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">相当与@see,@param 等。</span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp; </span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; &nbsp; &nbsp;@Inherited 允许子类继承父类中的注解，例子中补充。</span><br style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;" /><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; </p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">学习最忌好高骛远，我们就一个一个来实验。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong>第一个</strong>：@Target，动手在前面我们编写的注解上加上元注解。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">ElementType</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Target</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L4"><p><span class="com" style="color:#880000;">/* </span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 定义注解 Test </span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 首先使用ElementType.TYPE</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> */</span><span class="pln"></span></p></li><li class="L8" style="list-style-type:none;"><p><span class="lit" style="color:#006666;">@Target</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">ElementType</span><span class="pun" style="color:#666600;">.</span><span class="pln">PACKAGE</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="lit" style="color:#006666;">@interface</span><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"> </span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><span style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">ctrl+ s 保存，今天电脑比较给力，我们的测试类那边立马出现了一堆错误，除了类注解。我想到这，聪明的你立刻明白了这个元注解的意义了。是不是想当然的偷起懒来了。？难道还有意外？细心的朋友应该发现了，我们的测试类少了一个属性没用，就是ElemenetType.PACKAGE。在我们的注解加上这个属性的元注解后，我们测试程序的元注解全部阵亡，不对，还有一个没加呢，好加上。package 包，想当然是加载 package 前面。即</span><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">什么也报错。这就搞不明白了，不加在这加哪去呢。我也不知道了，不过这是编译错误，我们的eclipse 将错误给我们指出了，就是</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp;Package annotations must be in file package-info.java ，e 文虽然不好，但这个简单的还是难不倒几个人的，package 注解必须定义在 package-info.java 中。package-info 又是什么东西，好了为节省你们的时间帮你百度好了，<a target="_blank" href="http://www.tmser.com/index.php?post=36" style="color:#003d79;text-decoration:none;">传送门</a>。ok,到此 target 元注解就全部完成了。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">第二个元注解： @Retention 参数 RetentionPolicy。有了前面的经验这个注解理解起来就简单多了，并且幸运的是这个注解还没有特殊的属性值。 简单演示下如何使用：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">ElementType</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Target</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L4"><p><span class="com" style="color:#880000;">/* </span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 定义注解 Test </span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 首先使用ElementType.TYPE</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 运行级别定为 运行时，以便后面测试解析</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> */</span><span class="pln"></span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="lit" style="color:#006666;">@Target</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">ElementType</span><span class="pun" style="color:#666600;">.</span><span class="pln">PACKAGE</span><span class="pun" style="color:#666600;">)</span></p></li><li class="L0" style="list-style-type:none;"><p style="word-wrap:break-word;word-break:break-all;"><span class="span4br"></span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="word-wrap:break-word;word-break:break-all;"><span class="pln"></span><span class="lit" style="color:#006666;">@Retention</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">RetentionPolicy</span><span class="pun" style="color:#666600;">.</span><span class="pln">RUNTIME</span><span class="pun" style="color:#666600;">)</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"> </span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="lit" style="color:#006666;">@interface</span><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L4"><p><span class="pln"> </span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">第三和第四个元注解就不再举例了。比较简单，也没有值，相信看过上面的解释也就清楚了。下面我们还是继续来深入的探讨下注解的使用。上面的例子都非常简单，注解连属性都没有。ok，下面我们就来定义一个有属性的注解，并在例子程序中获取都注解中定义的值。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">开始之前将下定义属性的规则：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong> &nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#e53333;">@interface用来声明一个注解，其中的每一个方法实际上是声明了一个配置参数。方法的名称就是参数的名称，返回值类型就是参数的类型（返回值类型只能是基本类型、Class、String、enum）。可以通过default来声明参数的默认值。</span></strong></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">代码：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="com" style="color:#880000;">/* </span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 定义注解 Test </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 为方便测试：注解目标为类 方法，属性及构造方法 </span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 注解中含有三个元素 id ,name和 gid; </span></p></li><li class="L4"><p><span class="com" style="color:#880000;"> * id 元素 有默认值 0</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> */</span><span class="pln"></span></p></li><li class="L6" style="list-style-type:none;"><p><span class="lit" style="color:#006666;">@Target</span><span class="pun" style="color:#666600;">({</span><span class="pln">TYPE</span><span class="pun" style="color:#666600;">,</span><span class="pln">METHOD</span><span class="pun" style="color:#666600;">,</span><span class="pln">FIELD</span><span class="pun" style="color:#666600;">,</span><span class="pln">CONSTRUCTOR</span><span class="pun" style="color:#666600;">})</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="lit" style="color:#006666;">@Retention</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">RetentionPolicy</span><span class="pun" style="color:#666600;">.</span><span class="pln">RUNTIME</span><span class="pun" style="color:#666600;">)</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="lit" style="color:#006666;">@interface</span><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">String</span><span class="pln"> name</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">int</span><span class="pln"> id</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span><span class="kwd" style="color:#000088;">default</span><span class="pln"></span><span class="lit" style="color:#006666;">0</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Class</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> gid</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">下面改下我们的测试类：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">util</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">HashMap</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">util</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Map</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L4"><p><span class="pln"> </span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;">/**</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 这个类专门用来测试注解使用</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * @author tmser</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> */</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L0" style="list-style-type:none;"><p><span class="lit" style="color:#006666;">@TestA</span><span class="pun" style="color:#666600;">(</span><span class="pln">name</span><span class="pun" style="color:#666600;">=</span><span class="str" style="color:#008800;">&quot;type&quot;</span><span class="pun" style="color:#666600;">,</span><span class="pln">gid</span><span class="pun" style="color:#666600;">=</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="com" style="color:#880000;">//类成员注解</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"></span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="lit" style="color:#006666;">@TestA</span><span class="pun" style="color:#666600;">(</span><span class="pln">name</span><span class="pun" style="color:#666600;">=</span><span class="str" style="color:#008800;">&quot;param&quot;</span><span class="pun" style="color:#666600;">,</span><span class="pln">id</span><span class="pun" style="color:#666600;">=</span><span class="lit" style="color:#006666;">1</span><span class="pun" style="color:#666600;">,</span><span class="pln">gid</span><span class="pun" style="color:#666600;">=</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="com" style="color:#880000;">//类成员注解</span></p></li><li class="L4"><p><span class="pln"></span><span class="kwd" style="color:#000088;">private</span><span class="pln"></span><span class="typ" style="color:#660066;">Integer</span><span class="pln"> age</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span><span class="lit" style="color:#006666;">@TestA</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="pln">name</span><span class="pun" style="color:#666600;">=</span><span class="str" style="color:#008800;">&quot;construct&quot;</span><span class="pun" style="color:#666600;">,</span><span class="pln">id</span><span class="pun" style="color:#666600;">=</span><span class="lit" style="color:#006666;">2</span><span class="pun" style="color:#666600;">,</span><span class="pln">gid</span><span class="pun" style="color:#666600;">=</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">)</span><span class="com" style="color:#880000;">//构造方法注解</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="lit" style="color:#006666;">@TestA</span><span class="pun" style="color:#666600;">(</span><span class="pln">name</span><span class="pun" style="color:#666600;">=</span><span class="str" style="color:#008800;">&quot;public method&quot;</span><span class="pun" style="color:#666600;">,</span><span class="pln">id</span><span class="pun" style="color:#666600;">=</span><span class="lit" style="color:#006666;">3</span><span class="pun" style="color:#666600;">,</span><span class="pln">gid</span><span class="pun" style="color:#666600;">=</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="com" style="color:#880000;">//类方法注解</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> a</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Map</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">,</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> m </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">new</span><span class="pln"></span><span class="typ" style="color:#660066;">HashMap</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">,</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">&gt;(</span><span class="lit" style="color:#006666;">0</span><span class="pun" style="color:#666600;">);</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L4"><p><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="lit" style="color:#006666;">@TestA</span><span class="pun" style="color:#666600;">(</span><span class="pln">name</span><span class="pun" style="color:#666600;">=</span><span class="str" style="color:#008800;">&quot;protected method&quot;</span><span class="pun" style="color:#666600;">,</span><span class="pln">id</span><span class="pun" style="color:#666600;">=</span><span class="lit" style="color:#006666;">4</span><span class="pun" style="color:#666600;">,</span><span class="pln">gid</span><span class="pun" style="color:#666600;">=</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="com" style="color:#880000;">//类方法注解</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">protected</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> b</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Map</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">,</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> m </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">new</span><span class="pln"></span><span class="typ" style="color:#660066;">HashMap</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">,</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">&gt;(</span><span class="lit" style="color:#006666;">0</span><span class="pun" style="color:#666600;">);</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="lit" style="color:#006666;">@TestA</span><span class="pun" style="color:#666600;">(</span><span class="pln">name</span><span class="pun" style="color:#666600;">=</span><span class="str" style="color:#008800;">&quot;private method&quot;</span><span class="pun" style="color:#666600;">,</span><span class="pln">id</span><span class="pun" style="color:#666600;">=</span><span class="lit" style="color:#006666;">5</span><span class="pun" style="color:#666600;">,</span><span class="pln">gid</span><span class="pun" style="color:#666600;">=</span><span class="typ" style="color:#660066;">Long</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="com" style="color:#880000;">//类方法注解</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">private</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> c</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Map</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">,</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> m </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">new</span><span class="pln"></span><span class="typ" style="color:#660066;">HashMap</span><span class="pun" style="color:#666600;">&lt;</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">,</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">&gt;(</span><span class="lit" style="color:#006666;">0</span><span class="pun" style="color:#666600;">);</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L4"><p><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> b</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">Integer</span><span class="pln"> a</span><span class="pun" style="color:#666600;">){</span><span class="pln"></span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pun" style="color:#666600;">}</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">下面到了最重要的一步了，就是如何读取我们在类中定义的注解。只要读取出来了使用的话就简单了。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">jdk1.5 既然增加了注解，肯定就增加了相关读取的api</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">在<span style="font-family:&#39;courier new&#39;;">java.lang.reflect</span>包中新增了<span style="font-family:&#39;courier new&#39;;">AnnotatedElement</span>接口，JDK源码如下：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"> interface </span><span class="typ" style="color:#660066;">AnnotatedElement</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">boolean</span><span class="pln"> isAnnotationPresent</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">Class</span><span class="pun" style="color:#666600;">&lt;?</span><span class="pln"></span><span class="kwd" style="color:#000088;">extends</span><span class="pln"></span><span class="typ" style="color:#660066;">Annotation</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> annotationClass</span><span class="pun" style="color:#666600;">);</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span><span class="pun" style="color:#666600;">&lt;</span><span class="pln">T </span><span class="kwd" style="color:#000088;">extends</span><span class="pln"></span><span class="typ" style="color:#660066;">Annotation</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> T getAnnotation</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">Class</span><span class="pun" style="color:#666600;">&lt;</span><span class="pln">T</span><span class="pun" style="color:#666600;">&gt;</span><span class="pln"> annotationClass</span><span class="pun" style="color:#666600;">);</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Annotation</span><span class="pun" style="color:#666600;">[]</span><span class="pln"> getAnnotations</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L4"><p><span class="pln"></span><span class="typ" style="color:#660066;">Annotation</span><span class="pun" style="color:#666600;">[]</span><span class="pln"> getDeclaredAnnotations</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><ul style="font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><li><p>isAnnotationPresent：判断是否标注了指定注解</p></li><li><p>getAnnotation：获取指定注解，没有则返回<span style="font-family:&#39;courier new&#39;;">null</span></p></li><li><p>getAnnotations：获取所有注解，包括继承自基类的，没有则返回长度为0的数组</p></li><li><p>getDeclaredAnnotations：获取自身显式标明的所有注解，没有则返回长度为0的数组</p></li></ul><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">package</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">reflect</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Constructor</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L4"><p><span class="kwd" style="color:#000088;">import</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="pln">reflect</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Method</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L6" style="list-style-type:none;"><p><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"></span><span class="typ" style="color:#660066;">ParseAnnotation</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"> </span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span><span class="com" style="color:#880000;">/**</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 简单打印出UserAnnotation 类中所使用到的类注解</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 该方法只打印了 Type 类型的注解</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * @throws ClassNotFoundException</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> */</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">static</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> parseTypeAnnotation</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span><span class="kwd" style="color:#000088;">throws</span><span class="pln"></span><span class="typ" style="color:#660066;">ClassNotFoundException</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span><span class="pln"></span></p></li><li class="L4"><p><span class="pln"></span><span class="typ" style="color:#660066;">Class</span><span class="pln"> clazz </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="typ" style="color:#660066;">Class</span><span class="pun" style="color:#666600;">.</span><span class="pln">forName</span><span class="pun" style="color:#666600;">(</span><span class="str" style="color:#008800;">&quot;com.tmser.annotation.UserAnnotation&quot;</span><span class="pun" style="color:#666600;">);</span><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Annotation</span><span class="pun" style="color:#666600;">[]</span><span class="pln"> annotations </span><span class="pun" style="color:#666600;">=</span><span class="pln"> clazz</span><span class="pun" style="color:#666600;">.</span><span class="pln">getAnnotations</span><span class="pun" style="color:#666600;">();</span><span class="pln"></span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">for</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">Annotation</span><span class="pln"> annotation </span><span class="pun" style="color:#666600;">:</span><span class="pln"> annotations</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span><span class="pln"></span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"> testA </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">TestA</span><span class="pun" style="color:#666600;">)</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">;</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">System</span><span class="pun" style="color:#666600;">.</span><span class="pln">out</span><span class="pun" style="color:#666600;">.</span><span class="pln">println</span><span class="pun" style="color:#666600;">(</span><span class="str" style="color:#008800;">&quot;id= \&quot;&quot;</span><span class="pun" style="color:#666600;">+</span><span class="pln">testA</span><span class="pun" style="color:#666600;">.</span><span class="pln">id</span><span class="pun" style="color:#666600;">()+</span><span class="str" style="color:#008800;">&quot;\&quot;; name= \&quot;&quot;</span><span class="pun" style="color:#666600;">+</span><span class="pln">testA</span><span class="pun" style="color:#666600;">.</span><span class="pln">name</span><span class="pun" style="color:#666600;">()+</span><span class="str" style="color:#008800;">&quot;\&quot;; gid = &quot;</span><span class="pun" style="color:#666600;">+</span><span class="pln">testA</span><span class="pun" style="color:#666600;">.</span><span class="pln">gid</span><span class="pun" style="color:#666600;">());</span><span class="pln"></span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span><span class="pln"></span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span><span class="pln"></span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="com" style="color:#880000;">/**</span></p></li><li class="L4"><p><span class="com" style="color:#880000;"> * 简单打印出UserAnnotation 类中所使用到的方法注解</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 该方法只打印了 Method 类型的注解</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * @throws ClassNotFoundException</span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> */</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">static</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> parseMethodAnnotation</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Method</span><span class="pun" style="color:#666600;">[]</span><span class="pln"> methods </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">.</span><span class="pln">getDeclaredMethods</span><span class="pun" style="color:#666600;">();</span><span class="pln"></span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">for</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">Method</span><span class="pln"> method </span><span class="pun" style="color:#666600;">:</span><span class="pln"> methods</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span><span class="pln"></span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="com" style="color:#880000;">/* </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * 判断方法中是否有指定注解类型的注解 </span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</span><span class="pln"></span></p></li><li class="L4"><p><span class="pln"></span><span class="kwd" style="color:#000088;">boolean</span><span class="pln"> hasAnnotation </span><span class="pun" style="color:#666600;">=</span><span class="pln"> method</span><span class="pun" style="color:#666600;">.</span><span class="pln">isAnnotationPresent</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">TestA</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">);</span><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">if</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="pln">hasAnnotation</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span><span class="pln"></span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span><span class="com" style="color:#880000;">/* </span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * 根据注解类型返回方法的指定类型注解 </span></p></li><li class="L8" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</span><span class="pln"></span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"> annotation </span><span class="pun" style="color:#666600;">=</span><span class="pln"> method</span><span class="pun" style="color:#666600;">.</span><span class="pln">getAnnotation</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">TestA</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">);</span><span class="pln"></span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="typ" style="color:#660066;">System</span><span class="pun" style="color:#666600;">.</span><span class="pln">out</span><span class="pun" style="color:#666600;">.</span><span class="pln">println</span><span class="pun" style="color:#666600;">(</span><span class="str" style="color:#008800;">&quot;method = &quot;</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"> method</span><span class="pun" style="color:#666600;">.</span><span class="pln">getName</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"></span><span class="str" style="color:#008800;">&quot; ; id = &quot;</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"> annotation</span><span class="pun" style="color:#666600;">.</span><span class="pln">id</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"></span><span class="str" style="color:#008800;">&quot; ; description = &quot;</span><span class="pln"></span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"> annotation</span><span class="pun" style="color:#666600;">.</span><span class="pln">name</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"></span><span class="str" style="color:#008800;">&quot;; gid= &quot;</span><span class="pun" style="color:#666600;">+</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="pln">gid</span><span class="pun" style="color:#666600;">());</span><span class="pln"></span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span><span class="pln"></span></p></li><li class="L4"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="com" style="color:#880000;">/**</span></p></li><li class="L8" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * 简单打印出UserAnnotation 类中所使用到的方法注解</span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> * 该方法只打印了 Method 类型的注解</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> * @throws ClassNotFoundException</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> */</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">static</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> parseConstructAnnotation</span><span class="pun" style="color:#666600;">(){</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">Constructor</span><span class="pun" style="color:#666600;">[]</span><span class="pln"> constructors </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">.</span><span class="pln">getConstructors</span><span class="pun" style="color:#666600;">();</span><span class="pln"></span></p></li><li class="L4"><p><span class="pln"></span><span class="kwd" style="color:#000088;">for</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">Constructor</span><span class="pln"> constructor </span><span class="pun" style="color:#666600;">:</span><span class="pln"> constructors</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="com" style="color:#880000;">/* </span></p></li><li class="L6" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * 判断构造方法中是否有指定注解类型的注解 </span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</span><span class="pln"></span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">boolean</span><span class="pln"> hasAnnotation </span><span class="pun" style="color:#666600;">=</span><span class="pln"> constructor</span><span class="pun" style="color:#666600;">.</span><span class="pln">isAnnotationPresent</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">TestA</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">);</span><span class="pln"></span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">if</span><span class="pln"></span><span class="pun" style="color:#666600;">(</span><span class="pln">hasAnnotation</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span><span class="pln"></span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span><span class="com" style="color:#880000;">/* </span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * 根据注解类型返回方法的指定类型注解 </span></p></li><li class="L2" style="list-style-type:none;"><p><span class="com" style="color:#880000;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; */</span><span class="pln"></span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="typ" style="color:#660066;">TestA</span><span class="pln"> annotation </span><span class="pun" style="color:#666600;">=(</span><span class="typ" style="color:#660066;">TestA</span><span class="pun" style="color:#666600;">)</span><span class="pln"> constructor</span><span class="pun" style="color:#666600;">.</span><span class="pln">getAnnotation</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">TestA</span><span class="pun" style="color:#666600;">.</span><span class="kwd" style="color:#000088;">class</span><span class="pun" style="color:#666600;">);</span><span class="pln"></span></p></li><li class="L4"><p><span class="pln"></span><span class="typ" style="color:#660066;">System</span><span class="pun" style="color:#666600;">.</span><span class="pln">out</span><span class="pun" style="color:#666600;">.</span><span class="pln">println</span><span class="pun" style="color:#666600;">(</span><span class="str" style="color:#008800;">&quot;constructor = &quot;</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"> constructor</span><span class="pun" style="color:#666600;">.</span><span class="pln">getName</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"></span><span class="str" style="color:#008800;">&quot; ; id = &quot;</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"> annotation</span><span class="pun" style="color:#666600;">.</span><span class="pln">id</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"></span><span class="str" style="color:#008800;">&quot; ; description = &quot;</span><span class="pln"></span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"> annotation</span><span class="pun" style="color:#666600;">.</span><span class="pln">name</span><span class="pun" style="color:#666600;">()</span><span class="pln"></span><span class="pun" style="color:#666600;">+</span><span class="pln"></span><span class="str" style="color:#008800;">&quot;; gid= &quot;</span><span class="pun" style="color:#666600;">+</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="pln">gid</span><span class="pun" style="color:#666600;">());</span><span class="pln"></span></p></li><li class="L7" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span><span class="pln"></span></p></li><li class="L8" style="list-style-type:none;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span><span class="pln"></span></p></li><li class="L9" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L0" style="list-style-type:none;"><p><span class="pln"></span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"></span><span class="kwd" style="color:#000088;">static</span><span class="pln"></span><span class="kwd" style="color:#000088;">void</span><span class="pln"> main</span><span class="pun" style="color:#666600;">(</span><span class="typ" style="color:#660066;">String</span><span class="pun" style="color:#666600;">[]</span><span class="pln"> args</span><span class="pun" style="color:#666600;">)</span><span class="pln"></span><span class="kwd" style="color:#000088;">throws</span><span class="pln"></span><span class="typ" style="color:#660066;">ClassNotFoundException</span><span class="pln"></span><span class="pun" style="color:#666600;">{</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln">parseTypeAnnotation</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln">parseMethodAnnotation</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L4"><p><span class="pln">parseConstructAnnotation</span><span class="pun" style="color:#666600;">();</span></p></li><li class="L5" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln"></span><span class="pun" style="color:#666600;">}</span></p></li><li class="L6" style="list-style-type:none;"><p><span class="pun" style="color:#666600;">}</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">先别说话，运行：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><pre class="prettyprint lang-java linenums" style="overflow:auto;word-wrap:break-word;word-break:break-all;padding:0.5em;border-width:0px 0px 0px 3px;border-left-style:solid;border-left-color:#cccccc;font-size:15px;font-family:consolas, monaco, &#39;bitstream vera sans mono&#39;, &#39;courier new&#39;, courier, monospace;background-color:#ffffff;line-height:19.600000381469727px;text-align:justify;"><ol class="linenums" style="margin-top:0px;margin-bottom:0px;"><li class="L0" style="list-style-type:none;"><p><span class="pln">id</span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="str" style="color:#008800;">&quot;0&quot;</span><span class="pun" style="color:#666600;">;</span><span class="pln"> name</span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="str" style="color:#008800;">&quot;type&quot;</span><span class="pun" style="color:#666600;">;</span><span class="pln"> gid </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Long</span></p></li><li class="L1" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln">method </span><span class="pun" style="color:#666600;">=</span><span class="pln"> c </span><span class="pun" style="color:#666600;">;</span><span class="pln"> id </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="lit" style="color:#006666;">5</span><span class="pln"></span><span class="pun" style="color:#666600;">;</span><span class="pln"> description </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">private</span><span class="pln"> method</span><span class="pun" style="color:#666600;">;</span><span class="pln"> gid</span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Long</span></p></li><li class="L2" style="list-style-type:none;"><p><span class="pln">method </span><span class="pun" style="color:#666600;">=</span><span class="pln"> a </span><span class="pun" style="color:#666600;">;</span><span class="pln"> id </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="lit" style="color:#006666;">3</span><span class="pln"></span><span class="pun" style="color:#666600;">;</span><span class="pln"> description </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">public</span><span class="pln"> method</span><span class="pun" style="color:#666600;">;</span><span class="pln"> gid</span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Long</span></p></li><li class="L3" style="list-style-type:none;background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p><span class="pln">method </span><span class="pun" style="color:#666600;">=</span><span class="pln"> b </span><span class="pun" style="color:#666600;">;</span><span class="pln"> id </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="lit" style="color:#006666;">4</span><span class="pln"></span><span class="pun" style="color:#666600;">;</span><span class="pln"> description </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">protected</span><span class="pln"> method</span><span class="pun" style="color:#666600;">;</span><span class="pln"> gid</span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Long</span></p></li><li class="L4"><p><span class="pln">constructor </span><span class="pun" style="color:#666600;">=</span><span class="pln"> com</span><span class="pun" style="color:#666600;">.</span><span class="pln">tmser</span><span class="pun" style="color:#666600;">.</span><span class="pln">annotation</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">UserAnnotation</span><span class="pln"></span><span class="pun" style="color:#666600;">;</span><span class="pln"> id </span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="lit" style="color:#006666;">2</span><span class="pln"></span><span class="pun" style="color:#666600;">;</span><span class="pln"> description </span><span class="pun" style="color:#666600;">=</span><span class="pln"> construct</span><span class="pun" style="color:#666600;">;</span><span class="pln"> gid</span><span class="pun" style="color:#666600;">=</span><span class="pln"></span><span class="kwd" style="color:#000088;">class</span><span class="pln"> java</span><span class="pun" style="color:#666600;">.</span><span class="pln">lang</span><span class="pun" style="color:#666600;">.</span><span class="typ" style="color:#660066;">Long</span></p></li></ol></pre><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">看到了吧，我们定义的注解都完整的输出了，你要使用哪个，直接拿去用就好了。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">为了不让这篇文章打开太慢，我省略了类属性注解，及参数注解的解析。其实都大同小异。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">另外，我也没有举使用例子。因为我认为好的教程是讲的详细的同时，还会留有扩展。如果我全部写出来，而你只是学习的话，那基本不会自己去动脑了，而是复制粘贴运行一遍完事。</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"> &nbsp; <strong>最</strong><strong>后</strong><strong>提</strong><strong>醒</strong><strong>下</strong>：</p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong><span style="color:#e53333;"> &nbsp; &nbsp; </span></strong><strong><span style="color:#e53333;">1. 要用好注解，必须熟悉java 的反射机制，从上面的例子可以看出，注解的解析完全依赖于反射。</span></strong></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong><span style="color:#e53333;"> &nbsp; &nbsp; 2. 不要滥用注解。平常我们编程过程很少接触和使用注解，只有做设计，且不想让设计有过多的配置时。</span></strong></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong> 疑问：</strong></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><strong> &nbsp; &nbsp; &nbsp;即 <span style="font-weight:normal;">ElementType</span>. <span style="font-weight:normal;">ANNOTATION_TYPE：注解类型，到底什么作用，我发现即使不使用这个类型，我们自定义的注解也可以用来注释其他注解（eclipse 报错，但仍可以编译，也仍可以在测试类中读取出报错的注解，使用TYPE编译器都不报错），难道只是标示注解是个元注解，<strong><span style="font-weight:normal;"></span></strong>知道的麻烦告知一下。</span></strong></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;"><span class="span4br"></span></p><p style="word-wrap:break-word;word-break:break-all;font-family:&#39;microsoft yahei&#39;, arial, verdana, sans-serif;font-size:14px;line-height:19.600000381469727px;text-align:justify;background-color:#eeeeee;">作者写得太好了 &nbsp;转发记录下</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>283</wp:post_id>
		<wp:post_date>2013-12-19 17:59:38</wp:post_date>
		<wp:post_date_gmt>2013-12-19 09:59:38</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>java%e6%b3%a8%e8%a7%a3%e5%ad%a6%e4%b9%a0%e8%bf%87%e7%a8%8b-%e8%bd%ac%e4%b8%80%e7%af%87%e5%a5%bd%e6%96%87%e5%bd%93%e6%94%b6%e8%97%8f-%e5%8e%9f%e6%96%87%e5%9c%b0%e5%9d%80httpwww-tmser-compost34</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>QTAF接口自动化框架–example项目的导入(二)</title>
		<link>http://localhost/wp/?p=286</link>
		<pubDate>Wed, 25 Dec 2013 09:55:15 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://baiweigang.cn/?p=286</guid>
		<description></description>
		<content:encoded><![CDATA[<p><strong>本编指引如何把使用QTAF的example项目导入到eclipse中，如果可以成功导入并执行，可以跳过本篇</strong></p><p><span class="span4br"></span></p><p><span class="span4br"></span>1、首先从 <a href="https://github.com/bwgang/QTAF/tree/example">https://github.com/bwgang/QTAF/tree/example</a> &nbsp;下载最新版本的example，保存在本地磁盘。</p><p><span class="span4br"></span>2、打开eclipse，点击文件-&gt;导入，选择Maven--Existing Maven Project，如下图所示，然后点击【下一步】</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-1.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:MqwALEMY6YxFUugAdjj6oOUn%2B5E%3D" style="float:none;" border="0" height="264" hspace="0" vspace="0" width="379" /></p><p><span class="span4br"></span>3、选中本地磁盘中已下载的example文件夹，如下图，然后点击【完成】</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-2.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:b9v8iPWmPEPtWiiP9EoRuk%2FMJnw%3D" style="float:none;" border="0" height="409" hspace="0" vspace="0" width="379" /></p><p><span class="span4br"></span>4、导入成功后，在eclipse中如下左图，其中会有红色错误提示，需要更改jdk版本和编译版本</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-3.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:zENiuKL%2FDDYDlZ%2B8gkopT0L%2FyXw%3D" style="float:none;" border="0" height="338" hspace="0" vspace="0" width="230" /></p><p><span class="span4br"></span>5、更改jdk版本，在example项目上右键选择属性，然后选中Java构建路径--&gt;JRE系统库[J2SE-1.4]，点击右侧【编辑】，现在工作空间缺省的JDK1.7或者从已安装的JRE中选中JDK1.7，点击【完成】，再点击【确定】。然后点击【确定】，会提示是否立即构建项目，点击【是】。</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-5.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:B2tkmdygGHk%2B1fkF1AnjbE%2BX7eo%3D" style="float:none;" border="0" height="382" hspace="0" vspace="0" width="387" /></p><p><span class="span4br"></span><span class="span4br"></span>6、更改编译器版本，在example项目上右键选择属性，如下图：然后选中Java编译器，在右侧 编译器一致性设置 选择1.7，勾选“使用缺省一致性设置”,然后点击【确定】，会提示是否立即构建项目，点击【是】。</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-6.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:1Jpz%2FIl2fItIe3IQ%2FhHZt7QJvKA%3D" style="float:none;" border="0" height="362" hspace="0" vspace="0" width="394" /></p><p><span class="span4br"></span><span class="span4br"></span>7、此时报错信息没有了，如果还有错误提示，检查下5-6两步的设置，是否保存成功。</p><p><span class="span4br"></span>第一次执行建议在命令行下，因为需要下载依赖包，多数情况下不会一次下载失败，需要运行多次。在项目上右键选择属性--资源 的位置项，查看example项目保存的目录，打开系统的cmd命令窗口，切换到此目录下，执行“mvn test”命令，此时会看到在从maven仓库下载jar包等到本地仓库中，如果长时间下载不下来或者有ERROR报错信息，按一下Ctrl+c，重新执行 “mvn test”会继续下载，直至看到如下信息，则表示所依赖的jar等下载完毕执行成功</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-7.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:yqaajk9Vf%2BOikG7BqVBHNzhlHNg%3D" style="float:none;" border="0" height="290" hspace="0" vspace="0" width="595" /></p><p><span class="span4br"></span><span class="span4br"></span>8、回到eclipse中，找到项目中的执行入口 Entry.java这个类文件，如下图，</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-8.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:ZV0bN3BzijnCsDerYrMfEHI%2FHMc%3D" style="float:none;" border="0" height="316" hspace="0" vspace="0" width="322" /></p><p><span class="span4br"></span><span class="span4br"></span>执行Entry，运行方式为【Java 应用程序】如下图</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-9.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:5CAWXcwiVZ6xmKHWb9hZlhn6Gas%3D" style="float:none;" border="0" height="42" hspace="0" vspace="0" width="339" /></p><p><span class="span4br"></span><span class="span4br"></span>执行结果如下： 至此example项目导入完毕并可成功运行，下一篇结合example讲述qtaf接口框架如何来使用</p><p><span class="span4br"></span><img src="http://bcs.duapp.com/bwgang/%2F2-10.jpg?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:m4%2FfSQT5XVYfqnzs9Ugs6oEsgJ4%3D" style="float:none;" border="0" height="250" hspace="0" vspace="0" width="708" /></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>286</wp:post_id>
		<wp:post_date>2013-12-25 17:55:15</wp:post_date>
		<wp:post_date_gmt>2013-12-25 09:55:15</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>qtaf%e6%8e%a5%e5%8f%a3%e8%87%aa%e5%8a%a8%e5%8c%96%e6%a1%86%e6%9e%b6-example%e5%a6%82%e4%bd%95%e4%bd%bf%e7%94%a8%e4%ba%8c</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>QTAF接口自动化框架–框架主要源码详述（四）</title>
		<link>http://localhost/wp/?p=316</link>
		<pubDate>Wed, 26 Feb 2014 07:30:47 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=316</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="color:#333333;font-family:helvetica, arial, sans-serif;font-size:13px;line-height:17.33333396911621px;"> &nbsp; &nbsp; &nbsp; &nbsp;本篇主要讲述框架的源码部分，对常用到的类方法源码有详细的了解，在编写业务逻辑代码时，提高框架使用效率。</span><span class="span4br"></span></p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;在文中会贴出部分的java源码，完整代码可直接打开源码文件或javadoc对比阅读</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="font-size:1.6em;"><span class="span4br"></span></span></p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="font-size:1.6em;">一、dispatch包</span></p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;封装对TestNG的调用、测试报告的优化输出，主要类概述如下：详细见javadoc</p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-1%E3%80%81TestngLog%E7%B1%BB"></a>1、TestngLog类</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;用例执行过程中，把日志或其它需要记录的信息写入Html测试报告中，静态类，无需创建实例，直接使用包括4个方法，比较简单，详细参考源码</p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-2%E3%80%81report%E5%8C%85"></a>2、report包</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;ExportReportHtml类实现把TestNG原生报告优化为Html报告，使用TestNgXlst；TestReport、TngCount类是自定义收集测试结果的两个实体类，最终输出的是TestReport。</p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E2%80%8B3%E3%80%81TestngRun%E7%B1%BB"></a>3、TestngRun类</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;内部封装TestNG，通过自定义的TestRunInfo类，传入待执行的用例信息</p><pre class="brush:java;toolbar:false;">TestRunInfo类：
         
private String taskName;//任务名称
private String testng_OutPut;//TestNG输出目录
private String htmlReportOutPath;//Html报告输出路径
private String htmlReportTitle;//Html报告标题
private List&lt;ICase&gt;  caseList;//用例信息</pre><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span class="span4br"></span></p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-4%E3%80%81TestCase%E5%8C%85"></a>4、TestCase包</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;通过实现接口ICase，目前支持xml文件格式，java文件格式，自定义data数据格式，</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;如果当前用例类型不满足，可通过继承SuperCase类自编写</p><pre class="brush:java;toolbar:false;">public abstract class SuperCase implements ICase {
         
        protected List&lt;String&gt; xmlPathNameList;
         
        public SuperCase(){
            this.xmlPathNameList=new ArrayList&lt;&gt;();
        }
         
         
        /**
         * 返回用例列表  xml文件信息
         * @return List&lt;String&gt;
         */
        public List&lt;String&gt; getCaseList() {
            return this.xmlPathNameList;
        }
}</pre><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span class="span4br"></span></p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-5%E3%80%81DispatchConf%E7%B1%BB"></a>5、DispatchConf类</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;dispatch调度部分相关配置，包括测试报告默认输出目录、测试报告默认标题等</p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-6%E3%80%81ExecTask%E7%B1%BB"></a>6、ExecTask类</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;调度部分的入口，执行测试任务类，通过public void setRunInfo(TestRunInfo runInfo)方法设置任务配置信息，执行public TestReport Exec()方法，执行任务，返回测试报告类</p><h2 style="padding:0px 0px 2px;font-size:1.6em;margin:2em 0px 0.5em;border-bottom-color:#919699;border-bottom-width:1px;border-bottom-style:solid;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E4%BA%8C%E3%80%81toolkit%E5%8C%85"></a>二、toolkit包</h2><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;工具包，包括json、xml、file、String、sftp、mysql、dbunit、httpclient、动态编译、通用签名算法等处理，详细见javadoc，在此不再详述</p><h3 style="padding:0px;font-size:1.4em;margin:1.5em 0px 0.5em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E4%B8%89%E3%80%81ift%E5%8C%85"></a>三、ift包</h3><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;对接口参数构造、用例格式处理等封装，主要类如下：</p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-1%E3%80%81CasesUtils%E5%9F%BA%E7%B1%BB%EF%BC%8C"></a>1、CasesUtils基类，</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;用例执行的公共处理类，执行粒度是一个IftTestCase 即Excel用例文件中的一条用例，或Mysql数据库中的一条用例。每个业务中 ，处理业务逻辑的类要继承此类，通过重写已有方法，实现业务特性。</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;下面的代码是最基础的调用</p><pre class="brush:java;toolbar:false;">public class DemoCasesUtils extends CasesUtils{
         
    /**
     * 接口业务逻辑处理方法，此方式的传入参数是 IftTestCase  返回结果类型是IFtResultInfo 方法中如何处理业务逻辑
     * 调用httpclient发起请求，处理返回结果等可自定义
     * @param testcase
     * @return IFtResultInfo
     */
    public IFtResultInfo DemoMethod1(IftTestCase testcase)  {
        //暂停100毫秒
//      BaseTools.sleep(100);
        //设置用例编码--可选
        testcase.setEnCoding(DemoConf.ENCODING);
        //设置用例使用的header信息--可选
        testcase.setHeaderMap(new TreeMap&lt;String,String&gt;());
        //更新用例的签名计算、url参数、form参数、header参数--必须
        //是接口参数的父集
        testcase=updateAllToListForCase(testcase, DemoConf.GetPara, DemoConf.PostPara, DemoConf.HeardPara);
        //更新用例参数值，针对rand等特殊标识处理--必须
        testcase=updateAllParaForCase(testcase,10);
        //更新用例签名值--可选  如果无需计算签名  则不需要
        testcase=updateSignValueForCase(testcase, CommonSign.signMethodThird(getSignMap(testcase), DemoConf.SecretKey));
        //发起请求
        ResponseInfo resInfo = execResquest(testcase);
        //预期结果格式为key1=value1&amp;key2=value2  或key1=value11#value12&amp;key2=value2 支持一个可以对应多个值
        String expRes=testcase.getCaseMap().get("Expres");
        if (expRes=="" || null==expRes) {
            expRes="预期结果为空";
        }
        //获取处理后的实际结果 目前只支持json\xml格式  如果接口返回结果不是此两种格式 则需要把actRes转换为json或xml格式
        String actRes= resInfo.getResBodyInfo();
        //预期值与实际值比对 并返回IFtResultInfo类型
        return getIFtResultInfo(resInfo, expRes, actRes);
    }
}</pre><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span class="span4br"></span></p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-2%E3%80%81IFtResultInfo%E7%B1%BB"></a>2、IFtResultInfo类</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;自定义返回结果信息，包括预期与实际比对结果</p><pre class="brush:java;toolbar:false;">private ResponseInfo responseInfo;//http请求的返回信息
private String expRes;//预期结果信息
private String actRes;//整理后的实际结果信息
private boolean compareRes;//预期与实际的比对结果  true或false</pre><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-3%E3%80%81testcase%E5%8C%85"></a>3、testcase包</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;包内是对用例文件的处理，从Excel中读取用例数据，转换为IftTestCase类<span class="span4br"></span> &nbsp; &nbsp; &nbsp; &nbsp;IftTestCase类是个标准的JavaBean类，主要属性如下：</p><pre class="brush:java;toolbar:false;">private String url;//发起请求的url地址
private String httpMethod;//请求的方法
private int argCount;   //参与签名计算的参数个数
private String enCoding;//编码
private String casesetName;//测试集名称
private String templatePath;//使用的模板存储位置
private String cookie;//此用例的cookie信息
private String secretKey;//参与签名计算的密钥
private String signKey;//标识签名值参数的key值
private boolean signFlag;//标识是否计算签名,true--需要签名，false不需要签名
private LinkedHashMap&lt;String,String&gt; caseMap;//所有键值对信息
private List&lt;String&gt; paralist;//get请求的参数项列表
private List&lt;String&gt; formlist;//post请求的参数项列表
private List&lt;String&gt; signlist;//参与签名计算的参数项列表
private List&lt;String&gt; headerlist;//header的参数项列表
private TreeMap&lt;String, String&gt; headerMap;//发起请求时使用的header信息
private Map&lt;String, String&gt; results;//依据此用例发起请求后返回的结果串
         
private String caseId;//用例的ID标识
private String testPoint;//测试点</pre><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span class="span4br"></span></p><h5 style="padding:0px;font-size:1.1em;margin:1em 0px 0.1em;font-family:helvetica, arial, sans-serif;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E4%BB%A3%E7%A0%81%E7%BB%93%E6%9E%84%E8%AF%A6%E8%BF%B0%EF%BC%88%E5%9B%9B%EF%BC%89-4%E3%80%81autocreate%E5%8C%85"></a>4、autocreate包</h5><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;是testcase包的子包，实现dispatch包中ICase接口，继承自LEO框中的基类SuperCase，实现接口类数据文件(Excel)到测试用例文件java的生成</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">..........</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"> &nbsp; &nbsp; &nbsp; &nbsp;其余类可查看框架的javadoc或源码，注释很详细的</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>316</wp:post_id>
		<wp:post_date>2014-02-26 15:30:47</wp:post_date>
		<wp:post_date_gmt>2014-02-26 07:30:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>qtaf%e6%8e%a5%e5%8f%a3%e8%87%aa%e5%8a%a8%e5%8c%96%e6%a1%86%e6%9e%b6-%e6%a1%86%e6%9e%b6%e4%b8%bb%e8%a6%81%e6%ba%90%e7%a0%81%e8%af%a6%e8%bf%b0%ef%bc%88%e5%9b%9b%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>CentOS下创建RSA的公钥和私钥</title>
		<link>http://localhost/wp/?p=321</link>
		<pubDate>Tue, 14 Jan 2014 08:21:47 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=321</guid>
		<description></description>
		<content:encoded><![CDATA[<p><span style="font-family:tahoma;font-size:14px;line-height:24px;">生成私钥：　openssl genrsa -out pri.key 1024</span><br style="margin:0px;padding:0px;font-family:tahoma;font-size:14px;line-height:24px;" /><span style="font-family:tahoma;font-size:14px;line-height:24px;">生成公钥：　openssl rsa -in pri.key -pubout &gt; pub.key</span></p><p><span style="font-family:tahoma;font-size:14px;line-height:24px;"><span class="span4br"></span></span></p><p><span style="font-family:tahoma;font-size:14px;line-height:24px;">解密示例PHP代码</span></p><p><span style="font-family:tahoma;font-size:14px;line-height:24px;"></span></p><pre class="brush:php;toolbar:false;">$fp = fopen('./pri.key', "r");
$priv_key = fread($fp, 8192); fclose($fp);
$pkeyid = openssl_get_privatekey($priv_key);
   
$test_result = '加密的文本串';
   
$result='';
$ret = openssl_private_decrypt(base64_decode($test_result), $result, $pkeyid, OPENSSL_PKCS1_OAEP_PADDING);
echo $result;</pre><p><span style="font-family:tahoma;font-size:14px;line-height:24px;"><span class="span4br"></span></span><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>321</wp:post_id>
		<wp:post_date>2014-01-14 16:21:47</wp:post_date>
		<wp:post_date_gmt>2014-01-14 08:21:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>centos%e4%b8%8b%e5%88%9b%e5%bb%barsa%e7%9a%84%e5%85%ac%e9%92%a5%e5%92%8c%e7%a7%81%e9%92%a5</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="net"><![CDATA[网络通信]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>【转发】ASCII编码字符对应表--参考自http://17de.com/library/C/ascii.html</title>
		<link>http://localhost/wp/?p=325</link>
		<pubDate>Wed, 15 Jan 2014 06:11:56 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=325</guid>
		<description></description>
		<content:encoded><![CDATA[<h3 style="font-family:simsun;"><span style="color:#0000ff;">参考自：http://17de.com/library/C/ascii.html</span></h3><h3 style="font-family:simsun;"><span style="color:#0000ff;">ASCII 编码</span></h3><p style="font-family:simsun;font-size:13px;">数字代表计算机的语言。您的计算机如何使用字母来与程序和其他计算机进行通信？一种方法是把字符集<span class="AsstInlineDefText"> （字符集：一组共享一些关系的字母、数字和其他字符。例如，标准 ASCII 字符集包括字母、数字、符号和组成 ASCII 代码方案的控制代码。）</span>转换为数字形式。</p><p style="font-family:simsun;font-size:13px;">在 20 世纪 60 年代，标准化的需要带来了美国标准信息交换码 (ASCII)<span class="AsstInlineDefText"> （ASCII：将英语中的字符表示为数字的代码。为每个字符分配一个介于 0 到 127 之间的数字。大多数计算机都使用 ASCII 表示文本和在计算机之间传输数据。）</span>（发音为 ask-kee）。ASCII 表包含 128 个数字，分配给了相应的字符<span class="AsstInlineDefText"> （字符：字母、数字、标点或符号。）</span>。ASCII 为计算机提供了一种存储数据和与其他计算机及程序交换数据的方式。</p><h3 style="font-family:simsun;">ASCII 非打印控制字符</h3><p style="font-family:simsun;font-size:13px;">ASCII 表上的数字 0–31 分配给了控制字符，用于控制像打印机等一些外围设备。例如，12 代表换页/新页功能。此命令指示打印机跳到下一页的开头。</p><p style="font-family:simsun;font-size:13px;">ASCII 非打印控制字符表</p><p><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="font-family:simsun;font-size:13px;display:block;"><span class="span4br"></span></span></p><pre class="brush:xml;toolbar:false;">0   空   
1   头标开始    
2   正文开始    
3   正文结束    
4   传输结束    
5   查询  
6   确认  
7   震铃  
8   backspace   
9   水平制表符   
10  换行/新行   
11  竖直制表符   
12  换页/新页   
13  回车  
14  移出  
15  移入  
16  数据链路转意  
17  设备控制 1  
18  设备控制 2  
19  设备控制 3  
20  设备控制 4  
21  反确认 
22  同步空闲    
23  传输块结束   
24  取消  
25  媒体结束    
26  替换  
27  转意  
28  文件分隔符   
29  组分隔符    
30  记录分隔符   
31  单元分隔符</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p><h3 style="font-family:simsun;">ASCII 打印字符</h3><p style="font-family:simsun;font-size:13px;">数字 32–126 分配给了能在键盘上找到的字符，当您查看或打印文档时就会出现。数字 127 代表 DELETE 命令。</p><p style="font-family:simsun;font-size:13px;">ASCII 打印字符表</p><p><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="font-family:simsun;font-size:13px;display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="display:block;"><span class="ACECollapsed" border="0" id="divExpCollAsst_3" style="display:block;"></span></span></span></p><pre class="brush:xml;toolbar:false;">32    space   64    @       96    `
33    !       65    A       97    a
34    "       66    B       98    b
35    #       67    C       99    c
36    $       68    D       100   d
37    %       69    E       101   e
38    &amp;       70    F       102   f
39    '       71    G       103   g
40    (       72    H       104   h
41    )       73    I       105   i
42    *       74    J       106   j
43    +       75    K       107   k
44    ,       76    L       108   l
45    -       77    M       109   m
46    .       78    N       110   n
47    /       79    O       111   o
48    0       80    P       112   p
49    1       81    Q       113   q
50    2       82    R       114   r
51    3       83    S       115   s
52    4       84    T       116   t
53    5       85    U       117   u
54    6       86    V       118   v
55    7       87    w       119   w
56    8       88    X       120   x
57    9       89    Y       121   y
58    :       90    Z       122   z
59    ;       91    [       123   {
60    &lt;       92    \       124   |
61    =       93    ]       125   }
62    &gt;       94    ^       126   ~
63    ?       95    _       127   DEL</pre><p><span class="ACECollapsed" border="0" id="divExpCollAsst_1" style="font-family:simsun;font-size:13px;display:block;"><span class="span4br"></span></span><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>325</wp:post_id>
		<wp:post_date>2014-01-15 14:11:56</wp:post_date>
		<wp:post_date_gmt>2014-01-15 06:11:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e3%80%90%e8%bd%ac%e5%8f%91%e3%80%91ascii%e7%bc%96%e7%a0%81%e5%ad%97%e7%ac%a6%e5%af%b9%e5%ba%94%e8%a1%a8-%e8%bd%ac%e8%87%aahttp17de-comlibrarycascii-html</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<category domain="category" nicename="os"><![CDATA[操作系统]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：shell的种类</title>
		<link>http://localhost/wp/?p=337</link>
		<pubDate>Mon, 10 Feb 2014 02:35:05 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=337</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：http://waterlife.blog.sohu.com/10439596.html</p><p><span class="span4br"></span></p><p>一、查看当前所使用的shell类型</p><p><span class="span4br"></span></p><p>　　用户可以用 echo 命令来查看自己的shell类型：</p><p><span class="span4br"></span></p><p>[root@linuxserver root]# echo $SHELL</p><p>/bin/bash </p><p>[root@linuxserver root]#</p><p><span class="span4br"></span></p><p>　　$SHELL是一个环境变量，它记录用户所使用的shell类型。</p><p><span class="span4br"></span></p><span class="span4br"></span><p><span class="span4br"></span></p><p>二、切换shell</p><p><span class="span4br"></span></p><p>　　可以用如下命令来临时转换到别的shell：</p><p>　　　　# shellname</p><p><span class="span4br"></span></p><p>　　这里shellname是你想要尝试使用的shell的名称，如ash等。这个命令为用户又启动了一个shell，这个shell在最初登录的那个shell之后，称为下级的shell或子shell。</p><p><span class="span4br"></span></p><p>　　使用命令：</p><p>　　　　# exit</p><p>　　可以退出这个子shell。</p><p><span class="span4br"></span></p><p>　　要想更改用户的默认SHELL，可使用：</p><p>　　　　chsh [-s shell] [username]</p><p><span class="span4br"></span></p><p>三、常用shell</p><p><span class="span4br"></span></p><p>　　查看/etc/shells文件可得到系统中可用的shell的完整路径。</p><p><span class="span4br"></span></p><p>[root@linuxserver root]# cat /etc/shells</p><p>/bin/sh</p><p>/bin/bash</p><p>/sbin/nologin</p><p>/bin/bash2</p><p>/bin/ash</p><p>/bin/bsh</p><p>/bin/tcsh</p><p>/bin/csh</p><p>[root@linuxserver root]#</p><p><span class="span4br"></span></p><p>　　目前流行的shell有ash、bash、ksh、csh、zsh等，使用不同的shell的原因在于它们各自都有自己的特点，下面作一个简单的介绍：</p><p><span class="span4br"></span></p><p>　　1.ash</p><p><span class="span4br"></span></p><p>　　ash shell是由Kenneth Almquist编写的，Linux中占用系统资源最少的一个小shell，它只包含24个内部命令，因而使用起来很不方便。</p><p><span class="span4br"></span></p><p>　　2.bash</p><p><span class="span4br"></span></p><p>　　bash是Linux系统默认使用的shell，它由Brian Fox和Chet Ramey共同完成，是Bourne Again Shell的缩写，内部命令一共有40个（可使用help命令查看）。Linux使用它作为默认的shell是因为它有诸如以下的特色：</p><p><span class="span4br"></span></p><p>可以使用类似DOS下面的doskey的功能，用方向键查阅和快速输入并修改命令。</p><p>自动通过查找匹配的方式给出以某字符串开头的命令。</p><p>包含了自身的帮助功能，你只要在提示符下面键入help就可以得到相关的帮助。</p><p>　　3.ksh</p><p><span class="span4br"></span></p><p>　　ksh是Korn shell的缩写，由Eric Gisin编写，共有42条内部命令。该shell最大的优点是几乎和商业发行版的ksh完全兼容，这样就可以在不用花钱购买商业版本的情况下尝试商业版本的性能了。</p><p><span class="span4br"></span></p><p>　　4.csh</p><p><span class="span4br"></span></p><p>　　csh是Linux比较大的内核，它由以William Joy为代表的共计47位作者编成，共有52个内部命令。该shell其实是指向/bin/tcsh这样的一个shell，也就是说，csh其实就是tcsh。</p><p><span class="span4br"></span></p><p>　　5.zch</p><p><span class="span4br"></span></p><p>　　zch是Linux最大的shell之一，由Paul Falstad完成，共有84个内部命令。如果只是一般的用途，是没有必要安装这样的shell的。</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>337</wp:post_id>
		<wp:post_date>2014-02-10 10:35:05</wp:post_date>
		<wp:post_date_gmt>2014-02-10 02:35:05</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ashell%e7%9a%84%e7%a7%8d%e7%b1%bb</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="os"><![CDATA[操作系统]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>java版常见排序算法(插入排序、冒泡排序、选择排序等)</title>
		<link>http://localhost/wp/?p=339</link>
		<pubDate>Wed, 19 Feb 2014 04:39:00 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=339</guid>
		<description></description>
		<content:encoded><![CDATA[<pre class="brush:java;toolbar:false;">/**
 * 
 */
package cn.baiweigang.tools;
 
/**
 * @author @&lt;a href='http://weibo.com/bwgang'&gt;bwgang&lt;/a&gt;&lt;br/&gt;
 * 
 */
public class TestPaiXu {
 
    /**
     * @param args
     */
    public static void main(String[] args) {
        int[] arr = { 1, 3, 5, 7, 9, 2, 4, 6, 8, 0};
        // 插入排序(arr);
//      冒泡排序(arr);
//      选择排序(arr);
        快速排序(arr,0,arr.length-1);
        for (int i = 0; i &lt; arr.length; i++) {
            System.out.print(arr[i] + ",");
        }
    }
 
    /**
     *  插入排序是这样实现的：&lt;/br&gt;
        首先新建一个空列表，用于保存已排序的有序数列（我们称之为"有序列表"）。&lt;/br&gt;
        从原数列中取出一个数，将其插入"有序列表"中，使其仍旧保持有序状态。&lt;/br&gt;
        重复2号步骤，直至原数列为空。&lt;/br&gt;
        插入排序的平均时间复杂度为平方级的，效率不高，但是容易实现。&lt;/br&gt;
        它借助了"逐步扩大成果"的思想，使有序列表的长度逐渐增加，直至其长度等于原列表的长度。
     * @param num
     */
    public static void 插入排序(int[] num) {
        int temp, i, j;
        for (j = 1; j &lt; num.length; j++) { // 插入排序方法
            temp = num[j];
            i = j;
            while (i &gt; 0 &amp;&amp; num[i - 1] &gt;= temp) {// 和前一个元素比较，直到找到位置
                num[i] = num[i - 1];
                i--;
            }
            num[i] = temp;
        }
    }
 
    /**
     *  冒泡排序是这样实现的：&lt;/br&gt;
        首先将所有待排序的数字放入工作列表中。&lt;/br&gt;
        从列表的第一个数字到倒数第二个数字，逐个检查：若某一位上的数字大于他的下一位，则将它与它的下一位交换。&lt;/br&gt;
        重复2号步骤，直至再也不能交换。&lt;/br&gt;
        冒泡排序的平均时间复杂度与插入排序相同，也是平方级的，但也是非常容易实现的算法。&lt;/br&gt;
     * @param num
     */
    public static void 冒泡排序(int[] num) {
        int temp;
        for (int i = 0; i &lt; num.length; i++) {
            // 对当前无序区间[0......length-i-1]进行排序(j的范围很关键，这个范围是在逐步缩小的)
            for (int j = 0; j &lt; num.length - i - 1; j++) {
                // 把值小的替换到前面
                if (num[j] &gt; num[j + 1]) {
                    temp = num[j];
                    num[j] = num[j + 1];
                    num[j + 1] = temp;
                }
            }
        }
    }
 
    /**
     *  选择排序是这样实现的：&lt;/br&gt;
        设数组内存放了n个待排数字，数组下标从1开始，到n结束。&lt;/br&gt;
        i=1&lt;/br&gt;
        从数组的第i个元素开始到第n个元素，寻找最小的元素。&lt;/br&gt;
        将上一步找到的最小元素和第i位元素交换。&lt;/br&gt;
        如果i=n－1算法结束，否则回到第3步&lt;/br&gt;
        选择排序的平均时间复杂度也是O(n&amp;sup2;)的。&lt;/br&gt;
        举例：&lt;/br&gt;
        564&lt;/br&gt;
        比如说这个，我想让它从小到大排序，怎么做呢？&lt;/br&gt;
        第一步：从第一位开始找最小的元素，564中4最小，与第一位交换。结果为465&lt;/br&gt;
        第二步：从第二位开始找最小的元素，465中5最小，与第二位交换。结果为456&lt;/br&gt;
        第三步：i=2，n=3，此时i=n-1，算法结束&lt;/br&gt;
     * @param num
     */
    public static void 选择排序(int[] num) {
        int temp = 0;
        int min = 0;
        for (int i = 0; i &lt; num.length-1; i++) {
            min = i;            
            //第i个元素开始到n，查找最小元素
            for (int j = i + 1; j &lt; num.length; j++) {
                if (num[min] &gt; num[j])min = j;                   
            }
            //找到的最小元素和第i位元素交换
            if(min != i){
                temp = num[min];
                num[min] = num[i];
                num[i] = temp;
            }
        }
    }
 
    /**
     * 快速排序是所有排序算法中最高效的一种。
     * 它采用了分治的思想：先保证列表的前半部分都小于后半部分，然后分别对前半部分和后半部分排序，这样整个列表就有序了。
     * 这是一种先进的思想，也是它高效的原因。
     * 因为在排序算法中，算法的高效与否与列表中数字间的比较次数有直接的关系，而"保证列表的前半部分都小于后半部分"就使得前半部分的任何一个数从此以后都不再跟后半部分的数进行比较了，大大减少了数字间不必要的比较。但查找数据得另当别论了。
     * @param num
     * @param start
     * @param end
     */
    public static  void 快速排序(int[] num,
            int start, int end) {
     
       int i =  start, j = end;
       int key = num[start];
         
       while(i &lt; j) {
           //按 j -- 方向遍历目标数组，直到比 key 小的值为止
           while(j &gt; i &amp;&amp; num[j]&gt;= key) {
               j --;
           }
            
           if(i &lt; j) {
               // targetArr[i] 已经保存在key中，可将后面的数填入
               num[i] = num[j];
           }
            
           //按 i ++ 方向遍历目标数组，直到比 key 大的值为止
           while(i &lt; j &amp;&amp; num[i] &lt; key) {
               i ++;
           }
            
           if(i &lt; j) {
               // targetArr[j] 已保存在targetArr[i]中，可将前面的值填入
               num[j] = num[i];
           }
       }       
       // 此时 i == j
       num[i] = key;
         
       if(i - start &gt; 1) {
           // 递归调用，把key前面的完成排序
           快速排序(num, start, i - 1);
       }
       if(end - j &gt; 1) {
           // 递归调用，把key后面的完成排序
           快速排序(num, j + 1, end);
       }
   }
}</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>339</wp:post_id>
		<wp:post_date>2014-02-19 12:39:00</wp:post_date>
		<wp:post_date_gmt>2014-02-19 04:39:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>java%e7%89%88%e5%b8%b8%e8%a7%81%e6%8e%92%e5%ba%8f%e7%ae%97%e6%b3%95%e6%8f%92%e5%85%a5%e6%8e%92%e5%ba%8f%e3%80%81%e5%86%92%e6%b3%a1%e6%8e%92%e5%ba%8f%e3%80%81%e9%80%89%e6%8b%a9%e6%8e%92%e5%ba%8f</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>QTAF接口自动化框架–从零开始构建接口测试（三）tt</title>
		<link>http://localhost/wp/?p=343</link>
		<pubDate>Wed, 26 Feb 2014 06:21:59 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=343</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#555555;">前提：</span></p><ul style="font-size:13px;line-height:17.33333396911621px;color:#333333;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">本地的jdk1.7+、maven环境已部署OK</span></p></li><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">Example项目可成功运行</span></p></li></ul><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#555555;">接下来就可以创建自己的接口测试maven项目了，也可以直接在Example项目上修改</span></p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#555555;">下面以新建一maven项目为例说明</span></p><h2 style="padding:0px 0px 2px;font-size:1.6em;margin:2em 0px 0.5em;border-bottom-color:#919699;border-bottom-width:1px;border-bottom-style:solid;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BA%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95%EF%BC%88%E4%B8%89%EF%BC%89-"></a><span style="color:#555555;">一、整理待测接口信息</span></h2><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#555555;">在这儿以微信公众平台的某一接口为例，接口信息见页面： </span><span style="color:#555555;"><a href="http://mp.weixin.qq.com/wiki/index.php?title=%E8%8E%B7%E5%8F%96access_token" class="external-link" rel="nofollow" style="color:#006daf;text-decoration:none;">http://mp.weixin.qq.com/wiki/index.php?title=获取access_token</a></span><span style="color:#555555;"> </span></p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#555555;">整理后接口信息如下：</span></p><ul style="font-size:13px;line-height:17.33333396911621px;color:#333333;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">1、接口地址：</span>https://api.weixin.qq.com/cgi-bin/token<span style="color:#555555;">? &nbsp;注意最后的?号要带着，LEO下一版本将兼容此问题</span></p></li><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">2、http请求方式：Get </span></p></li><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">3、cookie：无需处理 cookie留空</span></p></li><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">4、签名：无需处理，ArgCount设置为0</span></p></li><li style="font-size:13px;line-height:17px;margin:0px;padding:0px;"><p><span style="color:#555555;">5、参数：有3个参数 </span></p></li></ul><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#ff0000;"><strong>注意：CaseID和Excel表的sheet命名要满足java命名规范，且CaseID不能重复</strong></span></p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;"><span style="color:#555555;">最终用例Excel内容如下图：保存Excel--&gt; Demo测试用例.xlsx</span></p><p style="text-align:left;"><img src="http://bcs.duapp.com/bwgang/%2F333-2.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:BDcYxaX8Twipa355M2kXQjYVk08%3D" style="float:none;" border="0" hspace="0" vspace="0" /><span class="span4br"></span></p><p style="text-align:left;"><span class="span4br"></span></p><p style="text-align:left;">二、创建maven项目</p><p style="text-align:left;">1、打开eclipse，选择新建--项目---Maven---Maven Project</p><p style="text-align:left;">2、选择项目保存磁盘目录，或使用默认项</p><p style="text-align:left;">3、在【Select an Archetype】时，选择“Maven-archetype-quickstart”如下图，之后点击下一步</p><p style="text-align:left;"><img src="http://bcs.duapp.com/bwgang/%2F333-3.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:HN22tYgVJRAkMDbVa%2BsEX0eX%2Fmk%3D" style="float:none;" border="0" hspace="0" vspace="0" /><span class="span4br"></span></p><p style="text-align:left;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;">4、Group Id和Aritifact Id自定义输入，此实例中输入：</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;">Group Id：cn.baiweigang.test</span><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span style="color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;">Aritifact Id：</span>DemoWeiXinAPI<span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;">点击【完成】后，maven项目创建完毕，其项目代码结构如下图：</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><img src="http://bcs.duapp.com/bwgang/%2F333-4.png?sign=MBO:q9vgAK0wg3gRRGYc9G6ZHVAG:%2BzoHvREkn4D9CeasGy0%2BYsTTGNA%3D" style="float:none;" border="0" hspace="0" vspace="0" /><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;">三、</p><p style="padding:0px;color:#555555;font-family:verdana, &#39;bitstream vera sans&#39;, tahoma, helvetica, sans-serif;font-size:12px;line-height:17px;background-color:#ffffff;margin-top:0px;margin-bottom:10px;"><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>343</wp:post_id>
		<wp:post_date>2014-02-26 14:21:59</wp:post_date>
		<wp:post_date_gmt>2014-02-26 06:21:59</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>qtaf%e6%8e%a5%e5%8f%a3%e8%87%aa%e5%8a%a8%e5%8c%96%e6%a1%86%e6%9e%b6-%e4%bb%8e%e9%9b%b6%e5%bc%80%e5%a7%8b%e6%9e%84%e5%bb%ba%e6%8e%a5%e5%8f%a3%e6%b5%8b%e8%af%95%ef%bc%88%e4%b8%89%ef%bc%89tt</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>除LR之外的web压测工具ab和siege</title>
		<link>http://localhost/wp/?p=405</link>
		<pubDate>Fri, 28 Feb 2014 06:24:41 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=405</guid>
		<description></description>
		<content:encoded><![CDATA[<p>apache ab </p><p>siege </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>405</wp:post_id>
		<wp:post_date>2014-02-28 14:24:41</wp:post_date>
		<wp:post_date_gmt>2014-02-28 06:24:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e9%99%a4lr%e4%b9%8b%e5%a4%96%e7%9a%84web%e5%8e%8b%e6%b5%8b%e5%b7%a5%e5%85%b7ab%e5%92%8csiege</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>QTAF接口自动化框架–框架技术要点(五)</title>
		<link>http://localhost/wp/?p=407</link>
		<pubDate>Tue, 04 Mar 2014 10:25:41 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=407</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">罗列下LEO框架中用到的：</p><h3 style="padding:0px;font-size:1.4em;margin:1.5em 0px 0.5em;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E8%A6%81%E7%82%B9%28%E4%BA%94%29-%E4%B8%80%E3%80%81%E9%85%8D%E7%BD%AE%E7%B1%BB%E6%96%87%E4%BB%B6%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA"></a>一、配置类文件自动创建</h3><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">包括生成java测试用例模板、log4j配置文件、接口配置文件等，打包发布后存储在LEO.jar根目录，当使用LEO框架的项目中，第一次执行或误删除配置文件后，会自行判断，并从jar包内提取出默认配置文件，拷贝到相应目录内</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">从jar包内的路径提取资源文件代码主要如下：此方法判断输出Html报告样式模板文件【testng-results.xsl】，如果不存在，则创建一份。</p><div class="code panel" style="padding:0px;margin:0px 0px 10px;background-color:#ffffff;border:1px dashed #bbbbbb;overflow:auto;border-top-left-radius:5px;border-top-right-radius:5px;border-bottom-right-radius:5px;border-bottom-left-radius:5px;font-family:helvetica, arial, sans-serif;font-size:13px;line-height:17.33333396911621px;"><div class="codeContent panelContent" style="background-image:none;color:#333333;margin:0px;padding:0px 10px;font-size:0.95em;"><pre class="code-java" style="padding:0px;overflow:auto;font-family:&#39;courier new&#39;, courier, monospace;line-height:1.3;margin-top:0px;margin-bottom:0px;">/**
	 * 写配置文件，如果不存在则创建
	 * @<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> 已存在或创建失败时返回false  创建成功返回true
	 */
	<span class="code-keyword" style="color:#000091;background-color:inherit;">public</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> writeConf() {
		<span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (!<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> File(DispatchConf.TestNGXsltFile).exists()) {
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span> copyFile(DispatchConf.class.getResourceAsStream(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;/testng-results.xsl&quot;</span>),<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> File(TestNGXsltFile));
		}
		<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
	}</pre></div></div><h3 style="padding:0px;font-size:1.4em;margin:1.5em 0px 0.5em;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E8%A6%81%E7%82%B9%28%E4%BA%94%29-%E4%BA%8C%E3%80%81%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F"></a>二、单例模式</h3><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">接口类用例执行速度很快，一般测试业务用例数在5000之内，暂时不需要分布式或并发执行用例，因此封装TestNG执行类时，使用了单例模式</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">主要代码如下，详细见类TestngRunSingle源码</p><div class="code panel" style="padding:0px;margin:0px 0px 10px;background-color:#ffffff;border:1px dashed #bbbbbb;overflow:auto;border-top-left-radius:5px;border-top-right-radius:5px;border-bottom-right-radius:5px;border-bottom-left-radius:5px;font-family:helvetica, arial, sans-serif;font-size:13px;line-height:17.33333396911621px;"><div class="codeContent panelContent" style="background-image:none;color:#333333;margin:0px;padding:0px 10px;font-size:0.95em;"><pre class="code-java" style="padding:0px;overflow:auto;font-family:&#39;courier new&#39;, courier, monospace;line-height:1.3;margin-top:0px;margin-bottom:0px;"><span class="code-keyword" style="color:#000091;background-color:inherit;">public</span> class TestngRunSingle {
	<span class="code-keyword" style="color:#000091;background-color:inherit;">private</span> LogUtil log=LogUtil.getLogger(TestngRunSingle.class);<span class="code-comment" style="color:#808080;background-color:inherit;">//日志记录</span><span class="code-keyword" style="color:#000091;background-color:inherit;">private</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span> TestngRunSingle single;
	<span class="code-keyword" style="color:#000091;background-color:inherit;">private</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> Flag;<span class="code-comment" style="color:#808080;background-color:inherit;">//是否运行任务标识，为true时有任务在运行，false时无任务运行</span><span class="code-keyword" style="color:#000091;background-color:inherit;">private</span> TestRunInfo runInfo ;<span class="code-comment" style="color:#808080;background-color:inherit;">//任务名称</span><span class="code-keyword" style="color:#000091;background-color:inherit;">private</span> TestReport testReport;<span class="code-comment" style="color:#808080;background-color:inherit;">//执行完毕后，返回的测试报告信息</span><span class="code-comment" style="color:#808080;background-color:inherit;">//设置为单例模式</span><span class="code-keyword" style="color:#000091;background-color:inherit;">private</span> TestngRunSingle()
	{
		setFlag(<span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>);
		init();<span class="code-comment" style="color:#808080;background-color:inherit;">//第一次创建时，初始化属性</span>	}

	/**
	 * 运行前初始化相关信息
	 */
	<span class="code-keyword" style="color:#000091;background-color:inherit;">private</span> void init(){
		log.info(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;TestNG执行实例创建&quot;</span>);
		runInfo=<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> TestRunInfo();
		testReport=<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> TestReport();
	}

	/**
	 * 获取类的实例
	 * @<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span> TestngRunSingle
	 */
	<span class="code-keyword" style="color:#000091;background-color:inherit;">public</span><span class="code-keyword" style="color:#000091;background-color:inherit;">synchronized</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span> TestngRunSingle getInstance() {
	      <span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (single == <span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>) {
	          single = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> TestngRunSingle();
	      }
	     <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span> single;
	}
......
}</pre></div></div><h3 style="padding:0px;font-size:1.4em;margin:1.5em 0px 0.5em;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E8%A6%81%E7%82%B9%28%E4%BA%94%29-%E4%B8%89%E3%80%81java%E4%BB%A3%E7%A0%81%E4%B8%AD%E8%B0%83%E7%94%A8testNgXslt%E6%8F%92%E4%BB%B6%EF%BC%8C%E4%BC%98%E5%8C%96Html%E6%8A%A5%E5%91%8A%E8%BE%93%E5%87%BA"></a>三、java代码中调用testNgXslt插件，优化Html报告输出</h3><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">因为使用了Maven管理项目，如果继续使用ant方式调用testNgXslt插件，会导致框架此部分维护更新困难，因此改用java代码方式直接把xml文件转换成html站点，使用的还是testNgXslt插件和javax.xml.transform等完成转换。</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">主要代码如下：</p><div class="code panel" style="padding:0px;margin:0px 0px 10px;background-color:#ffffff;border:1px dashed #bbbbbb;overflow:auto;border-top-left-radius:5px;border-top-right-radius:5px;border-bottom-right-radius:5px;border-bottom-left-radius:5px;font-family:helvetica, arial, sans-serif;font-size:13px;line-height:17.33333396911621px;"><div class="codeContent panelContent" style="background-image:none;color:#333333;margin:0px;padding:0px 10px;font-size:0.95em;"><pre class="code-java" style="padding:0px;overflow:auto;font-family:&#39;courier new&#39;, courier, monospace;line-height:1.3;margin-top:0px;margin-bottom:0px;">	/**
	 * 根据TestNG结果输出的xml文件，优化生成html格式测试报告
	 * @param  tngOutFilePath  TestNG的结果xml文件路径
	 * @param  htmlReportPath html报告的目录
	 * @param  htmlReportTitle 测试报告标题
	 * @<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> 创建成功返回true
	 */
	<span class="code-keyword" style="color:#000091;background-color:inherit;">public</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> createHtmlReport(<span class="code-object" style="color:#910091;background-color:inherit;">String</span> tngOutFilePath,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> htmlReportPath,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> htmlReportTitle) {
		<span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (!FileUtil.isExist(tngOutFilePath) ) {
			log.error(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;生成Html报告出错-testng输出的xml文件不存在：&quot;</span>+tngOutFilePath);
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}
		<span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (!FileUtil.createDictory(htmlReportPath)){
			log.error(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;生成Html报告出错-输出目录创建失败：&quot;</span>+htmlReportPath);
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}
		 <span class="code-keyword" style="color:#000091;background-color:inherit;">try</span> {
			 Source xml = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> javax.xml.transform.stream.StreamSource(tngOutFilePath);
			 Source xsl = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> javax.xml.transform.stream.StreamSource(DispatchConf.TestNGXsltFile);
			 Result out = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> StreamResult(<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> BufferedOutputStream(<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> FileOutputStream(htmlReportPath+<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;/index.html&quot;</span>)));
			  <span class="code-comment" style="color:#808080;background-color:inherit;">// 创建转换器工厂</span>			  TransformerFactory tfactory = TransformerFactory.newInstance();
			  <span class="code-comment" style="color:#808080;background-color:inherit;">// 创建 XSL 转换器</span>			  Transformer transformer = tfactory.newTransformer(xsl);
			  <span class="code-comment" style="color:#808080;background-color:inherit;">//参数设置</span>			  transformer.setParameter(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;testNgXslt.outputDir&quot;</span>,htmlReportPath);
			<span class="code-comment" style="color:#808080;background-color:inherit;">//transformer.setParameter(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;testNgXslt.showRuntimeTotals&quot;</span>, <span class="code-keyword" style="color:#000091;background-color:inherit;">true</span>);</span>			  transformer.setParameter(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;testNgXslt.reportTitle&quot;</span>, htmlReportTitle);
			  transformer.transform(xml, out);
			  log.info(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;生成Html测试报告成功：&quot;</span>+htmlReportPath+<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;/index.html&quot;</span>);
			  <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">true</span>;
		} <span class="code-keyword" style="color:#000091;background-color:inherit;">catch</span> (Exception e) {
			log.error(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;生成Html报告出错-xml转换异常：&quot;</span>+e.getMessage());
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}</pre></div></div><h3 style="padding:0px;font-size:1.4em;margin:1.5em 0px 0.5em;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E8%A6%81%E7%82%B9%28%E4%BA%94%29-%E5%9B%9B%E3%80%81java%E7%94%A8%E4%BE%8B%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90"></a>四、java用例自动生成</h3><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">使用第三方开源模板工具FreeMaker，根据预先编写好的测试用例模板+Excel测试数据=java测试用例</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">主要代码如下:</p><div class="code panel" style="padding:0px;margin:0px 0px 10px;background-color:#ffffff;border:1px dashed #bbbbbb;overflow:auto;border-top-left-radius:5px;border-top-right-radius:5px;border-bottom-right-radius:5px;border-bottom-left-radius:5px;font-family:helvetica, arial, sans-serif;font-size:13px;line-height:17.33333396911621px;"><div class="codeContent panelContent" style="background-image:none;color:#333333;margin:0px;padding:0px 10px;font-size:0.95em;"><pre class="code-java" style="padding:0px;overflow:auto;font-family:&#39;courier new&#39;, courier, monospace;line-height:1.3;margin-top:0px;margin-bottom:0px;">/**
	 * 根据模板+数据 输出文件
	 * @param templateFilePath 模板的绝对路径
	 * @param data 数据
	 * @param javaFilePath 输出的文件位置
	 * @<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span>
	 */
	<span class="code-keyword" style="color:#000091;background-color:inherit;">public</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> CreateJavaFile(<span class="code-object" style="color:#910091;background-color:inherit;">String</span> templateFilePath,Map&lt;<span class="code-object" style="color:#910091;background-color:inherit;">String</span>, <span class="code-object" style="color:#910091;background-color:inherit;">Object</span>&gt; data,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> javaFilePath) {

		<span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (!FileUtil.isExist(templateFilePath)) {
			log.info(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;模板文件不存在：&quot;</span>+templateFilePath);
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}
		<span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (<span class="code-keyword" style="color:#000091;background-color:inherit;">null</span> == data) {
			log.info(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;模板数据不能为null&quot;</span>);
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}
		<span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (!FileUtil.createFile(javaFilePath)) {
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}
		<span class="code-keyword" style="color:#000091;background-color:inherit;">try</span> {
			<span class="code-object" style="color:#910091;background-color:inherit;">String</span> tmpPath=FileUtil.getParentPath(templateFilePath);
			<span class="code-object" style="color:#910091;background-color:inherit;">String</span> tmpName=FileUtil.getFileName(templateFilePath);
			Configuration cfg =<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> Configuration();
			cfg.setDirectoryForTemplateLoading(<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> File(tmpPath));
			cfg.setObjectWrapper(<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> DefaultObjectWrapper());
			<span class="code-comment" style="color:#808080;background-color:inherit;">//读取模板</span>			Template template= cfg.getTemplate(tmpName);
			<span class="code-comment" style="color:#808080;background-color:inherit;">//输出到文件</span>			Writer out = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> OutputStreamWriter(<span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> FileOutputStream(javaFilePath),<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;UTF-8&quot;</span>);
			template.process(data, out);<span class="code-comment" style="color:#808080;background-color:inherit;">//根据模板和数据输出java文件</span><span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">true</span>;
		} <span class="code-keyword" style="color:#000091;background-color:inherit;">catch</span> (IOException | TemplateException e) {
			<span class="code-comment" style="color:#808080;background-color:inherit;">//生成.java文件失败</span>			log.error(e.getMessage());
			<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
		}
	}</pre></div></div><h3 style="padding:0px;font-size:1.4em;margin:1.5em 0px 0.5em;font-family:helvetica, arial, sans-serif;background-color:#ffffff;"><a name="LEO%E6%8E%A5%E5%8F%A3%E8%87%AA%E5%8A%A8%E5%8C%96%E6%A1%86%E6%9E%B6%E2%80%93%E6%A1%86%E6%9E%B6%E8%A6%81%E7%82%B9%28%E4%BA%94%29-%E4%BA%94%E3%80%81%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91"></a>五、动态编译</h3><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">在执行过程中，生成的java测试用例，需要实时编译成class文件，才可以被直接执行，因此使用到动态编译，是直接调用的jdk的tools.jar中提供的方法</p><p style="font-size:13px;line-height:17.33333396911621px;color:#333333;background-image:none;background-color:#ffffff;padding:0px;font-family:helvetica, arial, sans-serif;margin-top:10px;margin-bottom:10px;">主要代码如下：</p><div class="code panel" style="padding:0px;margin:0px 0px 10px;background-color:#ffffff;border:1px dashed #bbbbbb;overflow:auto;border-top-left-radius:5px;border-top-right-radius:5px;border-bottom-right-radius:5px;border-bottom-left-radius:5px;font-family:helvetica, arial, sans-serif;font-size:13px;line-height:17.33333396911621px;"><div class="codeContent panelContent" style="background-image:none;color:#333333;margin:0px;padding:0px 10px;font-size:0.95em;"><pre class="code-java" style="padding:0px;overflow:auto;font-family:&#39;courier new&#39;, courier, monospace;line-height:1.3;margin-top:0px;margin-bottom:0px;">/**
	 * 编译java文件为class
	 * @param javaFilePath  java文件或包含java文件的目录
	 * @param distPath      项目class文件存放目录
	 * @param libPath       jar包存放目录
	 * @param jarFile       jar包存放目录(maven)
	 * @<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> 编译成功返回true
	 */
    <span class="code-keyword" style="color:#000091;background-color:inherit;">public</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> dynamicCompiler(<span class="code-object" style="color:#910091;background-color:inherit;">String</span> javaFilePath,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> distPath,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> libPath,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> jarFile) {
    	DiagnosticCollector&lt;JavaFileObject&gt; diagnostics = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> DiagnosticCollector&lt;JavaFileObject&gt;();
        <span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> compilerResult = compiler(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;UTF-8&quot;</span>,getClassPath(libPath,distPath,jarFile),javaFilePath, distPath, diagnostics);
        <span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (compilerResult) {
        	log.info(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;动态编译成功：&quot;</span>+javaFilePath+<span class="code-quote" style="color:#009100;background-color:inherit;">&quot; &nbsp;输出目录为：&quot;</span>+distPath);
        }<span class="code-keyword" style="color:#000091;background-color:inherit;">else</span>{
        	log.error(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;动态编译失败：&quot;</span>+javaFilePath);
        	<span class="code-comment" style="color:#808080;background-color:inherit;">//日志记录编译错误信息</span><span class="code-keyword" style="color:#000091;background-color:inherit;">for</span> (@SuppressWarnings(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;rawtypes&quot;</span>) Diagnostic diagnostic : diagnostics.getDiagnostics()) {
        		log.error(diagnostic.getMessage(<span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>));
            }
        }
        <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span> compilerResult;
    }

    /**
     * 编译java文件
     * @param encoding 编译编码
     * @param jars 需要加载的jar目录或文件
     * @param filePath 文件或者目录（若为目录，编译目录下所有java文件）
     * @param sourceDir 项目源码目录
     * @param distDir 编译后class类文件存放目录
     * @param diagnostics 存放编译过程中的错误信息
     * @<span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span>
     */
    <span class="code-keyword" style="color:#000091;background-color:inherit;">private</span><span class="code-keyword" style="color:#000091;background-color:inherit;">static</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> compiler(<span class="code-object" style="color:#910091;background-color:inherit;">String</span> encoding,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> jars,<span class="code-object" style="color:#910091;background-color:inherit;">String</span> filePath, <span class="code-object" style="color:#910091;background-color:inherit;">String</span> distDir, DiagnosticCollector&lt;JavaFileObject&gt; diagnostics){
        <span class="code-comment" style="color:#808080;background-color:inherit;">// 获取编译器实例</span>        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
        <span class="code-comment" style="color:#808080;background-color:inherit;">// 获取标准文件管理器实例</span>        StandardJavaFileManager fileManager = compiler.getStandardFileManager(<span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>, <span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>, <span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>);
        <span class="code-comment" style="color:#808080;background-color:inherit;">//编译文件</span><span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (StringUtil.IsNullOrEmpty(filePath)) {
        	log.info(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;待编译的文件或目录不存在&quot;</span>);
            <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
        }
        <span class="code-comment" style="color:#808080;background-color:inherit;">//输出目录</span><span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (!FileUtil.createDictory(distDir)) {
        	log.error(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;输出目录创建失败&quot;</span>);
            <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
        }
        <span class="code-comment" style="color:#808080;background-color:inherit;">// 得到filePath目录下的所有java源文件</span>        File sourceFile = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> File(filePath);
        List&lt;File&gt; sourceFileList = <span class="code-keyword" style="color:#000091;background-color:inherit;">new</span> ArrayList&lt;File&gt;();
        sourceFileList = getSourceFiles(sourceFile);  <span class="code-comment" style="color:#808080;background-color:inherit;">//获取该目录下的所有的java文件列表</span><span class="code-comment" style="color:#808080;background-color:inherit;">// 没有java文件，直接返回</span><span class="code-keyword" style="color:#000091;background-color:inherit;">if</span> (sourceFileList.size() == 0) {
        	log.error(filePath + <span class="code-quote" style="color:#009100;background-color:inherit;">&quot;目录下查找不到任何java文件&quot;</span>);
            <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span><span class="code-keyword" style="color:#000091;background-color:inherit;">false</span>;
        }
        <span class="code-comment" style="color:#808080;background-color:inherit;">// 获取要编译的编译单元</span>        Iterable&lt;? <span class="code-keyword" style="color:#000091;background-color:inherit;">extends</span> JavaFileObject&gt; compilationUnits = fileManager.getJavaFileObjectsFromFiles(sourceFileList);
        <span class="code-comment" style="color:#808080;background-color:inherit;">//编译选项，在编译java文件时，编译程序会自动的去寻找java文件引用的其他的java源文件或者class。 -classpath选项就是定义class文件的查找目录。</span>        Iterable&lt;<span class="code-object" style="color:#910091;background-color:inherit;">String</span>&gt; options = Arrays.asList(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;-encoding&quot;</span>,encoding,<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;-classpath&quot;</span>,jars,<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;-d&quot;</span>, distDir);
        CompilationTask compilationTask = compiler.getTask(<span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>, fileManager, diagnostics, options, <span class="code-keyword" style="color:#000091;background-color:inherit;">null</span>, compilationUnits);

        <span class="code-comment" style="color:#808080;background-color:inherit;">// 运行编译任务</span><span class="code-object" style="color:#910091;background-color:inherit;">boolean</span> res= compilationTask.call();
        <span class="code-keyword" style="color:#000091;background-color:inherit;">try</span> {
			fileManager.close();
		} <span class="code-keyword" style="color:#000091;background-color:inherit;">catch</span> (IOException e) {
			log.error(<span class="code-quote" style="color:#009100;background-color:inherit;">&quot;关闭文件管理器失败&quot;</span>);
			log.error(e.getMessage());
		}
        <span class="code-keyword" style="color:#000091;background-color:inherit;">return</span> res;
    }   </pre></div></div><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>407</wp:post_id>
		<wp:post_date>2014-03-04 18:25:41</wp:post_date>
		<wp:post_date_gmt>2014-03-04 10:25:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>qtaf%e6%8e%a5%e5%8f%a3%e8%87%aa%e5%8a%a8%e5%8c%96%e6%a1%86%e6%9e%b6-%e6%a1%86%e6%9e%b6%e6%8a%80%e6%9c%af%e8%a6%81%e7%82%b9%e4%ba%94</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="qtaf"><![CDATA[QTAF接口自动化框架]]></category>
		<category domain="category" nicename="%e8%87%aa%e5%8a%a8%e5%8c%96%e6%b5%8b%e8%af%95"><![CDATA[自动化测试]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转发：Git 版本管理工具（一）</title>
		<link>http://localhost/wp/?p=416</link>
		<pubDate>Tue, 04 Mar 2014 14:36:55 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=416</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.csdn.net/ithomer/article/details/7527877">http://blog.csdn.net/ithomer/article/details/7527877</a> </p><p><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><a target="_blank" href="http://book.git-scm.com/" style="color:blue;text-decoration:none;">Git</a> </strong>是一个分布式版本控制工具，它的作者 <a target="_blank" href="http://en.wikipedia.org/wiki/Linus_Torvalds" style="color:blue;text-decoration:none;">Linus Torvalds</a> 是这样给我们介绍 <a target="_blank" href="http://en.wikipedia.org/wiki/Git_(software)" style="color:blue;text-decoration:none;">Git</a> &nbsp;—— The stupid content tracker（傻瓜式的内容跟踪器）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>1、 Git 背景</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 最初由Linus Torvalds编写，用于 Linux 内核开发的版本控制工具。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 与常用的版本控制工具 <a target="_blank" href="http://www.nongnu.org/cvs/" style="color:blue;text-decoration:none;">CVS</a>、<a target="_blank" href="http://subversion.apache.org/" style="color:blue;text-decoration:none;">Subversion</a> 等不同，它采用了分布式版本库的方式，不必服务器端软件支持，使源代码的发布和交流极其方便。 </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 的速度很快，这对于诸如 Linux kernel 这样的大项目来说自然很重要，Git 最为出色的是它的合并跟踪（merge tracing）能力。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">实际上内核开发团队决定开始开发和使用 Git 来作为内核开发的版本控制系统的时候，世界开源社群的反对声音不少，最大的理由是 Git 太艰涩难懂，从 Git 的内部工作机制来说，的确是这样。但是随着开发的深入，Git 的正常使用都由一些友好的脚本命令来执行，使 Git 变得非常好用，即使是用来管理我们自己的开发项目，Git 都是一个友好、有力的工具。现在，越来越多的著名项目采用 Git 来管理项目开发，例如：<a target="_blank" href="http://source.winehq.org/git/" style="color:#ff9900;text-decoration:none;">wine</a>、<a target="_blank" href="https://github.com/facebook/hiphop-php" style="color:#ff9900;text-decoration:none;">hiphop-php</a> 等。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 作为开源自由原教旨主义项目，没有对版本库的浏览和修改做任何的权限限制，但通过其他工具也可以达到有限的权限控制，比如：gitosis、CodeBeamer MR。原本 Git的使用范围只适用于 Linux / Unix 平台，但逐步并成熟了在 Windows 平台下的使用，主要归功于Cygwin与msysgit环境与TortoiseGit这样易用的 GUI 工具。其实 Git 的源代码中已经加入了对 Cygwin 与 MinGW 编译环境的支持并被逐步完善，对于 Windows 使用者是个福音。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span style="font-family:verdana;">2、 </span>为什么选择Git</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">流行的软件版本开源管理软件，有CVS、SVN、GIT版本管理工具，Git的优势在哪里呢？</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 入门教程，请查看我的百度空间博客：<em><a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/6d075c2e3161c1cc8b1399d1.html" style="color:#ff9900;text-decoration:none;">Blog</a></em></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 和 CVS、SVN不同，是一个分布式的源代码管理工具，它很强，也很快，Linux内核的代码就是用Git管理的，它给我们带来的直接好处有：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1. 初始化，git init, git commit -a, 就完了。对于随便写两行代码就要放到代码管理工具里的人来说，再合适不过。也可以拿git做备份系统，或者同步两台机器的文档，都很方便。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2. 绝大部分操作在本地完成，不用和集中的代码管理服务器交互，终于可以随时随地大胆地check in代码了。 只有最终完成的版本才需要向一个中心的集中的代码管理服务器提交。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3. 每次提交都会对所有代码创建一个唯一的commit id。不像CVS那样都是对单个文件分别进行版本的更改。所以你可以一次性将某次提交前的所有代码check出来，而不用考虑到底提交过那些文件。（其实SVN也可以做到这点）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">4. branch管理容易多了，无论是建立新的branch，还是在branch之间切换都一条命令完成，不需要建立多余的目录。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">5. branch之间merge时，不仅代码会merge在一起，check in历史也会保留，这点非常重要。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>Git 的优势主要有：</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1、更方便的 Merge</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">分布式管理必然导致大量的 Branch 和 Merge 操作。因此分布式版本控制系统都特别注意这方面。在传统的 CVS 里面制作 Branch 和 Merge 简直就是噩梦，Subversion 作为一个用于替代 CVS 的系统，专门改进了 Branch 操作。然而似乎人们没有注意到，Branch 是轻松了，可是 Merge 呢？如果不能很方便地 Merge 回来，做 Branch 仍然是噩梦。事实上，我就经历过在开发团队里面由于队友操作不对而在 Merge 的时候把我的许多代码都覆盖掉了。当时正是使用的 subversion 。虽然源代码仍然在历史里面，但是要去一个一个地找出被覆盖掉的文件并恢复过来确实是一件很难忘的事情。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2、更方便的管理</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">传统的版本控制系统使用中央仓库，一些仓库相关的管理就只能在仓库上进行。赋予开发团队每一个人中央仓库的管理权限是非常不好的。但是有时候确实会比较不方便的地方。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3、更健壮的系统</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">分布式系统一般情况下总是比单服务端的系统要健壮，因为当服务端一旦挂掉了整个系统就不能运行了。然而分布式系统通常不会因为一两个节点而受到影响。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">4、对网络的依赖性更低</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">虽然现在网络非常普及，但是并不是随时随地都有高速网络，甚至有时候根本没有网络可以访问。低速的网络会让人心情烦躁，有时候就呆呆地盯着屏幕上的 commit 进度，什么事情也干不了。而没有网络连接更是致命的：你无法 commit ！这表示你进行任何改动以前都必须小心翼翼，否则你可能再也找不会你曾经写的一些代码了。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">5、更少的“仓库污染”</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">有时候你要做一个模块，它不是太大，所以没有必要为它新建一个 branch ，但是它又不是那么小，不可能一次提交就做好。于是便会提交一些不完整的代码到仓库，有时候会导致整个程序无法运行，严重影响团队里其他人的开发。大多数人在这种情况下的解决办法都是写完之后再提交。但是作为习惯了版本控制的人来说，进行不计后果的大幅修改是经常的事情，到后来突然发现自己先前的代码没有提交，就后悔莫及了。如果是分布式系统的话就不会存在这样的问题，因为本地仓库的修改不会影响到别人的仓库。当你完成并测试以后，就可以在邮件列表里面说：我已经把这个模块做好了。然后感兴趣的人就可以从你这里 pull 你的成果了。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">虽然网上各种对Git的誉美之词决不止于此，但是在Git的主站上，还是尽可能客观的对Git和Subversion进行了一番比较（<a target="_blank" href="https://git.wiki.kernel.org/articles/g/i/t/GitSvnComparison_cb82.html" style="color:#ff9900;text-decoration:none;">GitSvnComparsion</a>）。另外，Subversion目前通过 <a target="_blank" href="http://svk.bestpractical.com/view/HomePage" style="color:blue;text-decoration:none;">SVK</a> 也已经提供了一定程度上的源代码库分布式的管理能力，能够实现源代码的离线提交等功能。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>3、 Git 、CVS、SVN比较</strong><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">项目源代码的版本管理工具中，比较常用的主要有：CVS、SVN、Git 和 Mercurial &nbsp;（其中，关于SVN，请参见我先前的博客：<a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/6187464" style="color:blue;text-decoration:none;">SVN常用命令</a> 和 <a target="_blank" href="http://wenku.baidu.com/view/b0d5421ba76e58fafab00337.html?st=1" style="color:blue;text-decoration:none;">SVN服务器配置</a>）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">目前Google Code支持SVN、Git、Mercurial三种方式，例如：我上传的 <a target="_blank" href="http://code.google.com/p/linux-kernel-source/source/checkout" style="color:#ff9900;text-decoration:none;">linux-kernel-source</a>（Git 方式）、<a target="_blank" href="http://code.google.com/p/jdk-java/source/checkout" style="color:#ff9900;text-decoration:none;">sdk-java</a>（SVN方式），那么它们各有什么区别呢？</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>Git与CVS 的区别 </strong></p><ul style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><li><p>分支更快、更容易。</p></li><li><p>支持离线工作；本地提交可以稍后提交到服务器上。</p></li><li><p>Git 提交都是原子的，且是整个项目范围的，而不像 CVS 中一样是对每个文件的。</p></li><li><p>Git 中的每个工作树都包含一个具有完整项目历史的仓库。</p></li><li><p>没有哪一个 Git 仓库会天生比其他仓库更重要。</p></li></ul><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>Git与SVN 的区别</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 不仅仅是个版本控制系统，它也是个内容管理系统(CMS)、工作管理系统等。如果你曾是一个使用过SVN背景的人，那么你可以很容易的做一定的思想转换，来适应Git提供的一些概念和特征。这篇文章的主要目的就是通过介绍Git能做什么，以及它和<span style="font-family:verdana, arial, helvetica, sans-serif;">SVN</span>在深层次上究竟有什么不同，通过比较来帮助你更好的认识Git</p><ol style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><li><p>Git是分布式的，SVN不是</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">这是Git和其它非分布式的版本控制系统（SVN，CVS）最核心的区别。如果你能理解这个概念，那么你就已经上手一半了。需要做一点声明，Git并不是目前第一个或唯一的分布式版本控制系统。还有一些系统如 <a target="_blank" href="http://www.bitkeeper.com/" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">Bitkeeper</a>, <a target="_blank" href="http://mercurial.selenic.com/about/" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">Mercurial</a> 等也是运行在分布式模式上的，但Git在这方面做的更好，而且有更多强大的功能特征。</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Git 跟SVN一样有自己的集中式版本库或服务器。但 Git 更倾向于被使用于分布式模式，也就是<span style="color:#990000;">每个开发人员从中心版本库的服务器上chect out代码后会在自己的机器上克隆一个自己的版本库</span>。可以这样说，如果你被困在一个不能连接网络的地方时，就像在飞机上，地下室，电梯里等，你仍然能够提交文件，查看历史版本记录，创建项目分支等。对一些人来说，这好像没多大用处，但当你突然遇到没有网络的环境时，这个将解决你的大麻烦。</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">同样，这种分布式的操作模式对于开源软件社区的开发来说也是个巨大的恩赐，你不必再像以前那样做出补丁包，通过email方式发送出去，你只需要创建一个分支，向项目团队发送一个推请求。这能让你的代码保持最新，而且不会在传输过程中丢失，一个这样的优秀案例就是： <a target="_blank" href="http://www.github.com/" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">GitHub.com</a> </p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">有些谣言传出来说subversion将来的版本也会基于分布式模式。但至少目前还看不出来。</p><p><span class="span4br"></span></p></li><li><p>Git 把内容按元数据方式存储，而SVN是按文件</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">所有的资源控制系统都是把文件的元信息隐藏在一个类似.svn、.cvs等的文件夹里。如果你把 .git 目录的体积大小跟.svn比较，你会发现它们差距很大。因为 .git 目录是处于你的机器上的一个克隆版的版本库，它拥有中心版本库上所有的东西，例如标签、分支、版本记录等。</p><p><span class="span4br"></span></p></li><li><p>Git 分支和SVN的分支不同</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">分支在SVN中一点不特别，就是版本库中的另外的一个目录。如果你想知道是否合并了一个分支，你需要手工运行像这样的命令<em><a target="_blank" href="http://jan.baresovi.cz/dr/en/subversion-mergeinfo" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">svn propget svn:mergeinfo</a></em>，来确认代码是否被合并。所以，经常会发生有些分支被遗漏的情况。</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">然而，处理Git 的分支却是相当的简单和有趣，你可以从同一个工作目录下快速的在几个分支间切换。你很容易发现未被合并的分支，你能简单而快捷的合并这些文件。</p><p><span class="span4br"></span></p></li><li><p>Git 没有一个全局的版本号，而SVN有</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">目前为止这是跟SVN相比GIT缺少的最大的一个特征。你也知道，SVN的版本号实际是任何一个相应时间的源代码快照，它是从CVS进化到SVN的最大的一个突破。Git 可以使用SHA-1来唯一的标识一个代码快照，但这个并不能完全的代替SVN里容易阅读的数字版本号。</p><p><span class="span4br"></span></p></li><li><p>Git 的内容完整性要优于SVN</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Git 的内容存储使用的是<a target="_blank" href="http://en.wikipedia.org/wiki/SHA-1" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">SHA-1</a>哈希算法。这能确保代码内容的完整性，确保在遇到磁盘故障和网络问题时降低对版本库的破坏。这有一个很好的关于Git 内容完整性的<a target="_blank" href="http://stackoverflow.com/questions/964331/git-file-integrity" style="color:#ff9900;text-decoration:none;">讨论</a>。（英文原文参考：<a target="_blank" href="http://boxysystems.com/index.php/5-fundamental-differences-between-git-svn/" style="color:#ff9900;text-decoration:none;">diff</a>）</p><p><span class="span4br"></span></p></li></ol><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="font-family:verdana, arial, helvetica, sans-serif;"><strong><a target="_blank" href="http://www.cnblogs.com/sujz/archive/2011/05/12/2044379.html" style="color:#ff9900;text-decoration:none;"><span style="color:#000000;">CVS-SVN-GIT</span></a>综合比较</strong></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">首先，介绍几个版本控制软件相互比较的重要依据：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（1）</strong>版本库模型（Repository model）：描述了多个源码版本库副本间的关系，有客户端/服务器和分布式两种模式。在客户端/服务器模式下，每一用户通过客户端访问位于服务器的主版本库，每一客户机只需保存它所关注的文件副本，对当前工作副本（working copy）的更改只有在提交到服务器之后，其它用户才能看到对应文件的修改。而在分布式模式下，这些源码版本库副本间是对等的实体，用户的机器出了保存他们的工作副本外，还拥有本地版本库的历史信息。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（2）</strong>并发模式（Concurrency model）：描述了当同时对同一工作副本/文件进行更改或编辑时，如何管理这种冲突以避免产生无意义的数据，有排它锁和合并模式。在排它锁模式下，只有发出请求并获得当前文件排它锁的用户才能对对该文件进行更改。而在合并模式下，用户可以随意编辑或更改文件，但可能随时会被通知存在冲突（两个或多个用户同时编辑同一文件），于是版本控制工具或用户需要合并更改以解决这种冲突。因此，几乎所有的分布式版本控制软件采用合并方式解决并发冲突。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（3）</strong>历史模式（History model）：描述了如何在版本库中存贮文件的更改信息，有快照和改变集两种模式。在快照模式下，版本库会分别存储更改发生前后的工作副本；而在改变集模式下，版本库除了保存更改发生前的工作副本外，只保存更改发生后的改变信息。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（4）</strong>变更范围（Scope of change）：描述了版本编号是针对单个文件还是整个目录树。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（5）</strong>网络协议（Network protocols）：描述了多个版本库间进行同步时采用的网络协议。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（6）</strong>原子提交性（Atomic commit）：描述了在提交更改时，能否保证所有更改要么全部提交或合并，要么不会发生任何改变。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>（7）</strong>部分克隆（Partial checkout/clone）：是否支持只拷贝版本库中特定的子目录。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><table border="1" cellspacing="0" cellpadding="0" width="951" style="font-family:arial;font-size:14px;line-height:26px;background-color:white;"><tbody><tr><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>名称</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>版本库模型</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>并发模式</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>历史模式</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>变更范围</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>网络协议</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>原子提交性</strong></p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;"><strong>部分克隆</strong></p></td></tr><tr><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">CVS</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Client-server</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Merge</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Changeset</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">File</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Pserver,ssh</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">No</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Yes</p></td></tr><tr><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">SVN</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Client-server</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">3-way merge, recursive</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">merge, octopus merge</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Changeset and Snapshot</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Tree</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">custom (svn), custom (svn) over ssh,</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">HTTP and SSL (usingWebDAV)</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Yes</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Yes</p></td></tr><tr><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Git</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Distributed</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Merge or lock</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">Snapshot</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Tree</p></td><td><p style="padding:0px;margin-top:0px;margin-bottom:0px;">custom, custom over ssh, rsync,</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">HTTP/HTTPS, email, bundles</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">Yes</p></td><td><p style="padding:0px;text-align:center;margin-top:0px;margin-bottom:0px;">No</p></td></tr></tbody></table><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>Trunk、Branches、Tags 区别：</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Trunk：软件开发过程中的主线，开发时版本存放的目录，即在开发阶段的代码都提交到该目录上，保存了从版本库建立到当前的信息。 </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Branches：软件开发过程中的分支，发布版本存放的目录，即项目上线时发布的稳定版本存放在该目录中，保存了从版本库的某一特定点（不一定是版本库建立时）到当前的信息。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">tags：表示标签存放的目录，tags只可读，不可写<span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">分支主要用于在不影响Trunk其它用户情况下进行一些关于新功能的探索性或实验性的开发，待新功能完善后它也可以合并到Trunk中。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335949436_2540.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">（原文，请参考我在百度空间的博客：<a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/b7ec1432be8d9c82a8018eff.html" style="color:#ff9900;text-decoration:none;">Git 命令参数及用法详解</a>）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span style="font-family:verdana;">4、 <span style="font-family:arial;"><strong>Git </strong></span></span>在Windows上的使用</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 是为Linux而生的，其最初创建人就是Linux的创始人—— Linus Torvalds</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Linux环境下，使用Git 与任何Linux中的命令行工具没有什么区别，甚至在击键数上还有明显的优势。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Windows环境下，使用Git在目前看来只有两种方法：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1、使用 <a target="_blank" href="http://www.cygwin.com/" style="color:blue;text-decoration:none;"><strong>Cygwin</strong></a>（一个在Windows上运行的Linux环境）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2、使用 <a target="_blank" href="http://msysgit.github.com/" style="color:blue;text-decoration:none;"><strong>msysgit</strong></a>（Windows下提供图形界面和命令行）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Cygwin和msysgit的使用方法类似，Cygwin具有大量Linux的功能，如果只是想使用Git功能，msysgit还是最简单和快速的方法。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">为了能够具备通过互联网实现与别人协作开发的能力，对于项目需要一个公开的源代码托管服务。好在，现在已经有不少可以供我们选择的，尤其是<a target="_blank" href="http://githost.com/" style="color:blue;text-decoration:none;"><strong>githost</strong></a>，更是一个中文的源代码托管服务提供方。从目前看来，在Githost上落户的项目还很少，貌似是一个新近诞生的服务提供方。如果项目对服务提供的稳定性有比较高的要求的话，还是选择较老的git源代码托管服务比较好吧。如果是在局域网内工作的小组，要使用Git做源代码管理，那就更简单了，大家安装好自己的Git，并指定一个人负责对Git版本库进行管理就好了。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">（1） GitHub简介</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">GitHub是使用Ruby开发的，具有清爽的界面。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">GitHub提供免费的源代码库托管，同时也提供付费的托管服务。通过付费私有库托管服务在财务上支持免费部分的持续运营。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">GitHub提供了一套独特的代码库管理界面功能，并提供项目Wiki的能力。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">GitHub提供了一系列的指南，官方网址：<a target="_blank" href="https://github.com/" style="color:#ff9900;text-decoration:none;">GitHub</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">（2）Windows系统上安装Git</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">首先，下载并安装msysgit程序：<a target="_blank" href="http://code.google.com/p/msysgit/" style="color:#ff9900;text-decoration:none;">download</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">接着，安装下载的 <a target="_blank" href="http://code.google.com/p/msysgit/downloads/detail?name=Git-1.7.10-preview20120409.exe&amp;can=2&amp;q=" style="color:black;text-decoration:none;">Git-1.7.10-preview20120409.exe</a>，可以选择最新的Git版本，以取得更好的使用效果。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">安装的过程很简单，基本上可以使用默认设置。只是在设置路径的时候要注意一下，为了避免与Windows路径导致的意外情况，还是使用“Use Git Bash Only”比较安全。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Msysgit有命令行和图形UI两种使用方式，根据你的喜好选择吧，要说的是，图形UI可能不能完成所有的工作，因此在某些情况下（例如创建SSH Key），命令行还是必不可少的。Msysgit的Bash命令行对中文的支持不好，所有的中文字符都显示成了“？”。因此，为了避免麻烦，最好避免使用中文的文件名、目录名和用户名等</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Msysgit 图形界面如下：<span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335948506_8140.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">（原文，请参考我在百度空间的博客：<a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/76f0b39bb08e28286f068ce2.html" style="color:#ff9900;text-decoration:none;">Git 界面GUI和命令行Command两种操作方式</a>）<span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">（3） 设定GitHub</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">要使用GitHub，首先需要创建SSH Key，SSH将用来加密本机与远端服务器之间的通信，同时也是识别你对代码所做的变更的方法。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">SSH Key可以使用Git命令行来产生，如果你已经有一个SSH Key，那么在这里也可以直接使用。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">要使用Git创建SSH Key 首先需要打开Git Bash 命令行，输入命令：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="background-color:#ccffff;">ssh-keygen &nbsp;-C &nbsp;&quot;username@email.com&quot; &nbsp;-t &nbsp;rsa</span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">说明：username@email.com 需要更换成你自己的email地址</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">程序将提出一些问题，接受文件默认存放位置，当要求输入pass phrase时，如果本机安全没有问题，也可以不输入。找到当时制定的文件存储位置中id_rsa.pub文件，这就是在GitHub上申请帐户时需要使用的SSH公钥文件。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">在github.com的register中选择Free account，在后续的界面中按照要求填入相应的内容即可完成注册，很简单的。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>5、 Git 服务相关</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1、 &nbsp;建立Git远程服务器：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">目前貌似还没有在Windows上建立Git服务器的，足见Linux在开源社区里强大的优势啊！^_^</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Hosting Git repositories, The Easy (and Secure) Way ：<a target="_blank" href="http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way" style="color:#ff9900;text-decoration:none;">gitosis<span class="span4br"></span></a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="font-family:verdana;"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2、 &nbsp;基于Git的源代码托管</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><a target="_blank" href="http://gitorious.org/" style="color:#ff9900;text-decoration:none;">Gitorious</a></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Gitorious is another free hosting site with a custom web interface, supporting multiple repositories per project, local installations and with open source<span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><a target="_blank" href="http://repo.or.cz/" style="color:#ff9900;text-decoration:none;">repo.or.cz</a></strong><span class="span4br"></span>repo.or.cz is the oldest hosting site, accommodating many hundreds of projects, with open-sourced infrastructure and aimed at open source software. It provides full push features as well as simple mirroring mode and gitweb interface with various enhancements. </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><a target="_blank" href="https://github.com/" style="color:#ff9900;text-decoration:none;">GitHub </a></strong><span class="span4br"></span>GitHub provides both free hosting for smaller projects and paid options for private hosting and large-sized projects. It uses a custom web interface including a wiki hosting and puts emphasis on social networking of project developers</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3、 &nbsp;关于Git的有用的联结：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git-scm：<a target="_blank" href="http://book.git-scm.com/" style="color:#ff9900;text-decoration:none;">go url</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git Reference：<a target="_blank" href="http://gitref.org/" style="color:#ff9900;text-decoration:none;">go url</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git - SVN Crash Course：<a target="_blank" href="http://git.or.cz/course/svn.html" style="color:#ff9900;text-decoration:none;">go url</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Everyday GIT With 20 Commands Or So：<a target="_blank" href="http://bbs.chinaunix.net/thread-2035258-1-1.html" style="color:#ff9900;text-decoration:none;">go url</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git User&#39;s Manual (for version 1.5.3 or newer) ：<a target="_blank" href="http://schacon.github.com/git/user-manual.html" style="color:#ff9900;text-decoration:none;">go url</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Getting Started with Git and GitHub on Windows：<a target="_blank" href="http://kylecordes.com/2008/git-windows-go" style="color:#ff9900;text-decoration:none;">go url</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>注：</strong>本文原文，请见我在百度空间的博客 &nbsp;<a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/e42001d3411790f3562c84a1.html" style="color:blue;text-decoration:none;">Windows环境中使用版本管理工具Git</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff0000;">参考推荐：</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="font-family:verdana, arial, helvetica, sans-serif;"><a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/b7ec1432be8d9c82a8018eff.html" style="color:#ff9900;text-decoration:none;">Git 命令参数及用法详解</a><a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/b7ec1432be8d9c82a8018eff.html" style="color:#ff9900;text-decoration:none;"></a></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/34cc9c29fe1a22e1e7cd406a.html" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">Git 常用命令</a>（图表）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/6187464" style="color:#ff9900;text-decoration:none;">SVN 常用命令</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://wenku.baidu.com/view/b0d5421ba76e58fafab00337.html?st=1" style="color:#ff9900;text-decoration:none;">SVN 服务器安装</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://blog.jobbole.com/25775/" style="color:#ff9900;text-decoration:none;">Git详解之一：Git起步</a>（系列教程，<span style="color:#ff0000;">推荐</span>）</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>416</wp:post_id>
		<wp:post_date>2014-03-04 22:36:55</wp:post_date>
		<wp:post_date_gmt>2014-03-04 14:36:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e5%8f%91%ef%bc%9agit-%e7%89%88%e6%9c%ac%e7%ae%a1%e7%90%86%e5%b7%a5%e5%85%b7%ef%bc%88%e4%b8%80%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<category domain="post_tag" nicename="git-%e4%bb%a3%e7%a0%81%e7%ae%a1%e7%90%86"><![CDATA[Git 代码管理]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转发：Git 常用命令详解（二）</title>
		<link>http://localhost/wp/?p=420</link>
		<pubDate>Tue, 04 Mar 2014 14:40:25 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=420</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.csdn.net/ithomer/article/details/7529022">http://blog.csdn.net/ithomer/article/details/7529022</a> </p><p><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 是一个很强大的分布式版本管理工具，它不但适用于管理大型开源软件的源代码（如：<a target="_blank" href="http://git.kernel.org/" style="color:blue;text-decoration:none;">linux kernel</a>），管理私人的文档和源代码也有很多优势（如：<a target="_blank" href="http://code.google.com/p/wsi-lgame-pro/" style="color:blue;text-decoration:none;">wsi-lgame-pro</a>）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 的更多介绍，请参考我的上一篇博客：<a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7527877" style="color:#ff9900;text-decoration:none;">Git 版本管理工具</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>一、 Git 命令初识</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">在正式介绍Git命令之前，先介绍一下Git 的基本命令和操作，对Git命令有一个总体的认识</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">示例：从Git 版本库的初始化，通常有两种方式：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1）git clone：这是一种较为简单的初始化方式，当你已经有一个远程的Git版本库，只需要在本地克隆一份</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">例如：git &nbsp;clone &nbsp;git://github.com/someone/some_project.git &nbsp; <span style="color:#ff0000;">some_project</span> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">上面的命令就是将&#39;git://github.com/someone/some_project.git&#39;这个URL地址的远程版本库，完全克隆到本地some_project目录下</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2）git init 和 git remote：这种方式稍微复杂一些，当你本地创建了一个工作目录，你可以进入这个目录，使用&#39;git init&#39;命令进行初始化；Git以后就会对该目录下的文件进行版本控制，这时候如果你需要将它放到远程服务器上，可以在远程服务器上创建一个目录，并把可访问的URL记录下来，此时你就可以利用&#39;git remote add&#39;命令来增加一个远程服务器端，</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">例如：git &nbsp;remote &nbsp;add &nbsp;<span style="color:#ff0000;">origin &nbsp;</span>git://github.com/someone/another_project.git</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">上面的命令就会增加URL地址为&#39;git: //github.com/someone/another_project.git&#39;，名称为origin的远程服务器，以后提交代码的时候只需要使用 origin别名即可</p><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><strong style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">二、 Git 常用命令<span class="span4br"></span><span class="span4br"></span>1) 远程仓库相关命令</strong><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">检出仓库： &nbsp; &nbsp; &nbsp; &nbsp;$ git clone git://github.com/jquery/jquery.git</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">查看远程仓库：$ git remote -v</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">添加远程仓库：$ git remote add [name] [url]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">删除远程仓库：$ git remote rm [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">修改远程仓库：$ git remote set-url --push [name] [newUrl]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">拉取远程仓库：$ git pull [remoteName] [localBranchName]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">推送远程仓库：$ git push [remoteName] [localBranchName]</p><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><span style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">*如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：</span><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">$git push origin test:master &nbsp; &nbsp; &nbsp; &nbsp; // 提交本地test分支作为远程的master分支</p><span style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">$git push origin test:test &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// 提交本地test分支作为远程的test分支</span><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>2）分支(branch)操作相关命令</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">查看本地分支：$ git branch</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">查看远程分支：$ git branch -r</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">创建本地分支：$ git branch [name] ----注意新分支创建后不会自动切换为当前分支</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">切换分支：$ git checkout [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">创建新分支并立即切换到新分支：$ git checkout -b [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">删除分支：$ git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">合并分支：$ git merge [name] ----将名称为[name]的分支与当前分支合并</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">创建远程分支(本地分支push到远程)：$ git push origin [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">删除远程分支：$ git push origin :heads/[name] 或 $ gitpush origin :[name] </p><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><span style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">*创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)</span><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">$git symbolic-ref HEAD refs/heads/[name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">$rm .git/index</p><span style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">$git clean -fdx</span><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>3）版本(tag)操作相关命令</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">查看版本：$ git tag</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">创建版本：$ git tag [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">删除版本：$ git tag -d [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">查看远程版本：$ git tag -r</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">创建远程版本(本地版本push到远程)：$ git push origin [name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">删除远程版本：$ git push origin :refs/tags/[name]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">合并远程仓库的tag到本地：$ git pull origin --tags</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">上传本地tag到远程仓库：$ git push origin --tags</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">创建带注释的tag：$ git tag -a [name] -m &#39;yourMessage&#39;</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>4) 子模块(submodule)相关操作命令</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">添加子模块：$ git submodule add [url] [path]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">如：$git submodule add git://github.com/soberh/ui-libs.git src/main/webapp/ui-libs</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">初始化子模块：$ git submodule init &nbsp;----只在首次检出仓库时运行一次就行</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">更新子模块：$ git submodule update ----每次更新或切换分支后都需要运行一下</p><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">删除子模块：（分4步走哦）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1) $ git rm --cached [path]</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2) 编辑“.gitmodules”文件，将子模块的相关配置节点删除掉</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3) 编辑“ .git/config”文件，将子模块的相关配置节点删除掉</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">4) 手动删除子模块残留的目录</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>5）忽略一些文件、文件夹不提交</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">在仓库根目录下创建名称为“.gitignore”的文件，写入不需要的文件夹名或文件，每个元素占一行即可，如</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">target</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">bin</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">*.db</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>三、 Git 命令详解</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">现在我们有了本地和远程的版本库，让我们来试着用用Git的基本命令：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git pull：</span></strong>从其他的版本库（既可以是远程的也可以是本地的）将代码更新到本地，例如：&#39;<span style="color:#5500ff;">git pull origin master</span>&#39;就是将origin这个版本库的代码更新到本地的master主枝，该功能类似于SVN的<strong><span style="color:#5500ff;">update</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git add：</span></strong>是将当前更改或者新增的文件加入到Git的索引中，加入到Git的索引中就表示记入了版本历史中，这也是提交之前所需要执行的一步，例如&#39;git add app/model/user.rb&#39;就会增加app/model/user.rb文件到Git的索引中，该功能类似于SVN的<strong><span style="color:#5500ff;">add</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git rm：</span></strong>从当前的工作空间中和索引中删除文件，例如&#39;<span style="color:#5500ff;">git rm app/model/user.rb</span>&#39;，该功能类似于SVN的<strong><span style="color:#5500ff;">rm、del</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git commit：</span></strong>提交当前工作空间的修改内容，类似于SVN的commit命令，例如&#39;<span style="color:#5500ff;">git commit -m story #3, add user model</span>&#39;，提交的时候必须用-m来输入一条提交信息，该功能类似于SVN的<strong><span style="color:#5500ff;">commit</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git push：</span></strong>将本地commit的代码更新到远程版本库中，例如&#39;<span style="color:#5500ff;">git push origin</span>&#39;就会将本地的代码更新到名为orgin的远程版本库中</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git log：</span></strong>查看历史日志，该功能类似于SVN的<strong><span style="color:#5500ff;">log</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git revert：</span></strong>还原一个版本的修改，必须提供一个具体的Git版本号，例如&#39;<span style="color:#5500ff;">git revert bbaf6fb5060b4875b18ff9ff637ce118256d6f20</span>&#39;，Git的版本号都是生成的一个哈希值</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span style="color:#aa00ff;">上面的命令几乎都是每个版本控制工具所公有的，下面就开始尝试一下Git独有的一些命令：</span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git branch：</span></strong>对分支的增、删、查等操作，例如&#39;<span style="color:#5500ff;">git branch new_branch</span>&#39;会从当前的工作版本创建一个叫做new_branch的新分支，&#39;git branch -D new_branch&#39;就会强制删除叫做new_branch的分支，&#39;git branch&#39;就会列出本地所有的分支</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git checkout：</span></strong>Git的checkout有两个作用，其一是在不同的branch之间进行切换，例如&#39;<span style="color:#5500ff;">git checkout new_branch</span>&#39;就会切换到new_branch的分支上去；另一个功能是还原代码的作用，例如&#39;<span style="color:#5500ff;">git checkout app/model/user.rb</span>&#39;就会将user.rb文件从上一个已提交的版本中更新回来，未提交的内容全部会回滚</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git rebase：</span></strong>用下面两幅图解释会比较清楚一些，rebase命令执行后，实际上是将分支点从C移到了G，这样分支也就具有了从C到G的功能</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335955913_5248.png" style="border:none;max-width:100%;" /><span class="span4br"></span><span class="span4br"></span> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git reset：</span></strong>将当前的工作目录完全回滚到指定的版本号，假设如下图，我们有A-G五次提交的版本，其中C的版本号是 bbaf6fb5060b4875b18ff9ff637ce118256d6f20，我们执行了&#39;<span style="color:#5500ff;">git reset </span><span style="color:#5500ff;">bbaf6fb5060b4875b18ff9ff637ce118256d6f20</span>&#39;那么结果就只剩下了A-C三个提交的版本</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335955922_4934.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;"><span class="span4br"></span></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git stash：</span></strong>将当前未提交的工作存入Git工作栈中，时机成熟的时候再应用回来，这里暂时提一下这个命令的用法，后面在技巧篇会重点讲解</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git config：</span></strong>利用这个命令可以新增、更改Git的各种设置，例如&#39;<span style="color:#5500ff;">git config branch.master.remote origin</span>&#39;就将master的远程版本库设置为别名叫做origin版本库，后面在技巧篇会利用这个命令个性化设置你的Git，为你打造独一无二的 Git</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff007f;">git tag：</span></strong>可以将某个具体的版本打上一个标签，这样你就不需要记忆复杂的版本号哈希值了，例如你可以使用&#39;<span style="color:#5500ff;">git tag revert_version bbaf6fb5060b4875b18ff9ff637ce118256d6f20</span>&#39;来标记这个被你还原的版本，那么以后你想查看该版本时，就可以使用 revert_version标签名，而不是哈希值了</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;">Git 之所以能够提供方便的本地分支等特性，是与它的文件存储机制有关的。Git存储版本控制信息时使用它自己定义的一套文件系统存储机制，在代码根目录下有一个.git文件夹，会有如下这样的目录结构：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335955931_2964.png" style="border:none;max-width:100%;" /><span class="span4br"></span> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">有几个比较重要的文件和目录需要解释一下：HEAD文件存放根节点的信息，其实目录结构就表示一个树型结构，Git采用这种树形结构来存储版本信息，那么HEAD就表示根；refs目录存储了你在当前版本控制目录下的各种不同引用（引用指的是你本地和远程所用到的各个树分支的信息），它有heads、remotes、stash、tags四个子目录，分别存储对不同的根、远程版本库、Git栈和标签的四种引用，你可以通过命令&#39;git show-ref&#39;更清晰地查看引用信息；logs目录根据不同的引用存储了日志信息。因此，Git只需要代码根目录下的这一个.git目录就可以记录完整的版本控制信息，而不是像SVN那样根目录和子目录下都有.svn目录。那么下面就来看一下Git与SVN的区别吧</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>四、 Git 与SVN 比较</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><strong><span style="color:#5500ff;">SVN</span></strong></span>（Subversion）是当前使用最多的版本控制工具。与它相比较，<span style="color:#686e55;"><strong><span style="color:#5500ff;">Git </span></strong></span>最大的优势在于两点：<span style="color:#ff0000;">易于本地增加分支和分布式的特性</span><span style="color:#686e55;">。</span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">下面两幅图可以形象的展示Git与SVN的不同之处：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335955948_6239.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;">------------</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/02/1335955958_4495.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1）本地增加分支</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">图中Git本地和服务器端结构都很灵活，所有版本都存储在一个目录中，你只需要进行分支的切换即可达到在某个分支工作的效果</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">而SVN则完全不同，如果你需要在本地试验一些自己的代码，只能本地维护多个不同的拷贝，每个拷贝对应一个SVN服务器地址</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">举一个实际的例子：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">使用SVN作为版本控制工具，当正在试图增强一个模块，工作做到一半，由于会改变原模块的行为导致代码服务器上许多测试的失败，所以并没有提交代码。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">这时候假如现在有一个很紧急的Bug需要处理， 必须在两个小时内完成。我只好将本地的所有修改<span style="font-family:verdana, arial, helvetica, sans-serif;">diff</span>，并输出成为一个<span style="font-family:verdana, arial, helvetica, sans-serif;">patch</span>文件，然后回滚有关当前任务的所有代码，再开始修改Bug的任务，等到修改好后，在将patch应用回来。前前后后要完成多个繁琐的步骤，这还不计中间代码发生冲突所要进行的工作量。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">可是如果使用Git， 我们只需要开一个分支或者转回到主分支上，就可以随时开始Bug修改的任务，完成之后，只要切换到原来的分支就可以优雅的继续以前的任务。只要你愿意，每一个新的任务都可以开一个分支，完成后，再将它合并到主分支上，轻松而优雅。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2）分布式提交</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 可以本地提交代码，所以在上面的图中，Git有利于将一个大任务分解，进行本地的多次提交</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">而SVN只能在本地进行大量的一次性更改，导致将来合并到主干上造成巨大的风险</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3）日志查看</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 的代码日志是在本地的，可以随时查看</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">SVN的日志在服务器上的，每次查看日志需要先从服务器上下载下来</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">例如：代码服务器在美国，当每次查看几年前所做的工作时，日志下载可能需要十分钟，这不能不说是一个痛苦。但是如果迁移到Git上，利用Git日志在本地的特性，查看某个具体任务的所有代码历史，每次只需要几秒钟，大大方便了工作，提高了效率。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">当然分布式并不是说用了Git就不需要一个代码中心服务器，如果你工作在一个团队里，还是需要一个服务器来保存所有的代码的。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>五、 总结</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">上面简单介绍了Git 的基本概念、一些常用命令和原理，大家也可以尝试动手，在Google Code 或 GitHub 上创建一个自己的开源项目</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 创建与使用示例：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">在Google Code 上，我创建了Git 项目：<a target="_blank" href="http://code.google.com/p/linux-kernel-source/source/checkout" style="color:#ff9900;text-decoration:none;">linux-kernel-source</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">在GitHub上，我引用的Git 项目：<a target="_blank" href="https://github.com/facebook/hiphop-php" style="color:#ff9900;text-decoration:none;">hiphop-php</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">在osChina上，我分享的项目：<a target="_blank" href="http://www.oschina.net/code/explore/gcc-4.5.2" style="color:#ff9900;text-decoration:none;">gcc-4.5.2</a></p><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff0000;">参考推荐：</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/b7ec1432be8d9c82a8018eff.html" style="color:#ff9900;text-decoration:none;">Git 命令参数及用法详解</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7527877" style="color:#ff9900;text-decoration:none;">Git 版本管理工具</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/6187464" style="color:#ff9900;text-decoration:none;">SVN常用命令</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://scmbob.org/git_and_svn.html" style="color:#ff9900;text-decoration:none;">SVN和Git的比较</a></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>420</wp:post_id>
		<wp:post_date>2014-03-04 22:40:25</wp:post_date>
		<wp:post_date_gmt>2014-03-04 14:40:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e5%8f%91%ef%bc%9agit-%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4%e8%af%a6%e8%a7%a3%ef%bc%88%e4%ba%8c%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转发：Git 常用命令速查表（三）</title>
		<link>http://localhost/wp/?p=422</link>
		<pubDate>Tue, 04 Mar 2014 14:42:32 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=422</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.csdn.net/ithomer/article/details/7529841">http://blog.csdn.net/ithomer/article/details/7529841</a> </p><p><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">前面两篇博客 <a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7527877" style="color:blue;text-decoration:none;">Git 版本管理工具</a> 和 <a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7529022" style="color:blue;text-decoration:none;">Git 常用命令详解</a>，分别介绍了Git 基础知识和命令用法</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">本文将对Git 命令，做一下全面而系统的简短总结，整理成简洁、明了的图表结构，方便查询</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>一、 Git 常用命令速查</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git branch 查看本地所有分支<span class="span4br"></span>git status 查看当前状态 <span class="span4br"></span>git commit 提交 <span class="span4br"></span>git branch -a 查看所有的分支<span class="span4br"></span>git branch -r 查看远程所有分支<span class="span4br"></span>git commit -am &quot;init&quot; 提交并且加注释 <span class="span4br"></span>git remote add origin git@192.168.1.119:ndshow<span class="span4br"></span><span style="color:#cc0000;">git push origin master</span> 将文件给推到服务器上 <span class="span4br"></span>git remote show origin 显示远程库origin里的资源 <span class="span4br"></span>git push origin master:develop<span class="span4br"></span><span style="color:#cc0000;">git push origin master:hb-dev </span>将本地库与服务器上的库进行关联 <span class="span4br"></span>git checkout --track origin/dev 切换到远程dev分支<span class="span4br"></span>git branch -D master develop 删除本地库develop<span class="span4br"></span>git checkout -b dev 建立一个新的本地分支dev<span class="span4br"></span>git merge origin/dev 将分支dev与当前分支进行合并<span class="span4br"></span>git checkout dev 切换到本地dev分支<span class="span4br"></span>git remote show 查看远程库<span class="span4br"></span>git add .<span class="span4br"></span>git rm 文件名(包括路径) 从git中删除指定文件<span class="span4br"></span>git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来<span class="span4br"></span>git config --list 看所有用户<span class="span4br"></span>git ls-files 看已经被提交的<span class="span4br"></span>git rm [file name] 删除一个文件<span class="span4br"></span>git commit -a 提交当前repos的所有的改变<span class="span4br"></span>git add [file name] 添加一个文件到git index<span class="span4br"></span>git commit -v 当你用－v参数的时候可以看commit的差异<span class="span4br"></span>git commit -m &quot;This is the message describing the commit&quot; 添加commit信息<span class="span4br"></span>git commit -a -a是代表add，把所有的change加到git index里然后再commit<span class="span4br"></span>git commit -a -v 一般提交命令<span class="span4br"></span>git log 看你commit的日志<span class="span4br"></span>git diff 查看尚未暂存的更新<span class="span4br"></span>git rm a.a 移除文件(从暂存区和工作区中删除)<span class="span4br"></span>git rm --cached a.a 移除文件(只从暂存区中删除)<span class="span4br"></span>git commit -m &quot;remove&quot; 移除文件(从Git中删除)<span class="span4br"></span>git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)<span class="span4br"></span>git diff --cached 或 $ git diff --staged 查看尚未提交的更新<span class="span4br"></span>git stash push 将文件给push到一个临时空间中<span class="span4br"></span>git stash pop 将文件从临时空间pop下来<span class="span4br"></span>---------------------------------------------------------<span class="span4br"></span>git remote add origin git@github.com:username/Hello-World.git<span class="span4br"></span>git push origin master 将本地项目给提交到服务器中<span class="span4br"></span>-----------------------------------------------------------<span class="span4br"></span>git pull 本地与服务器端同步<span class="span4br"></span>-----------------------------------------------------------------<span class="span4br"></span>git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。<span class="span4br"></span>git push origin serverfix:awesomebranch<span class="span4br"></span>------------------------------------------------------------------<span class="span4br"></span>git fetch 相当于是从远程获取最新版本到本地，不会自动merge<span class="span4br"></span>git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：<span class="span4br"></span>git branch branch_0.1 master 从主分支master创建branch_0.1分支<span class="span4br"></span>git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0<span class="span4br"></span>git checkout branch_1.0/master 切换到branch_1.0/master分支<span class="span4br"></span>du -hs</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git branch 删除远程branch</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git push origin <strong><span style="color:#ff0000;">:</span></strong>branch_remote_name</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git branch -r -d branch_remote_name<span class="span4br"></span><span class="span4br"></span>-----------------------------------------------------------</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">初始化版本库，并提交到远程服务器端<span class="span4br"></span>mkdir WebApp<span class="span4br"></span>cd WebApp<span class="span4br"></span>git init本地初始化<span class="span4br"></span>touch README<span class="span4br"></span>git add README添加文件<span class="span4br"></span>git commit -m &#39;first commit&#39;<span class="span4br"></span>git remote add origin git@github.com:daixu/WebApp.git<span>增加一个远程服务器端</span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">上面的命令会增加URL地址为&#39;git@github.com:daixu/WebApp.git&#39;，名称为origin的远程服务器库，以后提交代码的时候只需要使用 origin别名即可<span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>二、 Git 命令速查表</strong><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><span class="span4br"></span></span><span style="color:#686e55;"></span></p><span style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">1、常用的Git命令</span><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git add</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">添加至暂存区</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git add–interactive</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">交互式添加</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git apply</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">应用补丁</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git am</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">应用邮件格式补丁</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git annotate</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">同义词，等同于 git blame</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git archive</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">文件归档打包</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git bisect</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">二分查找</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git blame</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">文件逐行追溯</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git branch</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">分支管理</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git cat-file</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">版本库对象研究工具</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git checkout</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">检出到工作区、切换或创建分支</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git cherry-pick</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">提交拣选</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git citool</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">图形化提交，相当于 git gui </span>命令</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git clean</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">清除工作区未跟踪文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git clone</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">克隆版本库</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git commit</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">提交</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git config</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">查询和修改配置</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git describe</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">通过里程碑直观地显示提交ID</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git diff</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">差异比较</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git difftool</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">调用图形化差异比较工具</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fetch</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">获取远程版本库的提交</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git format-patch</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">创建邮件格式的补丁文件。参见 git am </span>命令</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git grep</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">文件内容搜索定位工具</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git gui</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">基于Tcl/Tk</span>的图形化工具，侧重提交等操作</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git help</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">帮助</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git init</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">版本库初始化</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git init-db*</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">同义词，等同于 git init</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git log</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示提交日志</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">分支合并</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git mergetool</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">图形化冲突解决</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git mv</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">重命名</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git pull</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">拉回远程版本库的提交</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git push</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">推送至远程版本库</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git rebase</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">分支变基</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git rebase–interactive</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">交互式分支变基</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git reflog</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">分支等引用变更记录管理</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">远程版本库管理</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git repo-config*</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">同义词，等同于 git config</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git reset</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">重置改变分支“</span>游标”指向</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git rev-parse</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将各种引用表示法转换为哈希值等</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git revert</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">反转提交</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git rm</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">删除文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git show</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示各种类型的对象</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git stage*</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">同义词，等同于 git add</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git stash</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">保存和恢复进度</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git status</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示工作区文件状态</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git tag</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">里程碑管理</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2、对象库操作相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git commit-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从树对象创建提交</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git hash-object</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从标准输入或文件计算哈希值或创建对象</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git ls-files</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示工作区和暂存区文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git ls-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示树对象包含的文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git mktag</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">读取标准输入创建一个里程碑对象</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git mktree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">读取标准输入创建一个树对象</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git read-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">读取树对象到暂存区</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git update-index</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">工作区内容注册到暂存区及暂存区管理</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git unpack-file</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">创建临时文件包含指定 blob </span>的内容</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git write-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从暂存区创建一个树对象</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3、引用操作相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git check-ref-format</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">检查引用名称是否符合规范</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git for-each-ref</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">引用迭代器，用于shell</span>编程</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git ls-remote</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示远程版本库的引用</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git name-rev</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将提交ID</span>显示为友好名称</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git peek-remote*</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">过时命令，请使用 git ls-remote</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git rev-list</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示版本范围</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git show-branch</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示分支列表及拓扑关系</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git show-ref</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示本地引用</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git symbolic-ref</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示或者设置符号引用</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git update-ref</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">更新引用的指向</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git verify-tag</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">校验 GPG </span>签名的Tag</p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">4、版本库管理相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git count-objects</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示松散对象的数量和磁盘占用</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git filter-branch</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">版本库重构</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fsck</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">对象库完整性检查</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fsck-objects*</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">同义词，等同于 git fsck</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git gc</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">版本库存储优化</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git index-pack</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从打包文件创建对应的索引文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git lost-found*</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">过时，请使用 git fsck –lost-found </span>命令</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git pack-objects</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从标准输入读入对象ID</span>，打包到文件</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git pack-redundant</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">查找多余的 pack </span>文件</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git pack-refs</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将引用打包到 .git/packed-refs </span>文件中</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git prune</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从对象库删除过期对象</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git prune-packed</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将已经打包的松散对象删除</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git relink</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">为本地版本库中相同的对象建立硬连接</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git repack</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将版本库未打包的松散对象打包</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git show-index</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">读取包的索引文件，显示打包文件中的内容</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git unpack-objects</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从打包文件释放文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git verify-pack</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">校验对象库打包文件</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">5、数据传输相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fetch-pack</span></p></td><td colspan="2" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">执行 git fetch </span>或 git pull 命令时在本地执行此命令，用于从其他版本库获取缺失的对象</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git receive-pack</span></p></td><td colspan="2" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">执行 git push </span>命令时在远程执行的命令，用于接受推送的数据</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git send-pack</span></p></td><td colspan="2" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">执行 git push </span>命令时在本地执行的命令，用于向其他版本库推送数据</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git upload-archive</span></p></td><td colspan="2" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">执行 git archive –remote </span>命令基于远程版本库创建归档时，远程版本库执行此命令传送归档</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git upload-pack</span></p></td><td colspan="2" style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">执行 git fetch </span>或 git pull 命令时在远程执行此命令，将对象打包、上传</p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">6、邮件相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git imap-send</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将补丁通过 IMAP </span>发送</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git mailinfo</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从邮件导出提交说明和补丁</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git mailsplit</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将 mbox </span>或 Maildir 格式邮箱中邮件逐一提取为文件</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git request-pull</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">创建包含提交间差异和执行PULL</span>操作地址的信息</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git send-email</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">发送邮件</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">7、协议相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git daemon</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">实现Git</span>协议</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git http-backend</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">实现HTTP</span>协议的CGI程序，支持智能HTTP协议</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git instaweb</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">即时启动浏览器通过 gitweb </span>浏览当前版本库</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git shell</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">受限制的shell</span>，提供仅执行Git命令的SSH访问</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git update-server-info</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">更新哑协议需要的辅助文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git http-fetch</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">通过HTTP</span>协议获取版本库</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git http-push</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">通过HTTP/DAV</span>协议推送</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-ext</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由Git</span>命令调用，通过外部命令提供扩展协议支持</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-fd</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由Git</span>命令调用，使用文件描述符作为协议接口</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-ftp</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由Git</span>命令调用，提供对FTP协议的支持</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-ftps</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由Git</span>命令调用，提供对FTPS协议的支持</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-http</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由Git</span>命令调用，提供对HTTP协议的支持</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-https</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由Git</span>命令调用，提供对HTTPS协议的支持</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git remote-testgit</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">协议扩展示例脚本</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">8、版本库转换和交互相关命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git archimport</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">导入Arch</span>版本库到Git</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git bundle</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">提交打包和解包，以便在不同版本库间传递</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git cvsexportcommit</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将Git</span>的一个提交作为一个CVS检出</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git cvsimport</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">导入CVS</span>版本库到Git。或者使用 cvs2git</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git cvsserver</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">Git</span><span style="color:#4e4e4e;">的CVS</span>协议模拟器，可供CVS命令访问Git版本库</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fast-export</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将提交导出为 git-fast-import </span>格式</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fast-import</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">其他版本库迁移至Git</span>的通用工具</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git svn</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">Git </span><span style="color:#4e4e4e;">作为前端操作 Subversion</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">9、合并相关的辅助命令</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-base</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">供其他脚本调用，找到两个或多个提交最近的共同祖先</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-file</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">针对文件的两个不同版本执行三向文件合并</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-index</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">对index</span>中的冲突文件调用指定的冲突解决工具</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-octopus</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">合并两个以上分支。参见 git merge </span>的octopus合并策略</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-one-file</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由 git merge-index </span>调用的标准辅助程序</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-ours</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">合并使用本地版本，抛弃他人版本。参见 git merge </span>的ours合并策略</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-recursive</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">针对两个分支的三向合并。参见 git merge </span>的recursive合并策略</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-resolve</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">针对两个分支的三向合并。参见 git merge </span>的resolve合并策略</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-subtree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">子树合并。参见 git merge </span>的 subtree 合并策略</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git merge-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显式三向合并结果，不改变暂存区</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git fmt-merge-msg</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">供执行合并操作的脚本调用，用于创建一个合并提交说明</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git rerere</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">重用所记录的冲突解决方案</span></p></td></tr></tbody></table><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">10、 杂项</p><table border="1" cellspacing="0" cellpadding="5" width="800" style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;"><thead><tr><td width="200" style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">命令</span></strong></p></td><td style="background-color:#daeef3;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#4e4e4e;">简要说明</span></strong></p></td></tr></thead><tbody><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git bisect–helper</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由 git bisect </span>命令调用，确认二分查找进度</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git check-attr</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示某个文件是否设置了某个属性</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git checkout-index</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从暂存区拷贝文件至工作区</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git cherry</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">查找没有合并到上游的提交</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git diff-files</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">比较暂存区和工作区，相当于 git diff –raw</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git diff-index</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">比较暂存区和版本库，相当于 git diff –cached –raw</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git diff-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">比较两个树对象，相当于 git diff –raw A B</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git difftool–helper</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">由 git difftool </span>命令调用，默认要使用的差异比较工具</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git get-tar-commit-id</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">从 git archive </span>创建的 tar 包中提取提交ID</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git gui–askpass</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">命令 git gui </span>的获取用户口令输入界面</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git notes</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">提交评论管理</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git patch-id</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">补丁过滤行号和空白字符后生成补丁唯一ID</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git quiltimport</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">将Quilt</span>补丁列表应用到当前分支</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git replace</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">提交替换</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git shortlog</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">对 git log </span>的汇总输出，适合于产品发布说明</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git stripspace</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">删除空行，供其他脚本调用</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git submodule</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">子模组管理</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git tar-tree</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">过时命令，请使用 git archive</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git var</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示 Git </span>环境变量</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git web–browse</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">启动浏览器以查看目录或文件</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git whatchanged</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">显示提交历史及每次提交的改动</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git-mergetool–lib</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">包含于其他脚本中，提供合并/</span>差异比较工具的选择和执行</p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git-parse-remote</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">包含于其他脚本中，提供操作远程版本库的函数</span></p></td></tr><tr><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:red;">git-sh-setup</span></p></td><td style="background-color:#eeeeee;background-position:initial initial;background-repeat:initial initial;"><p style="padding:0px;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#4e4e4e;">包含于其他脚本中，提供 shell </span>编程的函数库</p></td></tr></tbody></table><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;text-align:left;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;">附：</span><a target="_blank" href="http://www.cnblogs.com/1-2-3/archive/2010/07/18/git-commands.html" style="color:#ff9900;text-decoration:none;">Git 命令速查表</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;">整理集合：<a target="_blank" href="http://download.csdn.net/detail/sunboy_2050/4272038" style="color:#ff9900;text-decoration:none;">Git 命令学习文档</a><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff0000;">参考推荐：</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7527877" style="color:#ff9900;text-decoration:none;">Git 版本管理工具</a><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7529022" style="color:#ff9900;text-decoration:none;">Git 常用命令详解</a><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://hi.baidu.com/sunboy_2050/blog/item/34cc9c29fe1a22e1e7cd406a.html" style="color:#ff9900;text-decoration:none;">Git 常用命令</a>（图表）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/6187464" style="color:#ff9900;text-decoration:none;">SVN常用命令</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a target="_blank" href="http://blog.csdn.net/sunboy_2050/article/details/7385723" style="color:#ff9900;text-decoration:none;">14款Web开发速查表</a></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>422</wp:post_id>
		<wp:post_date>2014-03-04 22:42:32</wp:post_date>
		<wp:post_date_gmt>2014-03-04 14:42:32</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e5%8f%91%ef%bc%9agit-%e5%b8%b8%e7%94%a8%e5%91%bd%e4%bb%a4%e9%80%9f%e6%9f%a5%e8%a1%a8%ef%bc%88%e4%b8%89%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转发：Git 操作实战示例（四）</title>
		<link>http://localhost/wp/?p=424</link>
		<pubDate>Tue, 04 Mar 2014 14:44:01 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=424</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.csdn.net/ithomer/article/details/7530042">http://blog.csdn.net/ithomer/article/details/7530042</a> </p><p><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">前面三篇介绍了关于 Git 的概念、命令使用、命令查询等理论知识</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;">1）<a href="http://blog.csdn.net/sunboy_2050/article/details/7527877" target="_blank" style="color:#ff9900;text-decoration:none;">Git 版本管理工具</a><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;">2）<a href="http://blog.csdn.net/sunboy_2050/article/details/7529022" target="_blank" style="color:#ff9900;text-decoration:none;">Git 常用命令详解</a></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;">3）<a href="http://blog.csdn.net/sunboy_2050/article/details/7529841" target="_blank" style="color:#ff9900;text-decoration:none;">Git 常用命令速查表</a></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">本文主要介绍在使用Git 过程中遇到的几个问题及其解决方案</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>一、Git 界面GUI和命令行Command两种操作方式</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">Git 进行代码版本管理时，有两种操作方式：图形界面GUI 和 命令行Command</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">图形界面GUI：有平台限制，目前仅支持Windows系统，Linux（Unix）都是命令行模式，并且图形界面每次提交好像Display显示文件数有限制（如：最大显示20000个文件）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">命令行Command：没有平台限制，Windows、Linux（Unix、Mac OS X）下都支持，通过 gid add dir/files 添加文件，没有文件数限制</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">下面详细介绍 Git 管理和操作的两个方式：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>1、图形界面GUI</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">首先，下载Windows下的Git图形界面工具：<a href="http://code.google.com/p/linux-kernel-source/downloads/list" target="_blank" style="color:blue;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">msysgit</a> &nbsp;或 <a href="http://code.google.com/p/msysgit/downloads/list" target="_blank" style="color:blue;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">官方下载</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">接着，安装 msysgit ，如下载最新的 <a href="http://code.google.com/p/linux-kernel-source/downloads/detail?name=Git-1.7.10-preview20120409.exe&amp;can=2&amp;q=" style="color:blue;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">Git-1.7.10-preview20120409.exe</a> 后安装，操作方式有Git GUI 和 Git Bash两种，默认为 Gui Bash Only</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">然后，安装完后，在开始 —&gt; 所有程序 —&gt; Git 中，有 Git Bash 和 Git Gui 两个图标，点击启动 Git Gui 界面如下：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007607_1677.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">msysgit 图形工具，可以创建新的版本库（本地）、克隆已有版本库（远程）、打开已有版本库（本地或远程）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">例如：克隆已有的版本库（远程），如 克隆下载 <a href="http://code.google.com/p/linux-kernel-source/source/checkout" target="_blank" style="color:blue;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">linux-kernel-source</a> 步骤：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">a、 点击“克隆已有版本库”，依次输入远程版本库（xxx）和本地目录（xxx），如下图</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007622_4644.png" style="border:none;max-width:100%;" /><span class="span4br"></span><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>2、命令行Command</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span style="color:#aa00ff;">a、Git 远程下载 </span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git<span style="color:#686e55;"> &nbsp;</span><span style="color:#ff0000;">clone &nbsp;</span>git://git.kernel.org/pub/scm/<span style="color:#686e55;"> &nbsp;</span>project_path</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1）例如：下载 <a href="http://code.google.com/p/linux-kernel-source/source/checkout" target="_blank" style="color:blue;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">linux-kernel-source</a>，Git 命令如下</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git &nbsp;<span style="color:#ff0000;">clone</span><span style="color:#686e55;"> &nbsp;</span>https://code.google.com/p/linux-kernel-source/ /E/Fruit/code_google/linux-kernel-tmp</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007635_6415.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2）例如：下载 Linux 内核 <a href="http://git.kernel.org/" target="_blank" style="color:blue;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">git.kernel.org</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">git &nbsp;<span style="color:#ff0000;">clone</span><span style="color:#686e55;"> &nbsp;</span>git://git.kernel.org/pub/scm/ &nbsp; /home/homer/Linux-kernel-3.3.4</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span style="color:#aa00ff;">b、 Git 本地上传</span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">添加新文件：git add dir/files</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">提交文件：git commit -m &#39;add xxx.txt&#39;</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">上传文件：git push</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#ff0000;">Git命令更多实例，请见我在google code上传的两个开源项目：</span><a href="http://code.google.com/p/linux-kernel-source/source/browse/" target="_blank" style="color:#ff9900;text-decoration:none;">linux-kernel-source</a> 和 <a href="http://code.google.com/p/android-source-homer/source/browse/" target="_blank" style="color:#ff9900;text-decoration:none;">android-source-homer</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>二、Windows下google code git的无密码登录</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">每次使用git push代码到google code的时候总要输入<span style="color:#ff0000;">用户名及密码</span>，很是麻烦：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/07/1336378061_2523.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>说明：</strong>上文提示可以看到，由于Git版本升级，push.default默认参数值从“matching”改成了“upstream”，并且给出了两种修改方案：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1） git config --global push.default matching —— 维护先前的行为（matching）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2） git config --global push.default upstream —— 引进新的行为（upstream）<span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">以上两条命令，根据自己需求设置一条即可，以后此提示信息就不会再弹出。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">幸运的是，google code在项目管理页面提供了保存认证信息的方法：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007718_2062.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>Option 2</strong> 即为无密码登录的配置。不过这个配置是针对Linux系统的。那么windows下有没有类似于.netrc的配置呢？</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">答案是肯定的。完成windows下.netrc的配置需要两个步骤：1.新建HOME环境变量；2.新建_netrc文件，并输入配置信息。 &nbsp; &nbsp;</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>1. 环境变量</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"> If you are using Windows 7</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">run the cmd type this:</p><pre style="word-wrap:break-word;font-size:14px;line-height:26px;background-color:#ffffff;">setx HOME %USERPROFILE%<span style="color:#686e55;">（<strong><span style="color:#ff0000;">注意：%</span></strong><span style="color:#ff0000;">USERPROFILE% 才是当前默认的</span></span><span style="color:#ff0000;">用户目录</span><span style="color:#686e55;">）</span></pre><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">and the %HOME% will be set to &#39;C:\Users\&quot;username&quot;&#39;</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">例如：用户名为 homer，则 %HOME% will be set to &#39;C:\Users\<strong>homer</strong>&#39;</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007738_3540.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span class="span4br"></span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>2. 配置_netrc</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">windows下的 <span style="color:#686e55;"><strong><span style="color:#ff007f;">.netrc </span></strong></span>文件要命名为<span style="color:#686e55;"> </span><span style="color:#686e55;"><strong><span style="color:#ff0000;">_netrc</span></strong></span><span style="color:#686e55;"> &nbsp;</span>具体步骤：</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">首先，在【1、环境配置】指定的%HOME%目录（C:\Users\homer）中新建一个名为 <strong>_netrc</strong> 的文件</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">然后，在新建的 &nbsp;<strong>_netrc</strong> 的文件中，输入以下内容： &nbsp; </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><tt><span style="background-color:#d9ffe0;color:#ff007f;">machine &nbsp;</span><span style="background-color:#d9ffe0;">code.google.com</span><span style="color:#686e55;background-color:#d9ffe0;"> &nbsp;</span><span style="background-color:#d9ffe0;color:#ff0000;">login &nbsp;</span><span style="background-color:#d9ffe0;">xxx@gmail.com </span><span style="color:#686e55;background-color:#d9ffe0;"> </span><span style="background-color:#d9ffe0;color:#ff0000;">password &nbsp;</span><span style="background-color:#d9ffe0;">xxx</span> [generated googlecode.com password]</tt> </p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">其中，password 是code.google.com自动生成的，在 Profile —&gt; Settings —&gt; GoogleCode.com Password（<a href="https://code.google.com/hosting/settings" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">https://code.google.com/hosting/settings</a>）</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>Git Push 不需要输入密码上传效果图：</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007751_9103.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p><span style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">推荐参考：</span><a href="http://stackoverflow.com/questions/6031214/git-how-to-use-netrc-file-on-windows-to-save-user-and-password/6031266#6031266" target="_blank" style="color:#ff9900;text-decoration:none;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;">StackOverflow</a><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>三、 google code托管开源项目https://code.google.com/hosting/settings被墙的解决方法</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff0000;">方法一：</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">很多人在使用 code.google.com时， 都需要一个code.google.com的密码， 这个密码是从<a href="https://code.google.com/hosting/settings" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">https://code.google.com/hosting/settings</a> 网址获得， 但大多时候您会发现这个网址不能打开，通过实践分析的原因可能是以下原因：</p><div style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;word-wrap:break-word;word-break:break-all;visibility:visible !important;zoom:1 !important;filter:none;"><p style="padding:0px;margin-top:0px;margin-bottom:0px;">1. 国家屏蔽了<a href="http://www.google.com/" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">www.google.com</a> 的网址IP地址</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">2. 由于国家屏蔽， google.com被迫更改了自己的IP地址。</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">解决办法：</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">1.首先在命令行 ping <a href="http://www.google.com/" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">www.google.com</a> ，查出当前google.com的IP地址。</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">2.修改<span style="color:#ff0000;">c:\windows\system32\drivers\etc\hosts </span>文件</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">74.125.153.104 为你当前Ping时看到的IP。</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">追加以下内容：</p><p style="padding:0px;margin-top:0px;margin-bottom:0px;">74.125.153.104 code.google.com <span class="span4br"></span>74.125.153.104 encrypted.google.com <span class="span4br"></span>74.125.153.104 suggestqueries.google.com <span class="span4br"></span>74.125.153.104 mail.google.com <span class="span4br"></span>74.125.153.104 groups.google.com <span class="span4br"></span>74.125.153.104 groups.google.com.hk <span class="span4br"></span>74.125.153.104 docs.google.com <span class="span4br"></span>74.125.153.104 docs0.google.com <span class="span4br"></span>74.125.153.104 docs1.google.com <span class="span4br"></span>74.125.153.104 spreadsheets.google.com <span class="span4br"></span>74.125.153.104 spreadsheets0.google.com <span class="span4br"></span>74.125.153.104 webcache.googleusercontent.com <span class="span4br"></span>74.125.153.104 sites.google.com <span class="span4br"></span>74.125.153.104 talkgadget.google.com <span class="span4br"></span>74.125.153.104 clients1.google.com <span class="span4br"></span>74.125.153.104 clients2.google.com <span class="span4br"></span>74.125.153.104 clients3.google.com <span class="span4br"></span>74.125.153.104 clients4.google.com</p><p style="padding:0px;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p></div><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff0000;">方法二：</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">刚开始的code.google.com都可以访问到，几乎所有页面都可以访问，唯独查看svn账号密码的页面(<a href="https://code.google.com/hosting/settings" style="color:#ff9900;text-decoration:none;font-family:verdana, arial, helvetica, sans-serif;">https://code.google.com/hosting/settings</a> )就总是“连接被重置”</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">因为众所周知的原因，我朝大约是不想让子民向美帝提交代码，所以封杀了这关键性的一页。通过百度查询，发现他们的解决方法虽然都是改hosts（方法一），但具体怎么改，说的不太对，我自己验证了一下，发现下面的方法比较靠谱</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">如果你已经有了翻方法，那翻访问就行了，我的方法是针对不翻的情况下的。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">网上有人说让我们先ping一下www.google.com和code.google.com然后去拿这个结果中的IP去设置hosts，可能会不行！！！</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">为什么呢？因为我们的ping也被墙给阉割过了，比如说ping www.google.com，显示的结果可能是Ping code.l.google.com的，被篡改了。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">我们要得到和美帝一样的ping结果怎么办呢？</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">很简单，先在google搜索online ping，找到第一个或者你看着顺眼的一个网站打开，用里面的在线ping工具来ping code.google.com，相当于用了国外的服务器来ping，所以结果是靠谱的。</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong>步骤总结：</strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">1、去google搜online ping，在英文google搜；或直接打开 <a href="http://ping.eu/ping/" target="_blank" style="color:blue;text-decoration:none;">ping.eu/ping</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">2、在提供在线ping的国外网站上，输入：ping code.google.com ，取得ip</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;">3、改hosts文件，将刚才ping到的ip设置和code.google.com配对。（最好清空一下dns缓存，命令行输入ipconfig /flushdns)</p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;color:#686e55;margin-top:0px;margin-bottom:0px;"><img src="http://my.csdn.net/uploads/201205/03/1336007111_2984.png" style="border:none;max-width:100%;" /><span class="span4br"></span></p><p><br style="font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;" /></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><strong><span style="color:#ff0000;">参考推荐：</span></strong></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a href="http://hi.baidu.com/sunboy_2050/blog/item/2faac182015568f79023d900.html" target="_blank" style="color:#ff9900;text-decoration:none;">Windows下google code git的无密码登录</a></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a href="http://hi.baidu.com/sunboy_2050/blog/item/76f0b39bb08e28286f068ce2.html" target="_blank" style="color:#ff9900;text-decoration:none;">Git 界面GUI和命令行Command两种操作方式</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><a href="http://hi.baidu.com/sunboy_2050/blog/item/274da2036cd230261c9583b5.html" target="_blank" style="color:#ff9900;text-decoration:none;">google code托管开源项目https://code.google.com/hosting/settings被墙的解决方法</a><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span class="span4br"></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><a href="http://blog.csdn.net/sunboy_2050/article/details/7527877" target="_blank" style="color:#ff9900;text-decoration:none;">Git 版本管理工具</a><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#686e55;"><a href="http://blog.csdn.net/sunboy_2050/article/details/7529022" target="_blank" style="color:#ff9900;text-decoration:none;">Git 常用命令详解</a><span class="span4br"></span></span></p><p style="padding:0px;font-family:arial;font-size:14px;line-height:26px;background-color:#ffffff;margin-top:0px;margin-bottom:0px;"><span style="color:#ff9900;"><a href="http://blog.csdn.net/sunboy_2050/article/details/7529841" target="_blank" style="color:#ff9900;text-decoration:none;">Git 常用命令速查表</a></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>424</wp:post_id>
		<wp:post_date>2014-03-04 22:44:01</wp:post_date>
		<wp:post_date_gmt>2014-03-04 14:44:01</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e5%8f%91%ef%bc%9agit-%e6%93%8d%e4%bd%9c%e5%ae%9e%e6%88%98%e7%a4%ba%e4%be%8b%ef%bc%88%e5%9b%9b%ef%bc%89</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[Git]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转发：GnuPG的使用简介</title>
		<link>http://localhost/wp/?p=429</link>
		<pubDate>Thu, 06 Mar 2014 11:07:44 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=429</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.sina.com.cn/s/blog_53d71bf00100a36f.html">http://blog.sina.com.cn/s/blog_53d71bf00100a36f.html</a> </p><p><span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><a href="http://album.sina.com.cn/pic/logo-gnupg-light-purple-bg.png" target="_blank" style="text-decoration:none;color:#3e73a0;"><img src="http://www.gnupg.org/share/logo-gnupg-light-purple-bg.png" real_src="http://www.gnupg.org/share/logo-gnupg-light-purple-bg.png" alt="GnuPG的使用简介" title="GnuPG的使用简介" style="margin:0px;padding:0px;border:0px;list-style:none;" /></a></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <wbr> </wbr><wbr> </wbr><wbr> GnuPG是GNU项目中的一员，是信息加密技术中，最朴实和平民化的工具，我们在之后将其简称为gpg，这实际上也就是GnuPG的命令。GnuPG的项目主页在：（英语好的同学就直接去学习吧^^）</wbr></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><a href="http://www.gnupg.org/" target="_blank" style="text-decoration:none;color:#3e73a0;">http://www.gnupg.org/</a></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <wbr> </wbr><wbr> </wbr><wbr> 我这里主要是讲在Windows下的使用，用Linux的同学，比如像Debian（包括Ubuntu）这些，gpg是本来就安装好的，并且跟电子邮件软件都是集成得很好的。因为既然你都玩Linux了，相信看doc的能力应该是有的，参考一下在Windows下的方法就可以了，我就不专门写在Linux下的设置和使用了。</wbr></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <wbr> </wbr><wbr> </wbr><wbr> gpg的主页不提供gpg的下载，这是因为美国的法律是限制加密技术出口的。所以，gpg主页上只提供了其他国家服务器上下载的镜像链接，比如我，就是在这里下载的：</wbr></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><a href="ftp://ftp.gnupg.ca/binary/gnupg-w32cli-1.4.9.exe" target="_blank" style="text-decoration:none;color:#3e73a0;">ftp://ftp.gnupg.ca/binary/gnupg-w32cli-1.4.9.exe</a></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <wbr> </wbr><wbr> </wbr><wbr> 然后就一路安装，默认的安装路径是：</wbr></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">C:\Program Files\GNU\GnuPG</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <wbr> </wbr><wbr> </wbr><wbr> 因为我尽量希望把这个教程写得傻瓜一点，所以，很多地方我就不解释为什么了，最简单的使用就是跟着我一步步来。</wbr></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <wbr> </wbr><wbr> </wbr><wbr> 安装好以后，我们需要一个地方作为gpg的工作目录，随便找个地方建立个文件夹就可以了，比如“我的文档”是个好地方，比如就这个位置：</wbr></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">??\My Documents\gpg</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">在这个文件夹里面创建一个文本文件，然后更名为一个批处理文件，比如startgpg.bat，文件内容如下：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">@set path=C:\Program Files\GNU\GnuPG;%PATH%;<span class="span4br"></span>@echo ---**欢迎使用gpg加密系统**---<span class="span4br"></span>@echo 帮助请用命令gpg -h<span class="span4br"></span>@cmd</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">其实就是临时指定了gpg命令的路径。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">运行startgpg.bat，你就进入一个“命令与提示符”窗口了。你可以先使用gpg -h看看帮助信息。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">现在，我们开始制作一把密钥。这里是一次产生钥匙的全过程：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">---**欢迎使用gpg加密系统**---<span class="span4br"></span>帮助请用命令gpg -h<span class="span4br"></span>Microsoft Windows [版本 5.2.3790]<span class="span4br"></span>(C) 版权所有 1985-2003 Microsoft Corp.</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">E:\My Documents\gpg&gt;gpg --gen-key <span style="color:#0033ff;word-wrap:normal;word-break:normal;">//产生钥匙的命令</span><span class="span4br"></span>gpg (GnuPG) 1.4.9; Copyright (C) 2008 Free Software Foundation, Inc.<span class="span4br"></span>This is free software: you are free to change and redistribute it.<span class="span4br"></span>There is NO WARRANTY, to the extent permitted by law.</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">请选择您要使用的密钥种类：<span class="span4br"></span> <wbr> </wbr><wbr> (1) DSA 和 ElGamal (默认)<span class="span4br"></span> </wbr><wbr> </wbr><wbr> (2) DSA (仅用于签名)<span class="span4br"></span> </wbr><wbr> </wbr><wbr> (5) RSA (仅用于签名)<span class="span4br"></span>您的选择？ 1<span class="span4br"></span>DSA 密钥对会有 1024 位。<span class="span4br"></span>ELG-E 密钥长度应在 1024 位与 4096 位之间。<span class="span4br"></span>您想要用多大的密钥尺寸？(2048)<span class="span4br"></span>您所要求的密钥尺寸是 2048 位<span class="span4br"></span>请设定这把密钥的有效期限。<span class="span4br"></span> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> 0 = 密钥永不过期<span class="span4br"></span> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> &nbsp;</wbr><wbr> = 密钥在 n 天后过期<span class="span4br"></span> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> w = 密钥在 n 周后过期<span class="span4br"></span> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> m = 密钥在 n 月后过期<span class="span4br"></span> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> y = 密钥在 n 年后过期<span class="span4br"></span>密钥的有效期限是？(0)<span class="span4br"></span>密钥永远不会过期<span class="span4br"></span>以上正确吗？(y/n)y</wbr></span> <span style="color:#0033ff;word-wrap:normal;word-break:normal;">//以上就用默认信息好了</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">您需要一个用户标识来辨识您的密钥；本软件会用真实姓名、注释和电子邮件地址组合<span class="span4br"></span>成用户标识，如下所示：<span class="span4br"></span> <wbr> </wbr><wbr> </wbr><wbr> “Heinrich Heine (Der Dichter) &lt;</wbr></span><a href="mailto:heinrichh@duesseldorf.de" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">heinrichh@duesseldorf.de</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;”</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">真实姓名：Long Fei<span class="span4br"></span>电子邮件地址：</span><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a><span class="span4br"></span><span style="color:#006600;word-wrap:normal;word-break:normal;">注释：win2k3<span class="span4br"></span>您选定了这个用户标识：<span class="span4br"></span> <wbr> </wbr><wbr> </wbr><wbr> “Long Fei (win2k3) &lt;</wbr></span><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;” <wbr> <span class="span4br"></span></wbr></span> <span style="color:#0033ff;word-wrap:normal;word-break:normal;">//这就是UID，为了准确，建议使用完整邮箱名</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">更改姓名(N)、注释(C)、电子邮件地址(E)或确定(O)/退出(Q)？o<span class="span4br"></span>您需要一个密码来保护您的私钥。</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">我们需要生成大量的随机字节。这个时候您可以多做些琐事(像是敲打键盘、移动<span class="span4br"></span>鼠标、读写硬盘之类的)，这会让随机数字发生器有更好的机会获得足够的熵数。<span class="span4br"></span>.++++++++++++++++++++.+++++++++++++++++++++++++.+++++..++++++++++++++++++++..+++<span class="span4br"></span>+++++++++++++++++..++++++++++.+++++++++++++++.+++++++++++++++&gt;.++++++++++.......<span class="span4br"></span>.......&gt;.+++++...................................................&lt;+++++.........<span class="span4br"></span>...............................&lt;+++++.........................................++<span class="span4br"></span>+++<span class="span4br"></span>gpg: NOTE: you should run &#39;diskperf -y&#39; to enable the disk statistics<span class="span4br"></span>gpg: NOTE: you should run &#39;diskperf -y&#39; to enable the disk statistics<span class="span4br"></span>我们需要生成大量的随机字节。这个时候您可以多做些琐事(像是敲打键盘、移动<span class="span4br"></span>鼠标、读写硬盘之类的)，这会让随机数字发生器有更好的机会获得足够的熵数。<span class="span4br"></span>++++++++++.++++++++++..+++++......+++++...+++++++++++++++.++++++++++++++++++++++<span class="span4br"></span>+++.+++++++++++++++++++++++++..++++++++++.+++++.++++++++++.+++++++++++++++++++++<span class="span4br"></span>++++&gt;.+++++...+++++.........&gt;.+++++.&lt;..+++++.............+++++^^^^^^^^^^^<span class="span4br"></span>gpg: 密钥 63E5D69B 被标记为绝对信任<span class="span4br"></span>公钥和私钥已经生成并经签名。</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg: 正在检查信任度数据库<span class="span4br"></span>gpg: 需要 3 份勉强信任和 1 份完全信任，PGP 信任模型<span class="span4br"></span>gpg: 深度：0 有效性： <wbr> 2 已签名： </wbr><wbr> 0 信任度：0-，0q，0n，0m，0f，2u<span class="span4br"></span>pub </wbr><wbr> </wbr><wbr> 1024D/63E5D69B 2008-05-25<span class="span4br"></span>密钥指纹 = 409D 9321 9A1A 7007 B5B7 </wbr><wbr> FA6C 6F0A 7524 63E5 D69B<span class="span4br"></span>uid </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> Long Fei (win2k3) &lt;</wbr></span><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;<span class="span4br"></span>sub <wbr> </wbr><wbr> 2048g/B6A44269 2008-05-25</wbr></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#000000;word-wrap:normal;word-break:normal;">现在，我们用gpg --list-keys，就可以看到刚才产生的公钥了；</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">查看私钥用gpg -K<span class="span4br"></span><span style="color:#006600;word-wrap:normal;word-break:normal;">pub <wbr> </wbr><wbr> 1024D/63E5D69B 2008-05-25<span class="span4br"></span>uid </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> Long Fei (win2k3) &lt;</wbr></span><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;<span class="span4br"></span>sub <wbr> </wbr><wbr> 2048g/B6A44269 2008-05-25</wbr></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#000000;word-wrap:normal;word-break:normal;">现在，我们就可以导出公钥，发布给需要把信息加密给我们的人。</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg -a --export -o mykey</span> <a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-a: 以ASCII发布，这样比二进制文件看起来整洁一些；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">--export: 导出公钥；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-o mykey: 导出的信息写入文件mykey；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;">fleet.long@gmail.com</a>: 作为UID标识，即我们刚才建立的密钥。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">这样，我们就得到了文件mykey，我们可以把这个文件传给别人，也可以直接把文件的内容贴出来，别人把这些信息写入一个文本文件，也可以作为key来导入。假如另外一台电脑上的人要导入这个密钥，只需要简单的使用命令：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg --import mykey</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">假设我们得到了另外一把公钥mykey2，我们先将其导入公钥环：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg --import mykey2</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">现在我们用gpg --list-keys，就会发现多了把钥匙：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">C:/Documents and Settings/Administrator/Application Data/gnupg\pubring.gpg<span class="span4br"></span>--------------------------------------------------------------------------<span class="span4br"></span>pub <wbr> </wbr><wbr> 1024D/A223BCBA 2008-05-25<span class="span4br"></span>uid </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> lf_win32 (at win2k3) &lt;</wbr></span><a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">lf426@sina.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;<span class="span4br"></span>sub <wbr> </wbr><wbr> 2048g/EFF53ACF 2008-05-25</wbr></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">pub <wbr> </wbr><wbr> 1024D/63E5D69B 2008-05-25<span class="span4br"></span>uid </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> Long Fei (win2k3) &lt;</wbr></span><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;<span class="span4br"></span>sub <wbr> </wbr><wbr> 2048g/B6A44269 2008-05-25</wbr></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">这样，如果我们要为<a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;">lf426@sina.com</a>这个UID加密的话，用这样的命令：（假设需要加密的文件是tp.txt）</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg -seav -u</span> <a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a> <span style="color:#006600;word-wrap:normal;word-break:normal;">-r</span> <a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">lf426@sina.com</span></a> <span style="color:#006600;word-wrap:normal;word-break:normal;">tp.txt</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">然后gpg会提示你输入用于对<a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;">fleet.long@gmail.com</a>进行数字签名所需要的密码，正确输入后就产生一个tp.txt.asc文件。当然，我们也可以用参数-o指定加密产生的文件名。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-s: 数字签名；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-e: 加密；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-a: 以ASCII形式；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-v: 显示gpg工作的详细信息；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-u: 用于签名的UID（<a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;">fleet.long@gmail.com</a>）；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">-r：使用这个UID的公钥进行加密（<a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;">lf426@sina.com</a>）；</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">最后产生的tp.txt.asc文件，只有<a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;">lf426@sina.com</a>才能解密。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">如果我们得到了一个用自己公钥加密后的文件，例如<a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;">fleet.long@gmail.com</a>得到了一个用其公钥加密的文件tp2.txt.asc，简单的使用gpg不带参数的进行解密就可以了：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg tp2.txt.asc</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">您需要输入密码，才能解开这个用户的私钥：“Long Fei (win2k3) &lt;</span><a href="mailto:fleet.long@gmail.co" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.co</span></a><span class="span4br"></span><span style="color:#006600;word-wrap:normal;word-break:normal;">m&gt;”<span class="span4br"></span>2048 位的 ELG-E 密钥，钥匙号 B6A44269，建立于 2008-05-25 (主钥匙号 63E5D69B)</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><span style="color:#006600;word-wrap:normal;word-break:normal;">gpg: 由 2048 位的 ELG-E 密钥加密，钥匙号为 B6A44269、生成于 2008-05-25<span class="span4br"></span> <wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> </wbr><wbr> “Long Fei (win2k3) &lt;</wbr></span><a href="mailto:fleet.long@gmail.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">fleet.long@gmail.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;”<span class="span4br"></span>gpg: 于 05/26/08 03:22:48 创建的签名，使用 DSA，钥匙号 A223BCBA<span class="span4br"></span>gpg: 完好的签名，来自于“lf_win32 (at win2k3) &lt;</span><a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;"><span style="color:#006600;word-wrap:normal;word-break:normal;">lf426@sina.com</span></a><span style="color:#006600;word-wrap:normal;word-break:normal;">&gt;”</span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">从这些信息，我们可以看到这个文件的数字签名是<a href="mailto:lf426@sina.com" style="text-decoration:none;color:#3e73a0;">lf426@sina.com</a>的，并且得到了解密后的文件tp2.txt。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">到这里，我们就把gpg最简单的使用介绍完毕了。希望大家能觉得有帮助。</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"> <span class="span4br"></span></p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;">官方有篇中文教程大家可以在这里看：</p><p style="padding:0px;border:0px;list-style:none;word-wrap:normal;word-break:normal;line-height:21px;color:#464646;font-family:simsun;font-size:14px;background-color:#bcd3e5;margin-top:0px;"><a href="http://www.gnupg.org/howtos/ch/index.html" target="_blank" style="text-decoration:none;color:#3e73a0;">http://www.gnupg.org/howtos/ch/index.html</a></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>429</wp:post_id>
		<wp:post_date>2014-03-06 19:07:44</wp:post_date>
		<wp:post_date_gmt>2014-03-06 11:07:44</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e5%8f%91%ef%bc%9agnupg%e7%9a%84%e4%bd%bf%e7%94%a8%e7%ae%80%e4%bb%8b</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>java格式化字符串String.format</title>
		<link>http://localhost/wp/?p=442</link>
		<pubDate>Fri, 21 Mar 2014 10:18:31 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=442</guid>
		<description></description>
		<content:encoded><![CDATA[<p>构造测试数据时，例如mac地址格式的数据、位数不足左或者右补0的数据等等，需要格式化生成</p><p>可以使用java提供的String.format方法</p><p><span class="span4br"></span></p><p>javadoc中部分示例如下：留查</p><p><span class="span4br"></span></p><pre class="brush:java;toolbar:false;">Examples of expected usage: 
 
   StringBuilder sb = new StringBuilder();
   // Send all output to the Appendable object sb
   Formatter formatter = new Formatter(sb, Locale.US);
 
   // Explicit argument indices may be used to re-order output.
   formatter.format("%4$2s %3$2s %2$2s %1$2s", "a", "b", "c", "d")
   // -&gt; " d  c  b  a"
 
   // Optional locale as the first argument can be used to get
   // locale-specific formatting of numbers.  The precision and width can be
   // given to round and align the value.
   formatter.format(Locale.FRANCE, "e = %+10.4f", Math.E);
   // -&gt; "e =    +2,7183"
 
   // The '(' numeric flag may be used to format negative numbers with
   // parentheses rather than a minus sign.  Group separators are
   // automatically inserted.
   formatter.format("Amount gained or lost since last statement: $ %(,.2f",
                    balanceDelta);
   // -&gt; "Amount gained or lost since last statement: $ (6,217.58)"
 Convenience methods for common formatting requests exist as illustrated by the following invocations: 
 
   // Writes a formatted string to System.out.
   System.out.format("Local time: %tT", Calendar.getInstance());
   // -&gt; "Local time: 13:34:18"
 
   // Writes formatted output to System.err.
   System.err.printf("Unable to open file '%1$s': %2$s",
                     fileName, exception.getMessage());
   // -&gt; "Unable to open file 'food': No such file or directory"
 Like C's sprintf(3), Strings may be formatted using the static method String.format: 
 
   // Format a string containing a date.
   import java.util.Calendar;
   import java.util.GregorianCalendar;
   import static java.util.Calendar.*;
 
   Calendar c = new GregorianCalendar(1995, MAY, 23);
   String s = String.format("Duke's Birthday: %1$tm %1$te,%1$tY", c);
   // -&gt; s == "Duke's Birthday: May 23, 1995"</pre><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>442</wp:post_id>
		<wp:post_date>2014-03-21 18:18:31</wp:post_date>
		<wp:post_date_gmt>2014-03-21 10:18:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>java%e6%a0%bc%e5%bc%8f%e5%8c%96%e5%ad%97%e7%ac%a6%e4%b8%b2string-format</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：Centos yum方式安装LAMP</title>
		<link>http://localhost/wp/?p=445</link>
		<pubDate>Wed, 02 Apr 2014 06:18:41 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=445</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://www.songlin51.com/archives/988.html">http://www.songlin51.com/archives/988.html</a> </p><p><span class="span4br"></span></p><p>php的LAMP环境在centos上搭建的还是不少的，昨夜在虚拟机的centos上安装了LAMP环境，过程比较曲折。也给自己记录一下。<span class="span4br"></span>松林的linux基础基本为零，所以说咱还是用centos的yum命令来安装环境吧，省去了一系列不必要的依赖关系。 本示例教程以centos5.5为基础（有点老）</p><p>命令如下：</p><p>首先更新软件源，过程会比较长。如果网速不好的话建议更换sohu的源：</p><pre class="wp-code-highlight prettyprint linenums:1 prettyprinted"><ol class="linenums"><li value="1" class="L0"><p><span class="com"># yum -y update</span></p></li></ol></pre><p>安装mysql、apache、php。最基本的环境了、其余自行安装</p><pre class="wp-code-highlight prettyprint linenums:1 prettyprinted"><ol class="linenums"><li value="1" class="L0"><p><span class="com">#yum -y install httpd php mysql mysql-server php-mysql</span></p></li></ol></pre><p>设置服务的自动启动</p><pre class="wp-code-highlight prettyprint linenums:1 prettyprinted"><ol class="linenums"><li value="1" class="L0"><p><span class="com"># chkconfig httpd on</span></p></li><li class="L1"><p><span class="com"># chkconfig --add mysqld</span></p></li><li class="L2"><p><span class="com"># chkconfig mysqld on</span></p></li><li class="L3"><p><span class="pln"> </span></p></li><li class="L4"><p><span class="com"># service httpd start</span></p></li><li class="L5"><p><span class="com"># service mysqld start </span></p></li></ol></pre><p>基本这些安装完毕以后php的环境是可以跑起来的，当然你必须执行完下一条。因为centos防火墙默认是关闭80端口与21端口的、所以说根本不能访问apache。这时候我们需要让centos开启80端口，如果需要ftp的话要开启21端口。</p><pre class="wp-code-highlight prettyprint linenums:1 prettyprinted"><ol class="linenums"><li value="1" class="L0"><p><span class="str">/sbin/</span><span class="pln">iptables </span><span class="pun">-</span><span class="pln">I INPUT </span><span class="pun">-</span><span class="pln">p tcp </span><span class="pun">--</span><span class="pln">dport </span><span class="lit">80</span><span class="pln"></span><span class="pun">-</span><span class="pln">j ACCEPT</span></p></li><li class="L1"><p><span class="pun">/</span><span class="pln">sbin</span><span class="pun">/</span><span class="pln">iptables </span><span class="pun">-</span><span class="pln">I INPUT </span><span class="pun">-</span><span class="pln">p tcp </span><span class="pun">--</span><span class="pln">dport </span><span class="lit">21</span><span class="pln"></span><span class="pun">-</span><span class="pln">j ACCEPT</span></p></li><li class="L2"><p><span class="pun">/</span><span class="pln">etc</span><span class="pun">/</span><span class="pln">rc</span><span class="pun">.</span><span class="pln">d</span><span class="pun">/</span><span class="pln">init</span><span class="pun">.</span><span class="pln">d</span><span class="pun">/</span><span class="pln">iptables save </span><span class="com">#将更改进行保存</span></p></li><li class="L3"><p><span class="pun">/</span><span class="pln">etc</span><span class="pun">/</span><span class="pln">init</span><span class="pun">.</span><span class="pln">d</span><span class="pun">/</span><span class="pln">iptables restart </span><span class="com">#重启防火墙以便改动生效，</span></p></li><li class="L4"><p><span class="pun">查看防火墙信息/</span><span class="pln">etc</span><span class="pun">/</span><span class="pln">init</span><span class="pun">.</span><span class="pln">d</span><span class="pun">/</span><span class="pln">iptables status </span><span class="com">#如果存在80，那就是生效了</span></p></li></ol></pre><p>基本这些设置完毕以后就可以在本机访问虚拟机里的环境了、执行一下ifconfig看一看虚拟机里centos的ip是多少。然后在自己本机的浏览器上访问一下，是不是出现apache默认页了呢。代码的话就放到/var/www/html/ &nbsp;新建一个index.php试一试。</p><p><span class="span4br"></span></p><span class="span4br"></span> <p><span class="span4br"></span> </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>445</wp:post_id>
		<wp:post_date>2014-04-02 14:18:41</wp:post_date>
		<wp:post_date_gmt>2014-04-02 06:18:41</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9acentos-yum%e6%96%b9%e5%bc%8f%e5%ae%89%e8%a3%85lamp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：java反射拿到方法的参数名列表的方法 </title>
		<link>http://localhost/wp/?p=447</link>
		<pubDate>Thu, 03 Apr 2014 08:14:31 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=447</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.csdn.net/viviju1989/article/details/8529453"></a><a href="http://blog.csdn.net/viviju1989/article/details/8529453">http://blog.csdn.net/viviju1989/article/details/8529453</a> &nbsp; <span class="span4br"></span></p><p><a href="http://blog.csdn.net/viviju1989/article/details/8529453"><span class="span4br"></span></a></p><p><a href="http://blog.csdn.net/viviju1989/article/details/8529453"> </a></p><p>问题：java.lang.reflect 包中提供了很多方法，获取所有的方法，获取所有的参数类型等，但是却没有一个方法能够帮助我们获取方法的参数名列表。</p><p>现在提供2种实现方式：</p><p><strong>第一种</strong>：通过javassit获取，代码如下：</p><div class="dp-highlighter bg_java"><pre class="brush:java;toolbar:false;">public class Demo {
    public void add(int a,int b){
        System.out.println(a + b);
    }
}</pre></div><pre class="brush:java;toolbar:false;">import java.lang.reflect.Method;
import java.lang.reflect.Modifier;
 
import javassist.ClassClassPath;
import javassist.ClassPool;
import javassist.CtClass;
import javassist.CtMethod;
import javassist.NotFoundException;
import javassist.bytecode.CodeAttribute;
import javassist.bytecode.LocalVariableAttribute;
import javassist.bytecode.MethodInfo;
 
public class GetParamNamesByJavassist {
    public static void main(String[] args) throws NotFoundException {
        Demo demo = new Demo();
        Method[] methods = demo.getClass().getDeclaredMethods();
        Class clazz = methods[0].getDeclaringClass();
        String methodName = methods[0].getName();
        ClassPool pool = ClassPool.getDefault();
        pool.insertClassPath(new ClassClassPath(clazz));
        CtClass cc = pool.get(clazz.getName());
        CtMethod cm = cc.getDeclaredMethod(methodName);
        MethodInfo methodInfo = cm.getMethodInfo();
        CodeAttribute codeAttribute = methodInfo.getCodeAttribute();
        LocalVariableAttribute attr = 
                (LocalVariableAttribute) codeAttribute.getAttribute(LocalVariableAttribute.tag);
        if (attr == null) {
            System.out.println("params is null");
        }
        String[] paramNames = new String[cm.getParameterTypes().length];
        int pos = Modifier.isStatic(cm.getModifiers()) ? 0 : 1;
        for (int i = 0; i &lt; paramNames.length; i++)
            paramNames[i] = attr.variableName(i + pos);
        for (int i = 0; i &lt; paramNames.length; i++) {
            System.out.println(paramNames[i]);
        }
    }
}</pre><span class="span4br"></span><p><span class="span4br"></span>输出结果：</p><p>a</p><p>b</p><p><span class="span4br"></span></p><p><strong>第二种</strong>：通过Spring的LocalVariableTableParameterNameDiscoverer，相比于javassit，这种方式要简单太多，所以推荐使用这种</p><div class="dp-highlighter bg_java"><pre class="brush:java;toolbar:false;">import java.lang.reflect.Method;
import org.springframework.core.LocalVariableTableParameterNameDiscoverer;
 
public class GetParamNames {
    public static void main(String[] args) {
        LocalVariableTableParameterNameDiscoverer u = 
            new LocalVariableTableParameterNameDiscoverer();
        Demo demo = new Demo();
        Method[] methods = demo.getClass().getDeclaredMethods();
        String[] params = u.getParameterNames(methods[0]);
        for (int i = 0; i &lt; params.length; i++) {
            System.out.println(params[i]);
        }
    }
}</pre><span class="span4br"></span></div><p><span class="span4br"></span>输出结果：</p><p>a</p><p>b</p><p><span class="span4br"></span></p><p> <span class="span4br"></span> <span class="span4br"></span> <span class="span4br"></span> <span class="span4br"></span> &nbsp;<span class="span4br"></span><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>447</wp:post_id>
		<wp:post_date>2014-04-03 16:14:31</wp:post_date>
		<wp:post_date_gmt>2014-04-03 08:14:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava%e5%8f%8d%e5%b0%84%e6%8b%bf%e5%88%b0%e6%96%b9%e6%b3%95%e7%9a%84%e5%8f%82%e6%95%b0%e5%90%8d%e5%88%97%e8%a1%a8%e7%9a%84%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>三星S4电信版本I959去掉照相机声音方法</title>
		<link>http://localhost/wp/?p=451</link>
		<pubDate>Wed, 09 Apr 2014 04:18:19 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=451</guid>
		<description></description>
		<content:encoded><![CDATA[<p>前提已有root权限，使用用RE文件管理器或者adb命令进入到【system\media\audio\ui】目录，</p><p>改名对应文件即可：</p><p>1.快门声音：Shutter.ogg；</p><p><span class="span4br"></span>2.录像提示声音：Cam_Start.ogg和Cam_Stop.ogg分别为录像开始和停止的提示音；</p><p><span class="span4br"></span>3.截图声音：camera_click.ogg；</p><p><span class="span4br"></span>4.开机声音：PowerOn.ogg</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>451</wp:post_id>
		<wp:post_date>2014-04-09 12:18:19</wp:post_date>
		<wp:post_date_gmt>2014-04-09 04:18:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e4%b8%89%e6%98%9fs4%e7%94%b5%e4%bf%a1%e7%89%88%e6%9c%aci959%e5%8e%bb%e6%8e%89%e7%85%a7%e7%9b%b8%e6%9c%ba%e5%a3%b0%e9%9f%b3%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e4%b8%89%e6%98%9fs4"><![CDATA[三星S4]]></category>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转发：Unix install LR agent</title>
		<link>http://localhost/wp/?p=454</link>
		<pubDate>Wed, 30 Apr 2014 08:46:33 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=454</guid>
		<description></description>
		<content:encoded><![CDATA[<p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><strong>安装：</strong></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">1. 先以root登陆要安装load generator的unix服务器。（目前仅支持uname=linux,SunOS,AIX,HP-UX）</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">2. 将LR的unix插件copy到服务器上并解压。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">3. 运行install.sh 的脚本调起安装的wizard。 Next-&gt;Agree-&gt;Confirm Install-&gt;Finish (安装的log写在/tmp目录下)</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">4. 检查目录/opt/HP/HP_LoadGenerator （这个就是loadruner的服务器端插件的主目录了）</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">5. 设置设置几个环境变量</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">LR自带的是csh下的脚本，bash的脚本自己写，然后设置好切shell的时候自动source相应的脚本执行。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">CSH下的脚本：</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">#!/bin/csh</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv PRODUCT_DIR /opt/HP/HP_LoadGenerator</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv M_LROOT $PRODUCT_DIR</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">if ( `uname` == SunOS ) then</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv LD_LIBRARY_PATH ${M_LROOT}/bin</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">else if ( `uname` == Linux ) then</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv LD_LIBRARY_PATH${M_LROOT}/bin:${M_LROOT}/lib:/usr/lib</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">else if ( `uname` == AIX ) then</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv LIBPATH ${M_LROOT}/bin</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">else if ( `uname` == HP-UX ) then</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv SHLIB_PATH ${M_LROOT}/bin</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">endif</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv DISPLAY 0.0</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">setenv PATH ${M_LROOT}/bin:$PATH</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">注意：</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">1.这里Loadrunner原始的脚本给LD_LIBRARY_PATH的设置的值是${M_LROOT}/bin，实则library应该指向安装目录的/opt/HP/HP_LoadGenerator/lib下。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">因此给LD_LIBRARY_PATH设置值为</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">${M_LROOT}/bin:${M_LROOT}/lib:/usr/lib （这里M_LROOT=/opt/HP/HP_LoadGenerator）</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">2.原始Loadrunner只提供了CSH的脚本，bash的自己写一份了，下面是自己写的</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">BASH的脚本</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">#!/bin/bash</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">export PRODUCT_DIR=/opt/HP/HP_LoadGenerator</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">export M_LROOT=$PRODUCT_DIR</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">exportLD_LIBRARY_PATH=$M_LROOT/bin:$M_LROOT/lib:/usr/lib</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">export DISPLAY=&#39;0.0&#39;</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">export PATH=$PATH:$M_LROOT/bin</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">注：没按照原始文件根据uname判断来给LD_LIBRARY_PATH执行不同的值。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">6. 在不同shell的配置里source这两个文件使得切换shell后执行 &nbsp;(以下方法仅适用于CENTOS-linux系统)</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">CSH</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">给文件/etc/csh.cshrc最后增加 source/opt/HP/HP_LoadGenerator/env.csh</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">BASH</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">给文件/etc/profile 最后增加 source/opt/HP/HP_LoadGenerator/env.sh</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">7.切换SHELL 让source的程序文件执行生效或自己手动执行</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">8.检查loadrunner配置环境</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">进入/opt/HP/HP_Loadrunner/bin下，运行verify_generator</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">[jaunty@localhost bin]$ csh</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">===================================================</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">HP</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Vuser Environment Verification Utility</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">=================================================== </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Product: HP LoadRunner 9.50</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Version: 09.50.0000</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Build: 3378</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">localhost.localdomain:</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">提示找不到libstdc++.so.5,就是缺libstdc++5相关包</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">解决办法:</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">yum -y install libstdc++.so.5</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><span style="color:#943634;">安装</span><span style="color:#943634;">libstdc++</span><span style="color:#943634;">时出现的问题：</span></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><span style="color:#943634;">ccc</span><span style="color:#943634;">安装的是：</span><span style="color:#943634;">compat-libstdc++-33.x86_64</span></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><span style="color:#943634;">有的安装的是：</span><span style="color:#943634;">libstdc++-devel-4.1.2-46.el5_4.2.x86_64.rpm</span></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">/opt/HP/HP_LoadGenerator/bin/lrv/chk_thread_lmt:error while loading shared libraries: libstdc++.so.5: cannot open shared objectfile: No such file or directory</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">/opt/HP/HP_LoadGenerator/bin/lrv/limithost:line 134: [: : integer expression expected</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">verify_generator...OK</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">/opt/HP/HP_LoadGenerator/bin/lrv/chk_sems_lmt:error while loading shared libraries: libstdc++.so.5: cannot open shared objectfile: No such file or directory</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">/opt/HP/HP_LoadGenerator/bin/lrv/limithost:line 154: [: : integer expression expected</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">verify_generator...OK</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">verify_generator...OK</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Don&#39;t forget to make sure that the name ofthe controller machine</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">is also in .rhosts</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Verify $M_LROOT ...Failed</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____It was not possible to set the$M_LROOT from</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____the shell dot files. One of severalthings might be happening:</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____1) $M_LROOT is not set at all in theshell dot files.</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____2) There is some error in the shelldot files which stops their execution</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____ before it sets $M_LROOT.</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____3) There is conditional code in theshell dot files (most likely related to</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____ interactive and non interactiveshells) and $M_LROOT is set</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____ only in one of the sections.</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_____Aborting virtual user tests on hostlocalhost.localdomain</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">verify_generator...OK</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">_______________________________________________</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Summary:</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">________</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">Vuser Host localhost.localdomain: Failed</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">只要verify 都通过没有错就可以了。如果其他的没错仅有Verify$M_LROOT ...Failed ，也可以继续使用。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">9. 确认防火墙已经关闭</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">10.运行 m_daemon_setup -install 成功会获取一个 processed</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><span style="color:#943634;">遇到的问题：</span><span style="color:#943634;">verify</span><span style="color:#943634;">时通过但</span><span style="color:#943634;">install</span><span style="color:#943634;">时却报</span><span style="color:#943634;">libstdc++.so.5</span><span style="color:#943634;">找不到。</span></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">PS -auxww| grep m_agent</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">可以看到启动起来的进程信息</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">11.然后在本地的pc测试机里打开controller，设置load generator 不用RSH ，连接后变为ready 成功.</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">12.如果本地connet不上，则先检查服务器和本地测试pc之间的网络互通性再检查两端的防火墙设置。如果还有问题则可在服务器的/tmp目录下看到很多Loadruneragent产生的log，根据时间定位，打开查看细节问题。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><strong>卸载：</strong></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">执行/var/opt/HP/iHP/HP_LoadGenerator/9.50.000/installer.sh</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">按提示操作。即可卸载成功。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"><strong>问题：</strong></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">1．若使用RSH连接，则负载机必安装RSH并正确配罿，正如检测过程中描述的&quot;<span style="color:red;">Don&#39;t forget to make sure that the name of the controllermachine</span>”。</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">2.补充，Linux下似乎只支持Web/Http协议的脚本。譬如WinSock协议，从名称上都知道只适合<a target="_blank" href="http://blog.csdn.net/gzh0222/article/details/17911963" style="color:#ff9900;text-decoration:none;"><span style="color:#000;">Windows</span></a></p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> “<span style="color:red;">Error (-81024): LR_VUG: The &#39;WinSock&#39; type is not supportedon &#39;LINUX&#39; platforms .</span>”</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">另外试了Java协议，确实不行，报错如下</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">“<span style="color:red;">Error (-81024):LR_VUG: The &#39;General-Java&#39; type is not supported on &#39;LINUX&#39; platforms .</span>”</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">3.依赖库：yum -y --disablerepo=\* --enablerepo=AutoInstaller --nogpgcheck--skip-broken localinstall/mnt/CentOS_Final/CentOS/compat-libstdc++-33-3.2.3-61.i386.rpm</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">否则会报：”<span style="color:red;">m_agent_daemon: error while loading shared libraries:libstdc++.so.5: cannot open shared object file: No such file or directory</span>”</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">4.注意hosts文件的配置，如果机器名和hosts里配置不一致也会导致LoadRunner启动失败</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">譬如&quot;<span style="color:red;">Error: Communication error: Failed to get the </span><a target="_blank" href="http://blog.csdn.net/gzh0222/article/details/17911963" style="color:#ff9900;text-decoration:none;"><span style="color:red;">server</span></a><span style="color:red;"> host IP bycalling the gethostbyname function.</span>”</p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;"> </p><p style="margin:0px;padding:0px;color:#000000;font-family:arial;font-size:14px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:26px;orphans:2;text-align:left;text-indent:0px;text-transform:none;widows:2;word-spacing:0px;-webkit-text-size-adjust:auto;-webkit-text-stroke-width:0px;background-color:#ffffff;">5.运行verify_generator时提示/tmp/host.文件权限不够。因/tmp文件夹只有root用户有写权限，权限更改a+x后解决。</p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>454</wp:post_id>
		<wp:post_date>2014-04-30 16:46:33</wp:post_date>
		<wp:post_date_gmt>2014-04-30 08:46:33</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%e5%8f%91%ef%bc%9aunix-install-lr-agent</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="%e6%80%a7%e8%83%bd%e7%9b%b8%e5%85%b3"><![CDATA[性能相关]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转:HttpClient Cookies </title>
		<link>http://localhost/wp/?p=457</link>
		<pubDate>Tue, 13 May 2014 07:30:50 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=457</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://blog.csdn.net/mgoann/article/details/4057064">http://blog.csdn.net/mgoann/article/details/4057064</a></p><p><span class="span4br"></span></p><span class="span4br"></span><div id="article_content" class="article_content"><p style="text-align:center;text-align:center;"><span style="font-size:21px"><span style="font-family:times new roman">HttpClient Cookies</span></span></p><p><strong><span style="font-size:small"><span style="font-family:宋体;color:#3366ff">简介</span></span></strong></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:times new roman">HttpClient</span><span style="font-family:宋体">支持自动管理</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">，允许服务端设定</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">，并在请求时自动返回客户端的</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">信息。客户端也可以手动的设置</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">发送到服务端。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-family:宋体"><span style="font-size:small">不幸的是，同一时间内有太多的</span></span><a name="OLE_LINK1"><span style="font-family:times new roman;font-size:small">Cookies</span></a><span style="font-size:small"><span style="font-family:宋体">标准：</span><span style="font-family:verdana;color:black"> Netscape Cookie, RFC2109, RFC2965 </span><span style="font-family:宋体;color:black">以及大量供应商不符合规范的自定义</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体;color:black">标准。针对此，</span><span style="font-family:verdana;color:black">HttpClient</span><span style="font-family:宋体;color:black">提供</span><span style="font-family:verdana;color:black">Cookies</span><span style="font-family:宋体;color:black">管理策略驱动。这片文章意在阐述怎么样去使用不同标准的</span><span style="font-family:verdana;color:black">Cookies</span><span style="font-family:宋体;color:black">以及如何解决在使用</span><span style="font-family:verdana;color:black">Cookies</span><span style="font-family:宋体;color:black">和</span><span style="font-family:verdana;color:black">HttpClient</span><span style="font-family:宋体;color:black">时一些共同的问题。</span></span></p><p><span style="font-family:verdana;color:black"><span style="font-size:small"> </span></span></p><p><strong><span style="font-size:small"><span style="font-family:宋体;color:#3366ff">支持的规格</span></span></strong></p><p><span style="font-family:verdana;color:black"><span style="font-size:small"> </span></span></p><p><span style="font-size:small"><span style="font-family:宋体;color:black">以下</span><span style="font-family:verdana;color:black">Cookies</span><span style="font-family:宋体;color:black">标准，</span><span style="font-family:verdana;color:black">HttpClient3.1</span><span style="font-family:宋体;color:black">可以支持。</span></span></p><p><span style="font-family:verdana;color:black"><span style="font-size:small"> </span></span></p><p><strong><span style="font-size:small"><span style="font-family:verdana;color:#666699">RFC2109</span></span></strong></p><p><span style="font-family:verdana;color:black"><span style="font-size:small"> </span></span></p><p><span style="font-size:small"><span style="font-family:times new roman">RFC2109</span><span style="font-family:宋体">是</span><span style="font-family:times new roman">W3C</span><span style="font-family:宋体">组织第一次推出的官方</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">标准。理论上，所有使用版本</span><span style="font-family:times new roman">1Cookies</span><span style="font-family:宋体">的服务端都应该使用此标准。</span><span style="font-family:times new roman">HttpClient</span><span style="font-family:宋体">已经将此标准设定为默认。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:宋体">遗憾的是，许多服务端不正确的实现了标准或者仍然使用</span><span style="font-family:times new roman">Netscape</span><span style="font-family:宋体">标准。所有有时感到此标准太多于严格。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:times new roman">RFC2109</span><span style="font-family:宋体">是</span><span style="font-family:times new roman">HttpClient</span><span style="font-family:宋体">使用的默认</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">协议。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><strong><span style="font-family:verdana;color:#666699"><span style="font-size:small">RFC2965</span></span></strong></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:times new roman">RFC2965</span><span style="font-family:宋体">定义了版本</span><span style="font-family:times new roman">2</span><span style="font-family:宋体">并且尝试去弥补在版本</span><span style="font-family:times new roman">1</span><span style="font-family:宋体">中</span><span style="font-family:times new roman">Cookie</span><span style="font-family:宋体">的</span><span style="font-family:times new roman">RFC2109</span><span style="font-family:宋体">标准的缺点。</span><span style="font-family:times new roman">RFC2965</span><span style="font-family:宋体">是，并规定</span><span style="font-family:times new roman">RFC2965</span><span style="font-family:宋体">最终取代</span><span style="font-family:times new roman">RFC2109.</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:宋体">发送</span><span style="font-family:times new roman">RFC2965</span><span style="font-family:宋体">标准</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">的服务端，将会使用</span><span style="font-family:times new roman">Set-Cookie2 header</span><span style="font-family:宋体">添加到</span><span style="font-family:times new roman">Set-Cookie Header</span><span style="font-family:宋体">信心中，</span><span style="font-family:times new roman">RFC2965 Cookies</span><span style="font-family:宋体">是区分端口的。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><strong><span style="font-family:verdana;color:#666699">Netscape</span></strong><strong><span style="font-family:宋体;color:#666699">标准</span></strong></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:times new roman">Netscape</span><span style="font-family:宋体">是最原始的</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">规范，同时也是</span><span style="font-family:times new roman">RFC2109</span><span style="font-family:宋体">的基础。尽管如此，还是在很多重要的方面与</span><span style="font-family:times new roman">RFC2109</span><span style="font-family:宋体">不同，可能需要特定服务器才可以兼容。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><strong><span style="font-family:verdana;color:#666699"><span style="font-size:small">Browser Compatibility</span></span></strong></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:宋体">这种兼容性设计要求是适应尽可能多的不同的服务器，尽管不是完全按照标准来实现的。如果你遇到了解析</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">的问题，你就可能要用到这一个规范。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><span style="font-size:small"><span style="font-family:宋体">有太多的</span><span style="font-family:times new roman">web</span><span style="font-family:宋体">站点是用</span><span style="font-family:times new roman">CGI</span><span style="font-family:宋体">脚本去实现的，而导致只有将所有的</span><span style="font-family:times new roman">Cookies</span><span style="font-family:宋体">都放入</span><span style="font-family:times new roman">Request header</span><span style="font-family:宋体">才可以正常的工作。这种情况下最好设置</span><span style="font-family:times new roman">http.protocol.single-cookie-header</span><span style="font-family:宋体">参数为</span><span style="font-family:times new roman">true</span><span style="font-family:宋体">。</span></span></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p><strong><span style="font-family:verdana;color:#666699"><span style="font-size:small">Ignore Cookies</span></span></strong></p><p><span style="font-family:times new roman;font-size:small"> </span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-size:small"><span style="font-family:宋体">此规格忽略所有</span><span style="font-family:tahoma">Cookie </span><span style="font-family:宋体">。被用来防止</span><span style="font-family:tahoma">HttpClient</span><span style="font-family:宋体">接受和发送的</span><span style="font-family:tahoma">Cookie</span><span style="font-family:宋体">。</span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small"> </span></span></p><p><strong><span style="color:#3366ff"><span style="font-family:times new roman"><span style="font-size:small">Spacifying the Specification</span></span></span></strong></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small"> </span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-size:small"><span style="font-family:宋体">有俩中方式去规定使用哪种</span><span style="font-family:tahoma">Cookies</span><span style="font-family:宋体">规范，每个</span><span style="font-family:tahoma">HttpMethod</span><span style="font-family:宋体">实例都有</span><span style="font-family:tahoma">HttpMethodParams</span><span style="font-family:宋体">，他的</span><span style="font-family:tahoma">policy</span><span style="font-family:宋体">值必须使用方法</span><span style="font-family:tahoma">CookiePolicy.registerCookieSpec()</span><span style="font-family:宋体">来注册。</span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small"> </span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small">HttpMethod method = new GetMethod();</span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small">Method.getParams().setCookiePolicy(CookiePolicy.RFC_2109);</span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small"> </span></span></p><p><strong><span style="font-size:small"><span style="font-family:宋体;color:#3366ff">手动处理</span><span style="color:#3366ff"><span style="font-family:times new roman">Cookies</span></span></span></strong></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small"> </span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-size:small"><span style="font-family:tahoma">HttpClient</span><span style="font-family:宋体">的</span><span style="font-family:tahoma">Cookie</span><span style="font-family:宋体">管理</span><span style="font-family:tahoma">API</span><span style="font-family:宋体">可以手动处理</span><span style="font-family:tahoma">Cookie</span><span style="font-family:宋体">。可以手动设置</span><span style="font-family:tahoma">Requset</span><span style="font-family:宋体">的</span><span style="font-family:tahoma">Cookie headers</span><span style="font-family:宋体">或是处理</span><span style="font-family:tahoma">Response</span><span style="font-family:宋体">的</span><span style="font-family:tahoma">Set-Cookie</span><span style="font-family:宋体">的</span><span style="font-family:tahoma">headers</span><span style="font-family:宋体">或是用自动</span><span style="font-family:tahoma">Cookie</span><span style="font-family:宋体">管理去代替。</span></span></p><p style="text-align:left;line-height:19px;background:#f7f9fd;text-align:left;"><span style="font-family:tahoma"><span style="font-size:small"> </span></span></p><p><span style="font-family:times new roman;font-size:small">HttpMethod method = new GetMethod();</span></p><p><span style="font-family:times new roman;font-size:small">Method.getParams().setCookiePolicy(CookiePolicy.IGNORE_COOKIES);</span></p><p><span style="font-family:times new roman;font-size:small">Method.setRequestHeader(“Cookie”, “special_cookie=value”);</span></p></div><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>457</wp:post_id>
		<wp:post_date>2014-05-13 15:30:50</wp:post_date>
		<wp:post_date_gmt>2014-05-13 07:30:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%achttpclient-cookies</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<category domain="category" nicename="net"><![CDATA[网络通信]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：将System.out输出到文件和控制台的简单方法</title>
		<link>http://localhost/wp/?p=460</link>
		<pubDate>Thu, 22 May 2014 11:53:47 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://wpblogs.duapp.com/?p=460</guid>
		<description></description>
		<content:encoded><![CDATA[<p>转自：<a href="http://www.carygao.info/archives/92">http://www.carygao.info/archives/92</a></p><p><span class="span4br"></span></p><span class="span4br"></span><p>原文：<a title="A quick and easy way to direct Java System.out to File and to Console" href="http://www.codeproject.com/Tips/315892/A-quick-and-easy-way-to-direct-Java-System-out-to" target="_blank">A quick and easy way to direct Java System.out to File and to Console</a></p><p>如果你想将System.out和System.err的结果输出到文件和控制台中，请直接看下面代码示例。</p><p>使用Google去搜索“Java stdout 输出到文件和控制台中”，这个问题答案简单到爆，但悲剧的是前几页几乎没答案。于是俺决定写一个简单的方法，希望码农们未来不要总花那么长时间来处理这些麻烦。</p><p>那么如何不用极度荒唐的方法来实现将System.out或System.err同时输出到文件和控制台中呢？简单来说，只需要写一个继承自OutputStream的实现类然后用它构造一个PrintStream实例，最后调用System把PrintStream放进去。</p><p><span class="span4br"></span></p><pre class="brush:java;toolbar:false;">public class MultiOutputStream extends OutputStream
{
    OutputStream[] outputStreams;
 
    public MultiOutputStream(OutputStream... outputStreams)
    {
        this.outputStreams= outputStreams;
    }
 
    @Override
    public void write(int b) throws IOException
    {
        for (OutputStream out: outputStreams)
            out.write(b);
    }
 
    @Override
    public void write(byte[] b) throws IOException
    {
        for (OutputStream out: outputStreams)
            out.write(b);
    }
 
    @Override
    public void write(byte[] b, int off, int len) throws IOException
    {
        for (OutputStream out: outputStreams)
            out.write(b, off, len);
    }
 
    @Override
    public void flush() throws IOException
    {
        for (OutputStream out: outputStreams)
            out.flush();
    }
 
    @Override
    public void close() throws IOException
    {
        for (OutputStream out: outputStreams)
            out.close();
    }
}</pre><p>下一步构造一个PrintStream实例放在System中：</p><p><span class="span4br"></span></p><pre class="brush:java;toolbar:false;">try
{
    FileOutputStream fout= new FileOutputStream("stdout.log");
    FileOutputStream ferr= new FileOutputStream("stderr.log");
 
    MultiOutputStream multiOut= new MultiOutputStream(System.out, fout);
    MultiOutputStream multiErr= new MultiOutputStream(System.err, ferr);
 
    PrintStream stdout= new PrintStream(multiOut);
    PrintStream stderr= new PrintStream(multiErr);
 
    System.setOut(stdout);
    System.setErr(stderr);
}
catch (FileNotFoundException ex)
{
    //Could not create/open the file
}</pre><p>现在你在任意地方使用System.out或System.err，最后去文件和控制台中查看输出结果。</p><pre class="brush:java;toolbar:false;">System.out.println("Holy Rusty Metal Batman! I can't believe this was so simple!");
System.err.println("God I hate you Robin.");</pre><p><span class="span4br"></span></p><p><span class="span4br"></span></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>460</wp:post_id>
		<wp:post_date>2014-05-22 19:53:47</wp:post_date>
		<wp:post_date_gmt>2014-05-22 11:53:47</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9a%e5%b0%86system-out%e8%be%93%e5%87%ba%e5%88%b0%e6%96%87%e4%bb%b6%e5%92%8c%e6%8e%a7%e5%88%b6%e5%8f%b0%e7%9a%84%e7%ae%80%e5%8d%95%e6%96%b9%e6%b3%95</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>eclipse运行的java设置代理</title>
		<link>http://localhost/wp/?p=466</link>
		<pubDate>Thu, 12 Jun 2014 11:19:51 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://localhost/wp/?p=466</guid>
		<description></description>
		<content:encoded><![CDATA[在vm参数中增加如下设置<br />
<pre class="brush:shell;first-line:1;pad-line-numbers:true;highlight:null;collapse:false;">
-Dhttp.proxyHost=127.0.0.1 -Dhttp.proxyPort=8888

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>466</wp:post_id>
		<wp:post_date>2014-06-12 19:19:51</wp:post_date>
		<wp:post_date_gmt>2014-06-12 11:19:51</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>eclipse%e8%bf%90%e8%a1%8c%e7%9a%84java%e8%ae%be%e7%bd%ae%e4%bb%a3%e7%90%86</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：windows7下彻底卸载/删除微软拼音输入法2007 </title>
		<link>http://localhost/wp/?p=469</link>
		<pubDate>Mon, 23 Jun 2014 08:33:35 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://localhost/wp/?p=469</guid>
		<description></description>
		<content:encoded><![CDATA[转自：http://chensu686.blog.163.com/blog/static/4995003520101029115652429/<br />
<br />
<div class="bct fc05 fc11 nbw-blog ztag">
	<p style="TEXT-INDENT: 2em;">
		windows7下任务栏的语言设置里没有&ldquo;拼音输入法2007&rdquo;的选项。</p>
	<p style="TEXT-INDENT: 2em;">
		所以，先用如下命令：</p>
	<p style="TEXT-INDENT: 2em;">
		在 开始 〉运行 中输入(或复制)<br />
		MsiExec.exe /X{90120000-0028-0804-0000-0000000FF1CE}</p>
	<p style="TEXT-INDENT: 2em;">
		卸载后</p>
	<p style="TEXT-INDENT: 2em;">
		语言里出现&ldquo;拼音输入法2007&rdquo;的选项，删除即可。</p>
</div>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>469</wp:post_id>
		<wp:post_date>2014-06-23 16:33:35</wp:post_date>
		<wp:post_date_gmt>2014-06-23 08:33:35</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9awindows7%e4%b8%8b%e5%bd%bb%e5%ba%95%e5%8d%b8%e8%bd%bd%e5%88%a0%e9%99%a4%e5%be%ae%e8%bd%af%e6%8b%bc%e9%9f%b3%e8%be%93%e5%85%a5%e6%b3%952007</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="other"><![CDATA[其他类]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
				<title>转：Java：判断文件的编码</title>
		<link>http://localhost/wp/?p=471</link>
		<pubDate>Thu, 26 Jun 2014 03:18:45 +0000</pubDate>
		<dc:creator><![CDATA[bwgang]]></dc:creator>
		<guid isPermaLink="false">http://localhost/wp/?p=471</guid>
		<description></description>
		<content:encoded><![CDATA[转自：http://www.cppblog.com/biao/archive/2009/11/04/100130.aspx<br />
<br />
<span><span style="font-family: ËÎÌå; font-size: 12px; line-height: 18px; -webkit-border-horizontal-spacing: 8px; -webkit-border-vertical-spacing: 8px; ">首先，不同编码的文本，是根据文本的前两个字节来定义其编码格式的。定义如下：<br />
<br />
&nbsp;&nbsp;ANSI：　　　　　　　　无格式定义；<br />
&nbsp;&nbsp;Unicode： 　　　　　　前两个字节为FFFE；<br />
&nbsp;&nbsp;Unicode big endian：　前两字节为FEFF；　&nbsp;<br />
&nbsp;&nbsp;UTF-8：　 　　　　　　前两字节为EFBB；　<br />
<br />
&nbsp;&nbsp;知道了各种编码格式的区别，写代码就容易了.</span></span><br />
<!--more--><!--more--><br />
<pre class="brush:java;first-line:1;pad-line-numbers:true;highlight:null;collapse:false;">
    public static String get_charset( File file ) {   
            String charset = &quot;GBK&quot;;   
            byte[] first3Bytes = new byte[3];   
            try {   
                boolean;   
                BufferedInputStream bis = new BufferedInputStream( new FileInputStream( file ) );   
                bis.mark( 0 );   
                int read = bis.read( first3Bytes, 0, 3 );   
                if ( read == -1 ) return charset;   
                if ( first3Bytes[0] == (byte) 0xFF &amp;&amp; first3Bytes[1] == (byte) 0xFE ) {   
                    charset = &quot;UTF-16LE&quot;;   
                    checked = true;   
                }   
                else if ( first3Bytes[0] == (byte) 0xFE &amp;&amp; first3Bytes[1] == (byte) 0xFF ) {   
                    charset = &quot;UTF-16BE&quot;;   
                    checked = true;   
                }   
                else if ( first3Bytes[0] == (byte) 0xEF &amp;&amp; first3Bytes[1] == (byte) 0xBB &amp;&amp; first3Bytes[2] == (byte) 0xBF ) {   
                    charset = &quot;UTF-8&quot;;   
                    checked = true;   
                }   
                bis.reset();   
                if ( !checked ) {   
                //    int len = 0;   
                    int loc = 0;   
      
                    while ( (read = bis.read()) != -1 ) {   
                        loc++;   
                        if ( read &gt;= 0xF0 ) break;   
                        if ( 0x80 &lt;= read &amp;&amp; read &lt;= 0xBF ) // 单独出现BF以下的，也算是GBK   
                        break;   
                        if ( 0xC0 &lt;= read &amp;&amp; read &lt;= 0xDF ) {   
                            read = bis.read();   
                            if ( 0x80 &lt;= read &amp;&amp; read &lt;= 0xBF ) // 双字节 (0xC0 - 0xDF) (0x80   
                                                                            // - 0xBF),也可能在GB编码内   
                            continue;   
                            else break;   
                        }   
                        else if ( 0xE0 &lt;= read &amp;&amp; read &lt;= 0xEF ) {// 也有可能出错，但是几率较小   
                            read = bis.read();   
                            if ( 0x80 &lt;= read &amp;&amp; read &lt;= 0xBF ) {   
                                read = bis.read();   
                                if ( 0x80 &lt;= read &amp;&amp; read &lt;= 0xBF ) {   
                                    charset = &quot;UTF-8&quot;;   
                                    break;   
                                }   
                                else break;   
                            }   
                            else break;   
                        }   
                    }   
                    //System.out.println( loc + &quot; &quot; + Integer.toHexString( read ) );   
                }   
      
                bis.close();   
            } catch ( Exception e ) {   
                e.printStackTrace();   
            }   
      
            return charset;   
        }   

</pre>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>471</wp:post_id>
		<wp:post_date>2014-06-26 11:18:45</wp:post_date>
		<wp:post_date_gmt>2014-06-26 03:18:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>%e8%bd%ac%ef%bc%9ajava%ef%bc%9a%e5%88%a4%e6%96%ad%e6%96%87%e4%bb%b6%e7%9a%84%e7%bc%96%e7%a0%81</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="java"><![CDATA[JAVA]]></category>
		<category domain="category" nicename="code"><![CDATA[编程语言]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
